%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: <8BBA><6587><7ED8><56FE>1.pdf
%%Creator: Adobe Acrobat 19.8.0
%%For: 19229
%%CreationDate: 2024/10/30, 22:38:12
%%BoundingBox: 0 0 332 769
%%HiResBoundingBox: 0 0 331.9570 768.1041
%%CropBox: 0 0 331.9570 768.1041
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1096 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 91.163280, 2018/06/22-11:31:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2024-10-30T22:01:08+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2024-10-30T22:01:08+08:00"
   xmp:MetadataDate="2024-10-30T21:59:03+08:00"
   pdf:Producer="Acrobat Distiller 19.0 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:1835c997-753b-44ea-9c7b-38222100641e"
   xmpMM:InstanceID="uuid:4c28e0ae-b216-4642-bf77-8473ac1207d7">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">&lt;C2DBCEC4BBE6CDBC2E70707478&gt;</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>19229</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
^TFR!z"]^0T##p0S#ZQ9R#uc9Q$WMEP%o[]Q&6!`P&lNfO'N/rO(/\uM(f5#K)c(5L*DgAK+AcSK+\uM
H,>VVG,Yq\G-;I_E.8<kD.o'(E/PT+C02,1B0MG4A1/(=@1eU@>2+pC=2bZR=3D2X<4%_[:4\7^85=mm
95tEp76V0$577f367n>6484P018Ok3091C6.9gp<-:IZH,;+;Q+;FMQ*<(.Z)<C@T&<^[T$=@3T!>!r_
u>XJl!?:+tu#?66S%9%NP(K##L)Gk2L*`-AI.8<qF/ko1C1J::>4A%a:6V0*784P329L^9-:.HE,:duN
,<(.W(<^[W%=@3Z#>!`]!?:"ks$WDHR&Q<fP*)UDM*`-GK,#;SH-V[_D.8EkC/59(D0hb:A2bHL=5tF!
97S#048k190;ahW*=%!W#=[NZ!>=8eu>senu?pXtr$<)?Q'iAoM+AcPJ,u.\F2G-C<3_DX;5Y*j76:s'
76qK07:.6B-<CIT%>=8l"?U=qs@6jtq$rhNQ.SWtE3(lU=9h$?-=%!]%=[N`#@R1%q)c:;L6:a$8@mL(
p@R1"pA3^+pAjHCsBL)Uu+\uSJBgD_!$rhKPAO6@sB0cLtBgD_!AO$4qC-_h"$<)BR.S`nB#?60Q$WDB
P*)U>K)Gk5M.SWnC3(lO;*Dg>J:IZB*2G-F=77f-47n>*0AjQIt?U=kqA3^+p&lN`M0MG1@1JC=>:.6<
+AO$4qBL)Uu3_DR9,u.VD>sekt%o[WO8k13.)c15K;ahK&"]^-S6:`s6/PT(B@R1"p(/\oK2bHI<;+;N
*BgD_!,#;MF>!i`!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
^TFR!z"]^0T##p0S#uc9Q%o[]Q'iAoM)c:;L+\uMH-;RhG/59(D0MG4A2+pC=3_DX;5Y*j777f368Ok3
0:.?E-;ahW*<^[T$>=&\t?U=kq@mL(pBL)UuC-_h"?U=qsBL)Uu^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
^TFR!z>XAeu?pXtrA3^+pBgD_!C-_h"=%!W#>XAbt<(.Z):IZH,BL)Uu8k190?pXqqBgD_!7S#04AO$4
q5tEp7=@3Z#>sSet@6jtq4%_[::IZB*;ahK&=@3T!2G-C<7S#*2:duN,AO$4q0hb:A4%_X97n>6491C<
0>sSbs/PT+C1/(=@4A%a:6:a$8<(.W(-VmnG2bHL=91C6.BgD_!,#;SH-VmhE@6t"qAj?=r*)U>K,>V\
I.8EtF6:`s6?9nkt@R1%q(/\uM*Dg>J2bHI<=[NZ!&Q<fP(K##L/ko1C;+;Q+<(.Q&$WDHR,>VVG7S#'
19L^?/AjQIt#?66S4A%[86V'*884P32>sehs##p0S1J::>3(cR=4\7^8<C@T&"]^0T$WDBP9L^9-B0cL
t.Sa"E9Lg<-@mL.r*`-AI,Yh\H6V0$5>!`]!?:"ks@R1"p&Q<`N(f5#K3(lO;;+;N*<CIT%>!i`!%8qN
Q&lNfO02,1B9h-E.;FMQ*,Z%_G6qK0784P01B0cLt3D2X<5=mm9?:+kr(fG,L1eUF@<^[W%$rhKP1eU@
>9h-?,@mC%pBL)Uu+AcSK,u7eH.o'(E?U=qs@mL(p),Y,K+AcPJ6qK*5<^[T$>=&c!%9%NP'N/rO3D2U
;:.?E-;FVQ)>=&\t#ZQ9R0MG4A8Ok92;ahW*,u@eG5Y*p977f368Ok30BL)Uu2+pI?3_DX;5Y*j7?U=k
q2+pC==%!]%%9%HN-;RhG:.HE,A3^+p)c:;L+\uSJ/59(D'iAoM+\uMH77f-4;ahQ(#uc<R%o[]Q3_DR
98k(60#uc9Q5tF!9-;RbE2G-F=%o[WO)c:5J,#;VI&6!`P"]^-S$<)BR$<)?Q=[N`#&6!]OAj?=r-r*e
C6V'$68Ok<3$rV?N:duH*>sS_r3(cL;5=ms;#ZQ?T##p*Q/ko+A'iJrM,Yq\G^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
/3 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
^TFR!z"]^0T##p0S#?66S#ZQ9R#uc9Q$<)BR$<)?Q$WDHR$WDBP$rhNQ$rhKP%9%NP%9%HN%o[]Q&6!`
P&6!]O&Q<fP&Q<`N&lNfO&lN`M'N/rO'iAoM(/\uM(K##L(f5#K)Gk2L)c15K)c:;L*)U>K*Dg>J*`-G
K*`-AI+AcSK+AcPJ+\uSJ+\uMH,#;SH,>V\I,>VVG,Yh\H,u._G-;IeG-V[bE.8<qF.Sa"E.8EkC.o'(
E/59(D/PT+C/ko1C02,1B0MG4A0hb:A1/(CB1/(=@1J:@@1J::>1eUF@1eU@>2+pC=2G-F=2G?L=2bZU
>3(lU=3D2X<3_DX;3_DR94%_[:4A%a:4\7^85=mm95Y*j75tF!95tEp76:a$86:`s66V'*86V'$66qK*
577f3677f-47S#047S#*27n>647S#'184P327n>*084P018Ok308Ok-.8k1908k13.91C6.91C0,9L^9
-9h$?-:.6B-:.6<+:dlN-:IQB+:duN,:duH*;+;N*;FMQ*;FVQ);ahW*;ahQ(<(.Z);ahK&<(.W(<(.Q
&<C@T&<^[W%<^[T$=%!]%=%!W#=@3Z#=@3T!=[N`#>!`]!>=&c!>=8l">XJl!>senu?:+tu?:"ks?U=q
s?pXtr@6k%s@6jtq@R1+s@mL.r@R1"p@mC%p@mL(pA3^+pA3^+pAO$4qAjHCsAjQItB0cLtB0cLtBL)U
uBL)UuBgD_!BgD_!AO6@s@R1%q>!r_u=[NZ!<CIT%;+;Q+:IZB*84P*/6qK072G?R?2+pI?0hb=B.o&t
B-;I_E,u.\F,Yq\G,#;VI*DgAK*)UDM)c(5L'iJrM'2icL%o[WO##p*Q#ZQBU#ZQ?T#uc<R%8qNQ(/\o
K(f4rI-V[_D.8EtF-r*eC3D2U;6V0$5?pXqqAO6@sC-_h"^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
/4 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 145 
/Lookup <~
/ko1C#uc9Q"BC3W"]^0T9h$?-.SWnC#ZQ?T"]^6V?pXtr.SWtE#?66S"BL3VBgD_!@6jtq:IQB+.o'(E
#ZQ9RC-_h"BgD_!@6k%s:.66).nitDCHqk":.6<+.ninBCHqk"@R1%q:IQ<)/PT+C:IZ?)/PB"B@R1+s
:duH*02,4C$<)BR;+;Q+02,1B$<)?Q@R1"p;+;N*0MG4A0MG:C;FVQ)0hb:A$WDBP@mC%p0hb4?@R1"p
;FMQ*;ahW*1/(=@$WD<N@R0to;ahQ(1J::>%8qNQ1J:@@$rV?N;ahK&1eUF@%9%NPA3^+p1eU@>@mL(p
<(%Q'2+pI?%T7NOA3p7r<(.Q&2G-F=%o[]Q<(.W(<'qH%2G-C<%oRTOC-_h"A3^+p<CIT%2bHI<&6!`P
<C@T&A3p7r3(cR=&Q<fPAO$4q<^[T$3CuO;<^[W%&Q3fQAO6@s3CuL:&Q<`N3_DX;3_;U;&lNfOAO$4q
=%!W#4%_X9&lN`M4@qa;AO6@s4@h[:'N/rOAj?=r=@3T!4A%[8'iAoM"]^<X4\7^84\.[8Aj?=r=[N`#
5=mm9(/\uMAjHCsAjQIt=[NZ!5"R^6(K##LB0cLt>!`]!5tEp7>!`c#5Y3m7),P2N(f5#K"BC'S>!i`!
6:`s6)Gk2L)Gk5MB0cLt>=&c!6V'$6)c(5L>=&\t)c15K>=8l"BL)Uu>XAeu6q9!4)c12J77T*5*)C/H
>!rf"6V'*8~>
>>
/CSD add_res
/5 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
^TFR!zz"TeZ($O$M1%0lk5#Qt,-!s&B%$jH\3+V=\S2B;bt9J$5E@QXVjHVFJ?OBhhdRUcBuTksc0W,r
">Z?uWP\V1"`^P`'l^5;mj[XnJZY'C!IV/ZJ8Sn\6*Q=9goLfXQVECBj-=>g-Z6RMj6/K"Ng)%6KF0cC
#l<\sdVIo-1GYBp6LQ!s^nDF=I)7k+K=+qXeT"T\T'/f=Wh<&4LSI89hCW,_k<\q^7cCI/"$6mr$8)\2
oK$3U>/5U6=0ISTqD\:Xb]U2Br2-5HR]&d\O<9.U&CMcp)\]SHOfXa'mH0cL)m"9AK&!<<*"(CU9D"9J
Q'9e?>FKiJ*Q,SU4Y81=N=WH8+?+:nMQ+VFbTAj67q"p4i*!WW3#?on>gVfMh<-l)d_N*?8^:+cMH%L2
t6V/H>6ANg(oRqMd%;_e=QNa)Pa6RMj6J5Q@I//S?eGY8#:67)[4Z@2cRF\)Q5+qjqV7O\<;8La]?P[O
OlJPlIJBKuOt%gN(7.Mr-cT5"?+:G2\JL/n9S,o$C[5pZL2SS8'(]8-FeG";T5*Y8;ONEZA_@m'el<AX
[U["&,VH;+A>4X'k+#6Y#,&dJC:X*+ICCI%q#0H0ul>rVfaZ$ZNO'aap@3$/,#?TJ/eM-0fY\:jn_.2D
m`#6Or+4sU+.KN%pOU20f0YBp6LP$e7iH;";=2')_t$O$M1!<<*"'*nR<(CC-B#m:5.*"DrK2BMo!I80
bB*=i,MR:Q?uJl;XL%L)n5#Qk&,F%?921*$>p>;lN^3?S;%HqjYA[t=Y\:bMeK3[+P("p4i*S7_g%E^g
$/'F=a>G=hi8+:nMQ0cU/n)[ucI1E6ApQX^!q;(qtM.2MsaMHKoZ=>U!X5:$:0C-_h"K2_gN=Z$0Z<AO
UTP@+@j@64Gh0,afj2]_r!=uZK^BgD_!?9%uc:bVkL8h0lA4<jh+1`QJq>W;]`P$S+g$3^D0=uH?\'FF
g?>r_lbUMp25,81%WT54K-B0Q@rGt\2<O'M_cN*62]=#BsXTPFN-["&,V-PZU]:+cMHF@Q<2Jl;XLP[O
Ol.i/0c((1*B748-94!=S()[ucI&I8@:D*n:')@ZZH/fF]iE(0g-*tJ>O-56F[^TFR!^TFR!^TFR!^TF
R!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TF
R!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
/6 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
^TFR!zz.Mr-c=Z$0ZE^g$/DF=I)<AOUT2BMo!$3U>/.i/0cP[OOl^P`'l^5;mjP@+@j=uH?\-5HR]!WW
3#@64Gh["&,VISTqD7k+K=((1*BU20f0BKuOt1`QJq#6Or+]8-FeNa)Pa+VFbTLK4BTYBp6LGt\2<67)
[4&I8@:*Y8;OSS8'(@QXVj0,afj"T\T'\:Xb];_e=Q4!=S(CI%q#VJuS9\V1"`LfXQV:bMeK*=i,MP$e
7i:bVkL)%6KF9.U&CJl;XL[XnJZX*+ICF%?924sU+.$jH\3#m:5.'*nR<.2Msa>rVfaQ=9goQX^!q>r_
lb!s&B%3$/,#T54K-$O$M14<jh+WH8+?[t=Y\Jl;XLANg(o*"DrK:+cMHKiJ*Q\:jn_D*n:'VfMh<0cL
)m"9JQ'/K"Ng?on>gRqMd%=>g-Z,o$C[!<<*")@ZZH\q^7c"p4i*%L)n55U6=0G=hi8Y'C!IZ[MlSI80
bB7O\<;'FFg?Mcp)\+:nMQTksc0B0Q@r1E6Ap"p4i*K2_gNT5"?+N*?8^<&4LS+V=\S+:nMQ6mr$8H;+
A>Z?uWPYBp6LGY8#:5pZL2%L2t6!<<*",81%W<\sdVO'M_c]SHOfS7_g%/f=Wh?TJ/e#Qk&,2')_tC-_
h"UMp25L/n9S:G2\JR:Q?u(CC-B8La]?Io-1G["&,V-PZU]=uZK^P[OOl.2Dm`$3^D03?S;%W,_k<8h0
lAF\)Q5)[ucI9J$5EV/H>6BgD_!Xa'mH?9%uc*tJ>OF@Q<2XEOXE;DA.OMHKoZ)\2oK0cC#l+qXeTECB
j-#Qt,-Sn\6*"TeZ(%gN(7)[ucIN*62]TPFN-W,r">?TJ/e=#BsX6RMj60cU/nAj67q'F=a>748-9Hqj
YAZ@2cR$O$M1,SU4Y=>U!X#6Y#,OBhhdRUcBu'aap@CI/"$(^g<D3[+P(81=N=HVFJ?JPlIJ@m'el2]_
r!-l)d_>W;]`V/ZJ8U2Br2Q!s^n>;lN^5:$:0+qjqV(CU9D;(qtM:+cMH"9AK&NEZA_//S?eRUuO"2B;
btG";T5&d\O<H;";=M-0fYJ5Q@IP$S+g%0lk5&dJC:KN%pOZ$ZNO4X'k+E(0g-6RMj6^TFR!^TFR!^TF
R!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TF
R!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
/7 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
^TFR!z(CC-B:G2\JE^g$/LK4BTS7_g%Xa'mHYBp6L[Y+V\]SHOf^5;mj]nudi[XnJZP@+@j=>U!X2B;b
t%0lk5"p4i*;DA.ORUcBu^P`'lP[OOl<AX[U(^g<D!WW3#7O\<;XEOXEIo-1G-PZU]z'F=a>R:Q?uOBh
hd*"DrK-5HR]Y'C!I]8-Fe=#BsX0cU/n\q^7cW,r">K2_gNJPlIJ\V1"`["&,V'FFg?*=i,MNa)Pa748
-9X*+IC$O$M13[+P(GY8#:)%6KF$O$M1V/ZJ8SS8'(0,afj!s&B%4X'k+UMp25*Y8;OF\)Q5H;+A>"Te
Z(9.U&CZ@2cR*tJ>O+:nMQC-_h"#Qt,-J5Q@IVfMh<$jH\3LfXQVM-0fY>r_lb)[ucI[t=Y\=uZK^/K"
Ng=Z$0ZF@Q<2RUuO"!<<*"QX^!q#m:5.["&,V67)[4;(qtM"9AK&U20f03$/,#0cC#l2BMo!5pZL26mr
$8,SU4Y"p4i*DF=I):bMeKSn\6*5U6=0+VFbTD*n:'Z?uWPHVFJ?:+cMH.2Dm`VJuS9#Qk&,T54K-Q!s
^nRqMd%8h0lACI%q#HqjYA)@ZZH>W;]`@m'elMHKoZ<&4LS\:jn_#6Y#,ECBj-E('a,ECU!/KiJ*QTks
c0?on>gTPFN-9e?>F+V=\S8La]?B0Q@rH;";=N*62]P$S+g%gN(7ISTqDZ$ZNO)\2oK1`QJq-l)d_6RM
j6@QXVjAj67qG=hi8-56F[+:nMQ"9JQ''*nR<%L2t6.i/0cZ[MlS0cL)m+qjqV;_e=Q//S?eP[OOl.Mr
-c/f=Wh1E6Ap"T\T'.2Msa+qXeTE(0g-CI/"$$3U>/>rVfa9J$5EYBp6L<AOUTJl;XLBgD_!KN%pO'aa
p@0H0ulGt\2<O'M_cBKuOt3?S;%4sU+.,81%W?TJ/e&dJC:!<<*"T5"?+3?\A&5:$:0:+cMH>;lN^(CU
9DF%?92WH8+?,o$C[4<jh+&I8@:V/H>6<\sdV&d\O<$3^D02]_r!L/n9S^TFR!^TFR!^TFR!^TFR!^TF
R!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TF
R!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TF
R!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
/8 
<<
/Name (Black)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
/9 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
^TFR!z"]^0T##p0S#ZQ9R#uc9Q$rhNQ%o[]Q&6!`P&lNfO'N/rO(/\uM(f5#K)c(5L*DgAK+AcSK+\uM
H,>VVG,u.\F-;I_E.8<kD.o'(E/PT+C02,1B0MG4A1/(=@1eU@>2+pC=3(lU=3_DX;4%_[:4\7^85=mm
95tEp76qK0777f367n>6484P018Ok3091C6.9h$?-:IZH,;+;Q+;FMQ*<(.Z)<C@T&<^[T$=@3T!>!r_
u>XJl!?:+tu#?66S$WMEP%9%NP(K##L)Gk2L*`-AI,Yq\G/ko1C1J::>2bZR=3D2X<6V0*784P329L^9
-<(.W(<^[W%>!`]!?:"ks$WDHR&Q<fP*)U>K,#;SH-V[_D0hb:A2bHL=4A%a:7S#048k190:.HE,:duN
,=%!W#=[NZ!>senu?pXtr'iAoM*)UDM*`-GK+\uSJ.8EkC/59(D2G-C<5Y*j7:.6B-;ahW*>=8l"?U=q
s@6jtq$<)?Q$rhKP+AcPJ.SWtE6:s'7@R1%q)c:;L6:a$8=%!]%@mL(p$<)BR.S`nB@R1"pA3^+p#?60
Q6V0$5AjHCs.8<qF=@3Z#BL)Uu>=8euBgD_!)Gk5M.SWnC3(lO;AO6@sB0cLtBgD_!*Dg>J:IZB*AO$4
qC-_h"2G-F=77f-49gp<-AjQIt5tF!9?U=kqA3^+p<CIT%=[N`#&lN`M0MG1@:.6<+AO$4q)c15K3_DR
9;ahK&"]^-S,u.VD6:`s6>sekt%o[WO8k13.2bHI<BgD_!,#;MF>!i`!/PT(B@R1"p(/\oK;+;N*4\7[
7$WDBP7n>*01JC=>BL)Uu^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR
!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -768.104 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 768.104 li
331.957 768.104 li
331.957 0 li
cp
clp
.000549 768.085 mo
331.92 768.085 li
331.92 -.0157471 li
.000549 -.0157471 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
68.316 653.023 mo
66.156 653.023 64.416 651.283 64.356 649.123 cv
64.356 607.663 li
64.416 605.443 66.156 603.703 68.316 603.703 cv
83.976 603.703 li
86.136 603.703 87.876 605.443 87.876 607.663 cv
87.876 649.123 li
87.876 651.283 86.136 653.023 83.976 653.023 cv
68.316 653.023 li
.021393 .33222 .5154 0 cmyk
ef
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: KCAAAA+TimesNewRomanPS-BoldMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KCAAAA+TimesNewRomanPS-BoldMT)
%%Title: (KCAAAA+TimesNewRomanPS-BoldMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KCAAAA+TimesNewRomanPS-BoldMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-558 -328 2000 1056} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4728 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB
222483BD74F8B> |
37 <001C60D8A8C9B64EDFFBB11F3E2A10057E50E341ABE1DBC770E1C5C06F81
BB728FC2798FE7DE3D8D55194754531B662F878A1C5B52B2BC9A6A3EDB01E8FA
D74764554945ACDBBFC441DBC7519AC204790E8B10B16B935FCC95B5AE677CDE
DC158F367FBEAB4DECE80779208A83BA5B988094ABB02C8947DE7BBD9D5F70EF
A356B1D1C419EB58119C17670AB47845E8F10893AE4CFED7310F4A2EDE886F59
3B1F88AC8C92C7F8B9234F7F24A3DD94F3DD1E2EFF386B3CD9BEA0954D516754
1B4C28B1D6215876A5CF1DACA668DAD06206151F500A2C0940462ECF20F08490
2D891E2F1FCB461C960983384E140E45CB0A961888ECF5B48232> |
40 <001C60D8A8C9B64EDFF43CAE20020BE166EFAA2D6213597545CD5E93E6A2
ECF3CB40FB12FF5A4C070DBCCCF0B65B2457F57DF6A0C7C4884A1C722677293F
999B1FC2C8D08D64F002B128F3BFCD49819B5AACEFF20CE165B17EA76BCA46F1
7CAA0C8534F040B8DED7732E604914BB17644AD8556255CAF75EAA1ED433F63F
74DA50EF21300E4F304B4F2F588004C410F1271626C943E366630C9CF2CD0819
74E99938D8C1D825DC2ECAC9A5CE7FB4AECC08C155FD082BF4A52E6D4F547F59
189007E7> |
53 <001C60D8A8C9B6079F6260140016DC3D6E284428F57D575A5E206A5C50DC
24DF1AC7D218BDC60B34CA1AF22239F0E10D176DBCE57460813FF36620348EE9
69A243E7E70CDA719368887201E332ABA105BB892920927AF4B3D40668175987
CB28AFFD6B69739996DB64AD9129505D12375FC605AE336576F28323D56906FA
5342437A7355A8B0661523B08E369D4F0EFC90893FA9B56126BFB43BAC1A7C92
3CAC24D5E766B31242F803EEE7634784D68B186628C8B5E0C717EA97FA194B66
B2A89267D0EEF77DA14DF791362BC81A> |
55 <001C60D8A8C9B64EDFAC3F7FEE28E60A2D46FD0FAC44F4BF1ECEDC775525
D32325A828B12C964FB6D74A0C4FE14A0DD96CAEF4EAA0126A69B727D57B0ACC
A1106F306F3F56388F4DAEE3ED814AAFB8832FC0A69AA208C872EA3A7EF53CC6
3725646531EA7F6FB2091B2D37B57E1E18C3DDCBBA433E5D6358969272> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KCAAAA+TimesNewRomanPS-BoldMT-Identity-H /Identity-H 0 [/KCAAAA+TimesNewRomanPS-BoldMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/WTDCKM+TimesNewRomanPS-BoldMT /KCAAAA+TimesNewRomanPS-BoldMT-Identity-H findfont ct_VMDictPut
WTDCKM+TimesNewRomanPS-BoldMT [0 -10.5209 -10.5209 0 0 0 ]msf
79.6557 642.523 mo
(\000%\000\(\0005\0007)
[-7.02075 -7.02069 -7.19635 0 ]ysh
198.636 668.803 mo
198.636 660.283 li
196.176 660.283 li
201.096 655.303 li
206.076 660.283 li
203.616 660.283 li
203.616 668.803 li
198.636 668.803 li
.91147 .75573 .023713 .000397 cmyk
ef
22.716 583.243 mo
127.536 583.243 li
127.536 561.103 li
22.716 561.103 li
cp
.029969 .59493 .93881 0 cmyk
f
34.656 581.503 mo
29.436 581.443 25.176 577.063 25.176 571.663 cv
25.176 566.263 29.436 561.883 34.716 561.883 cv
39.936 561.883 44.196 566.263 44.196 571.663 cv
44.196 577.063 39.936 581.443 34.656 581.503 cv
0 0 0 0 cmyk
ef
54.876 581.923 mo
49.656 581.863 45.396 577.483 45.396 572.083 cv
45.396 566.683 49.656 562.303 54.876 562.303 cv
60.156 562.303 64.416 566.683 64.416 572.083 cv
64.416 577.483 60.156 581.863 54.876 581.923 cv
ef
95.316 581.923 mo
90.096 581.863 85.836 577.483 85.836 572.083 cv
85.836 566.683 90.096 562.303 95.316 562.303 cv
100.596 562.303 104.796 566.683 104.796 572.083 cv
104.796 577.483 100.596 581.863 95.316 581.923 cv
ef
115.536 581.923 mo
110.316 581.863 106.056 577.483 106.056 572.083 cv
106.056 566.683 110.316 562.303 115.536 562.303 cv
120.756 562.303 125.016 566.683 125.016 572.083 cv
125.016 577.483 120.756 581.863 115.536 581.923 cv
ef
1 /8 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: NCAAAA+TimesNewRomanPSMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (NCAAAA+TimesNewRomanPSMT)
%%Title: (NCAAAA+TimesNewRomanPSMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /NCAAAA+TimesNewRomanPSMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-568 -307 2046 1040} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4728 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB
222483BD74F8B> |
17 <001C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED94985B
C6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375C6A
DD098717CA70F621> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /NCAAAA+TimesNewRomanPSMT-Identity-H /Identity-H 0 [/NCAAAA+TimesNewRomanPSMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/WTDCKN+TimesNewRomanPSMT /NCAAAA+TimesNewRomanPSMT-Identity-H findfont ct_VMDictPut
WTDCKN+TimesNewRomanPSMT [0 -16.132 -16.132 0 0 0 ]msf
75.2757 578.743 mo
(\000\021\000\021\000\021)
[-4.0202 -4.0202 0 ]ysh
193.236 653.023 mo
191.136 653.023 189.396 651.283 189.336 649.123 cv
189.336 607.663 li
189.396 605.443 191.136 603.703 193.236 603.703 cv
208.896 603.703 li
211.116 603.703 212.856 605.443 212.856 607.663 cv
212.856 649.123 li
212.856 651.283 211.116 653.023 208.896 653.023 cv
193.236 653.023 li
.41566 .25302 0 0 cmyk
ef
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: KCAAAA+TimesNewRomanPS-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KCAAAA+TimesNewRomanPS-BoldMT 2 GetGlyphDirectory
57 <001C60D8A8C9B6079F6D0AD47B0430C558D59F6FF15C1CCAFFCA6405402A
51F708DAF936DEF06DD6F24886D5895A407A4C0C384DBD6CE4A9B5343886B2B6
1A52DC3000670D22797BD848467EFE6800A60C9FB7833E39FD0C7D97CD39660B
E9E5B10B3280C35E90AE2A48F27796AD4E1703AB7D5AC10A4524B8DE9E677F97
B315FD026BAB7E9E093BAA70D03524E1> |
76 <001C60D8A8C9B854D0E61042376B1E283FB3F4BBB7CB3487BC74EE7E391A
93B180B577E22955D0FA3199DCD5C6BBEA2EDAEAAD70CAC2D387D654CFD6D585
A60CE5094378FB8BA8FD5D1CAFC6A05D463B8B2BF660BFB6FA4902B50766CB22
600DE6B8533451B6F73A6A051EB16DBCEA0EFC6C89350A34CB9DF0A7738E953A
8F7AB6ADA51E7F> |
!
end
end end
%ADOEndSubsetFont
WTDCKM+TimesNewRomanPS-BoldMT [0 -10.5209 -10.5209 0 0 0 ]msf
204.636 637.003 mo
(\0009\000L\0007)
[-7.19635 -2.94379 0 ]ysh
152.556 583.243 mo
257.316 583.243 li
257.316 561.103 li
152.556 561.103 li
cp
.7481 .54678 0 0 cmyk
f
164.496 581.503 mo
159.276 581.443 155.016 577.063 155.016 571.663 cv
155.016 566.263 159.276 561.883 164.496 561.883 cv
169.716 561.883 173.976 566.263 173.976 571.663 cv
173.976 577.063 169.716 581.443 164.496 581.503 cv
0 0 0 0 cmyk
ef
184.656 581.923 mo
179.496 581.863 175.236 577.483 175.236 572.083 cv
175.236 566.683 179.496 562.303 184.716 562.303 cv
189.936 562.303 194.196 566.683 194.196 572.083 cv
194.196 577.483 189.936 581.863 184.656 581.923 cv
ef
225.096 581.923 mo
219.876 581.863 215.676 577.483 215.676 572.083 cv
215.676 566.683 219.876 562.303 225.156 562.303 cv
230.376 562.303 234.636 566.683 234.636 572.083 cv
234.636 577.483 230.376 581.863 225.096 581.923 cv
ef
245.316 581.923 mo
240.096 581.863 235.836 577.483 235.836 572.083 cv
235.836 566.683 240.096 562.303 245.376 562.303 cv
250.596 562.303 254.856 566.683 254.856 572.083 cv
254.856 577.483 250.596 581.863 245.316 581.923 cv
ef
1 /8 /CSD get_res sepcs
0 sep
WTDCKN+TimesNewRomanPSMT [0 -16.132 -16.132 0 0 0 ]msf
205.116 578.743 mo
(\000\021\000\021\000\021)
[-4.0202 -4.0202 0 ]ysh
72.876 600.583 mo
72.876 592.063 li
70.356 592.063 li
75.336 587.083 li
80.256 592.063 li
77.796 592.063 li
77.796 600.583 li
72.876 600.583 li
.17334 .72665 1 .053346 cmyk
ef
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WTDCKO+SimSun-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (WTDCKO+SimSun-GBK-EUC-H)
%%Title: (WTDCKO+SimSun-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /WTDCKO+SimSun-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28862 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 14 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
311 <001C60D8A8C9B5EE3102327382EF798718831270380E5B127ED5B97A707
602669A8DB5A6A19961BCD32DA93E610436643C187E1F5F28ECFB6C3D980CD9A
3352FCB56761E94F9A6631631F9C1E7771CCA68269C0BEE7EE78B7F123741C92
D1E81E386B826358A05BA2B51D77AA748F327DAD7A1B32D923306568D4FBC3A0
8BB932BB8D69477F88829670E8FA1C2E255F0454F7D8EBB465FE0DE0EA0E3718
7155BD18E6B1979FCA82864B77635DF90B62C57E5E92F821E33562F720AD4155
54CCE52BC600FD001A172043B26FE5C94317119DB847F4D4DEFE186CF88A743> |
3 <001C60D8A8C9B7A73D40> |
7095 <001C60D8A8C9B5EE310273E1CE3144FE5C73A2D8FC17E6C9B75782A1BD
4CEB9E92958A41B8DCF1715D833C9A6D1AFE5AAD478F2412F08C30DE5A3D7D62
BFAC23E476D4AC9F53912EED6C659B409FDF75E22D818A4EEED29B6DBDBEC947
88889DD0693A60A5A54E8521E42AE88CF06AED582E68A3346AC1D31F96A0DD43
80CD7B90A4EEA31A7AC30E2F5897D0F23338674417525B863ED129D68BA139B8
F8A8F07136A9E3B767C074253492A772B81B44BCD24530> |
7516 <001C60D8A8C9B5EE31036D2B4299B7E58E497105A7F7F1006C109BCEEC
E48FAAA91046FB810CC9D8370A2CDF6783BC0A10D77175F597A1D93D57DC3AB6
54166CB515496D25519A638E8797671DC12DF735209720E4B7C355AC68CA6C64
F5D91C37469C659B663C4E1F5593257847D704192DF75C109423EF0CA35FFEEB
DB8FD028D6DEC1E2A6CD7109DC4B275A406DABEA134141FD5429EA71E5FEDE64
153121ADE467> |
2748 <001C60D8A8C9B5EE3102400FFBBE09DC2B89AA5B4FAEE607CE0358153F
0A329569EB85A33BFD07CBC4E8349883EDAC4DDDC24275ADAB2BEA39FF0B7BD3
0C79B5B47716583EF51683AA22898ED2D72DF15D4099A8849BEBDC4EDFCB0F2F
019AFC4F69E16E5BE312F770D62BC875C60170341C0462D34C749CD687DAE068
9E7EA71BE5459B1A54B565DA92C7EA84C816AA717F093D28B7110FA9C8C8B370
03A0CD2AE8D83B70B49A5349E37354C88B6C1BF867D768AA0DEC7758577EB0F4
82B188E4B0BAEF5C7678FD87356015387E07B1D00DD66523E10A4EB444235C86
7629E1AC655EBB1571C8ADA6A0479B7EE788366303CDB17A00> |
3374 <001C60D8A8C9B5EE3100B249FE0972A1F213DE61D816DF1EAF23D42C08
0F518464B0E4071F77D6D6C42850EA4633881E106039D3E5A058ED2E3DD0406D
3DA23BCA01C13DA71313000B2116426CB411C9FC6BB7B4FA24746768B674FA67
17855C6D6142877D76C6C185231486C955453B5AF7550FA207164965E9817C74
E33F1ABF49998B1F6AA4E12B4726207884CB0435651AC11653B8400FC289A148
9C0A6E0F42ECE71ADF038302AF93C1A7D753E77EAAF8287678A1AF7EAEAAC6FB
04B751A6BB46E8AFA932D1BA07CBFD91820C5ED06F5C5F73DB7DD9D37D91F667
B2BFB6763DDA172F028EE8274FAF55E6F3B990DA4EAE953B08E9062E1F8AA65F
444AA40FA0865F2EAAE82CEF4A058CB789DE6BA9DD4C7A5D8D5346FAD43908B8
A1C2406C1CDBC2BA> |
1791 <001C60D8A8C9B5EE310DAAEC954437FC1232065A3A3EAE943444F9BCBE
8476A3CECD8CB454929CE1C75A8473E77F2264F0D901A47C66DE0F70ED5FEEEE
DFA5AB0E9B423F658159ECB9810B9B85CC4E6E704B85490BEE929E84489DC5AD
514A47B275E78FE4F45D22690D9A596398E10440F99EC1E679AA5C7F849B2A5E
BDF3969665C1ED63C044990ECE404AE976BDB0BDB5566048243D1EF1B03DD765
ABAD612896137F783694EA8A87A50CC128E01B341EE3966D2EE27ECF2C88124B
EEB04A04B5B343A7CE56002FE49922C676F8871C31103F5E629BB07C182C76F8
D658B713A46E3CC996BD07CFE28AC69664696D23F34DF3266AE5B6558D465A8B
FDC3994ABF5A3D8E5F54834FACC2F4652B034D410ED9699316E67D28A25682BE
A2B8D7DE78102700DDD4F8F64974F38DA286CE88C56E34CCE57E29D221DDF2D3
379EE261EC7C90F513DBFECB36DDA81AED1777A424E5E43C79038C64D2982389
CB043DA583A45A9C67DB8246B5D389B2FE60701E33A4F7DB091409D8A9E6EB72
B7B7DA27956DC13400546982B6C63AB49F1B3E77C656D3DCD2F62E1615992161
7025F96ED14386F004CD988EDB1A0689EE12EE52060671A49FAF05C34C7FF4C2
479102FF9785C1AFC07E2D> |
10409 <001C60D8A8C9B5EE31027CA3EA60D8AA45C2038B4A9CA5E96A3B6573D
4F60282000FD49001880449563C8CB9F2B8B2C949530D585402D9B414BAA4474
8A079573600996C01C70B5510959DA81F7B5F1004D206238A8B18BB85B66EEF1
C353C464F5504A52E156E86A6EC438D1ABAF4DD66F3F13BBD95315C925655CFB
D91E0A694CA7D1CBE370A9AAFE2711F0486F58D6B26E5F55B1A6DCF8D290B94D
B4A7D3CEA36A4375A678743AF134ADD76F9F939A6559550C9C48985512D288CC
CC0AA246843EF82D2DD89EC6A4B1A55622052D2D2C1FFB03BE26C747A10D4B50
FF0521434070C9B8112225ED493A66EBBD5CAFD34AD94F86EC2F72F775DF1CB7
D2DCFA5D4E7BF6580C81B7DC212663701E49BFD02001D1DE1DCB318B682D0B57
9ACB9F9A5B8DA05C1A1416F667B3DA8FC757FEF9528DD9C87CDED588403CBB9C
63159650D21A2CCE9D25ACB644795611060491AF929839F407766F7E0D3794A4
D56FDA0C1A9C5791A> |
5553 <001C60D8A8C9B5EE310D4F4A8E74556A06EF0306BF071D0355F858FF64
AB610F2225AD842C88B94168BB39974D369984243A2656C2426EC1E47395DF59
481E9BA36E1A2268B7B30FA8335934BD075B8FC79BD978B5AE1951710CDA88D8
F0903895D15DEE9FF74400F396BC752BDCA20B872982369151FCE62FD56F6FD8
2CD71FA1B62B304A938235C507A4873D4E246A0B20EC743F0B9A825875F0956B
6E53C372E96C4645118B5306E110A26BDCAD9A735C1CC6D354F914F3C2E8790C
EF41DD3CE9BC87109D3C3CF0> |
6656 <001C60D8A8C9B5EE310371EEE73C4E74D1B9A5612D27357FDC0DC38568
74597C77D69A700D983AFA179E764E6CE4F81A7190F65FCD2F3A640646FA8B1A
00C2234F4DDC06DD5A4E2765E7968C52F8610F9E07A884C665A17D8ECEC44361
D369AA9E48082618CC731BA58A1FD4B50D9FD9503BF33FA5296FDFC229883138
3E3E48CE399055A889DED0D3BD80D433902B913D8114AA6A1E1A54D4E502B9B9
0E5FF41194E2B0465A6007D8EE51AB6499E2EF7F778111DDA324BCB4D8520EFD
926920CFB14196F5BCB770AAEFFF5BE348DDBD8E0E30A85B78F3BAEB104BCE63
464DF327FA112B2714BB3B0770DA3B9FFCA3F5196B09390C0F0F416E5BB8329E
1F56CAB980882012BDD9F942A2CF1F6EE2FFD31BB379D7F083CDEF774DEE327E
42F529C1ECC6F118D186EAC16C7E279D03A036AD3CF651C6F988D3CB33114EFB
6CD7968C370C019E1C197BCA1CCCA0F4990D> |
2566 <001C60D8A8C9B5EE31023EAC3A51772F16EC49C5B0AE161A8317B2C8AD
7B34929E58612742842FA694BB60002C2DD05220F1C4C3C6C4B098B9DCF18D23
6EB21FAC48FE7B65AF85A82D5859D948BF87B3E84834743CF0B31B0B526DE1A8
54D7CE974B5D343C7EF81141AF0C9DB52CFCBA7F0E45CD8D35C03B9BBC4B8AD9
E6CB76943CC95846E39129FA13DC83D2D5280CB7EA00B23613467DDA55E7673E
187A3C49AA319A0A45EB02CA9C217F41B2AF19411D81437B2114AECE3E6C7BD5
F7BB97523DA795637E7D078F65721F2379EC3BF8A9534E1A3ECA6E987616098A
8CCFADC0D2F44D88BE07FD92E288> |
8273 <001C60D8A8C9B5EE310D991F82D8FC606D8F35C5B69427E6274A939C88
D01B05A52977427C91BD6A5BEBE2445B8801FBB3FCD81F655E2E5857D5DA5143
DE9CFD2A0E26F3B18C58D69C8B3F74C372A08664AB91409804538EC27395A273
1BDA4BF0FDB7623D4A5DFAC59413573DE1C8E4F7FBA66E7B685D4749EDC6C763
219CC1B695B7B892CBE8D997B68D977A9E3305495D166899FDDBE133B6D8B8C3
CA7349493EF83B63FB2CF6034C28F457801C9B80B4C1A831021C19DB280A05D0
11FD4FC019EC4252ED6CF1FE4B012F36D93897490B17F11146664896938A65A2
D07E114950CB45F30C44FCD1F98B684D97E8BE4CDEBFDC5A1C6EB02FE63DC59A
8317A98320E8EF0648D06323935482296C485DA44754BBE4409280F89A675105
B6164E773F74D78DDB7D41B37F2780052AD651E9F0E7AC6647834E20A322BB80
DD7D6213D361C5AC329E343F0ECEC3DD659FABC8FC19461E5D1E5EA144A9C90C
9CFF73B00B3749099CFE747426547BB3DA005431CAE908DEB8DBB03B269BC49A
382560F84696092A5485685951257773B8638542A25F1C> |
3463 <001C60D8A8C9B5EE31036D2478CBD6273F3C01A077B79B04CFCE186016
E6AE5C0B4D7233B415FC23E4A90A8C8BA54F3B6F5F13512D8FAE7D93FAA2D95D
246BF6F07C04D1150EA08583929BC089D5F8D7B627786CC8ABC2C0CFE6A3A599
01037040627E1E12715D9BC9E43834EFAA956A13A116B6346DF9081C00B15020
8DD292787E9121EDB236DB0DD118488DF62B9B9884B40BAED9DA36A7E73BC0C4
71C75B917BCE1F6A9BD062E7781A2B08E79DF872893582188ADC5FC1C202E50F
E54BFDDA05341CD4121680966CA14D2276739D8B728FAAD7062E82DCACC7EC60
9C69CE2FF9B676FB62C7BB2ABA38D60EE15B1314A1C355BECA8906DE28657E2F
DBF44B072EFA111FBB468526> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /WTDCKO+SimSun-GBK-EUC-H-Identity-H /Identity-H 0 [/WTDCKO+SimSun-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
28.4156 748.603 mo
(\0017\000\003\033\267\035\\\012\274\015.\006\377\(\251\025\261\032\000\012\006 Q\015\207)
[-10.5598 -5.22046 -10.5598 -10.4999 -10.4998 -10.5598 -10.4999 -10.4999 -10.5598 -10.4999 -10.4999 -10.5598 
0 ]ysh
%ADOBeginSubsetFont: NCAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NCAAAA+TimesNewRomanPSMT 3 GetGlyphDirectory
55 <001C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E4
8F6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD97
556EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE
58110685510DDB32C57700D5067C975D7063A496FE85C1E5> |
73 <001C60D8A8C9B81F2C3A6EB915F5DDF05E4CD39F13547A7EF54F9D79FF32
092BEC553783B472AF53E99B3070692992C4C512F2D79447B5EC673AA5FA8274
BFE5BA294793E06A2CD85C961166E35F08CE852DFFE5F2678D2E0B1687083D40
FC628A3BE0EDFC936C866DE25768CCC0F39E7FAD6F5686BB7C64B79625F56C55
73F9A5214AA079CAA28A8468CCF29829FD2A747DD586D41C21A37BF93A8AC8FD
D941D5FFB6450DF53658C2420EB0E5E88807E727AED5F7> |
57 <001C60D8A8C9B6079F6D060A2FEA7FC1569E0C14DA541DD91C00EBC3777B
DE67491C2EA2113C451959D17D324EE8DBB436A0F30BF65402B93EFD32E095FD
4A5BC20760673D3864924C1ACF695D3BD682644F24B440E38C1FF24D4CC16712
B502AE5F89EDD273AE3A1DBED84FBFBD9B8AF85ACA697ED4658DA6CFEAC07815
4F7D9BB4AB2053> |
!
end
end end
%ADOEndSubsetFont
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
139.415 576.523 mo
(\0007)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
141.516 570.103 mo
(\000I)sh
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
269.796 577.123 mo
(\0009)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
271.896 569.503 mo
(\000I)sh
gsave
70.836 492.403 mo
68.256 492.343 66.096 490.243 66.096 487.663 cv
66.096 410.743 li
66.096 408.103 68.256 405.943 70.836 406.003 cv
89.796 406.003 li
92.496 405.943 94.596 408.103 94.596 410.743 cv
94.596 487.663 li
94.596 490.243 92.496 492.343 89.796 492.403 cv
70.836 492.403 li
eclp
94.692 492.476 mo
94.692 405.812 li
65.988 405.812 li
65.988 492.476 li
cp
/9 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 768.104 ]ct
[0 86.664 -28.704 0 94.692 275.628 ]ct
snap_to_device
<<
/T 1
/W 256 
/H 256 
/M[256 0 0 -256 0 256 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Jc`.X/HZ+Z"pYD?$4@7O%M'*_&ebro()If*)B0Y:*ZlLJ+sS?Z-7:2j.P!&%/h\mZ0f"C`Y6$6W1BfTm
#RLhG2E)+*&.po9'GVBE(`>CS4?X`-+<`on,X3V'5Ue05/3uTU"%+du7"tcG!\4@/"[t9S7LBM]2b,h=
83%>T'c&hI8imtb4W[9>+[.,F5:0,j:J`Pm5sb`P;DD*<</:UX!\+:."[t9R7LE-R2ca!^83%;S=^!j'
8imqq4WR3=>WsB,5:'&i>u3%X5mK_R;I<?j?t"ooX9'gQ1B_/s#=]#"2@NVfA4S]n8S)'d(J6b->9"YW
+'`D%9g9q!-R_e@?3rnL;,Ub"114O'Mup$]-j'PS@Km',#uq?ABF\QD&J@ZH=r%oH)&c^!*D@P[Bd-7s
,u,g9.4P^3/1kTi?W/^f<+g!,!iZ5J!sEEE#7(W9$OdIS%hK<c',5:!(Dn#.)]Tk>+'`M(,:"Q^-R^DQ
.P!&%/h\n5114'oDJtU<Vue7IE!8'U#RLhG$k3\+&.po9'GVB"(`>CS4?X`-+<b_L,X3V'5S#:n.kE8)
01.HL6r[f:DfV!BVZJ+G1BfTm#Y#./2E+,c&4eepEtoHO(`>CS90F=i+<`on,X3VN&O9,g.kEtQF@.c]
6r[T4DfTub!i?#D"#C*L2$cYY<Ald:='/!R&kQ503Z(IN)bW=79H[S(,>CBL'2Ceu:b,j<6;^X(;ab#%
DJO98GEr<,![7_&"CbjG7LE-RGZImV83%;SH!36F8imqqH6#[$>\50S58>J>5[@29?9p/?;I<?j?t!\`
H[L$cQia&b+ThfL@Km',#urklBRXJ_&J@ZH=umHl)&c^!*D@P[Bd-7f,UH25."<^Q/1kTi?W/^f@:sA+
I!:!iRKB5c+9M]KC^(+M#uq?ABFYOa&J>`kD&*p[)&e)H*?H;-Bd+FI,UFcb-n-WP/1iJ-0JP=j<+fus
I!'jgJXce8!ZhFH"Z/(B#mq%K%1Wm[&NLL='c%T&)&aGV4WY[f+WGDG,UFcbKIJB$/1iJ-6SU>a<+g)e
KlqflJUsBoTE6,91BfTm#Y#./2E)+*&.po9EtoHO(`>CS4?X`Z+;uCe,:#K#-U:I(.kEtQF@.c]6r[T4
DfTuKIK"ej!hTN6"#C*L2$cYY$T9qE<tIn_'1l>13Z(IN)bW=89H,+/4sNcd-;Hg%:b,j<6;^X(;acCL
DMW=UGCBF@Jc`Xf3!1r>@PnB[$<8uC<``g&3>+nd=umHl3uV<d*D@S\Ag0r6,u-^2:b,j<M,@/X;ab#%
DJOTHGCBIAs+,h)]`L4s1B_.k#=]#"2@NVfA4R:F8S)'d(J5P`>9"YW+'`D%9dD#[-R_e@?9p/XMI0:;
?t!\`H[L$cJV!cNL'#!h3<K?d@Km&C#uq?ABF\QD&J>`k=r%oH)&c^!*?H;-Bd-7s,pjuf.4SXT/SZpm
0f!-9B5<$FGC>&>JVXB=!]L2a"U52;#mq%K%1Wm[&J>`k'c%T&)&aGV*?H:F+X/-V,pk!m.4Qi!/M8\1
0eu-rB5VX8Faa(:M?:<i2?P`=1c5OF$4AaN%QG"33>3)A(-39M3u^:F*ZlLJ4sM=;-7;&S:b+(_68(\\
1.5)MDJsQ<s*a]oMupKj2$5W<75Y??$4AaN<`]i'3>4t!(-3:)3u^gU*_[\"4sNcd-;Hg%:b+(_6;^W8
;aaSnDMW<7Fa&9/JW9f@!]1!8"[t9R7LE-R2ca!j83%;S=^!j'8imqq4WR3=>WsB,5:'&i>u3%X5seFH
?W0@#@;]i_H[L$cpOSD-[K85e1B_/s#=]#"2@NVfA4R:F8S)'d(J6b->9"YW+'`D%9g9q!-R_e@?9p/?
;I<?X?t![NCO:GQIJ/5T!jr(b!s8[8"p[U(<=94K%V/*B&kQY<()KR\)I"1%*ZnX$,#'=/:+%G=.UFYX
C+ipm114&bB5<$FGCB.8PQJ/m0EVF]"pYD?<=93E%M'*_&ebsr()If*)B0Y:*ZlLJ+sS?Z-7:2j.P!&%
/h\n5111;cB5VX8Fa`n5Q3+>n0*=!61c5OF$4@7O%QG"33>3)A()If*3u^:F*ZlLJE?c_n-7;&-.P!&9
68(\\1'g9IB5VX.Fa\]1JX?MD!\OR2"[t9S7LBM]2b,h=83%>T'c&hI)*8d14W[9>+[.+r5:0,j:J`Pm
5seFH0aUcH<+0Z_EclSSo7<>3YQ?BY1Bg3)#=]&#2E+Z<=@bFb8Qf4X(eQk/90F:h+C%)T9g9t"5[@2:
?9pnT;@6c06ssG@CN=QAII_rZ!j;YV"#C'h@g>J]<Ao)&=(Fi^&kQY<3YtCM)I%M.9HRMO,#(9J:-`)]
.UGCm;%$9/;ab#%B5;jAGCB"4ScZ%r.g#kV@Km',#urklBRXJ_&J@ZH=r%oH)&c^!*D@P[Bd-7s,u,g9
Ik"bU/IZAI?W/^f@:sA+I!:#.JY3(H!\+9S"De8I#ROK=$tp+]&.oNg'Q"U%N#<Oc*$$(B>\PB,,UFcb
-n-WP/.F0`0/,+9?rUcSJ:)Kfmt$&lb5sX*"9gV>#RLhG$k3[W&.po9'GVB"(`=524?X`-+<b_L,X3V'
KIJB$/1iJ-6SU>a<+g)eKlqflnU^^kKEB9t3!1r?1c5P.$4AaN%QG"33>6HK(-39M3u^:F*_[\"4sM=;
-;Hg%:b+(_6?GRL;aaSnDJsQ<I=:[;rIK\)aT=F(1Bg3)#Y#/$2E+Z<&4eep8Qf4X(eQk/90F=i+GN')
9g9t"5`JSj?9pnT;Kbu,?t!r/EclSSo7?diL]YX!3!1r>@PnB[$<9!/<``g&3>+nd=umHl3uV<d*D@S\
Ag0r6,u-^2:b,j<M,@/X;ab#%B5;jAGCB+7q14D)`r\4&1B_.k#=]#"2@O8JA4R:F8S)'d(J5P`>9"YW
+'`D%9dD#[-RaHo?9p/XMI0:;?t!\`NdQ&!omujgMuq!#3!06c@Km&C#uq?ABFYPD&J>`k=r%oH)&e)H
*?H;-Bd-7s,pjuf.4SXT/SZpm0f!-9B5<$FGCB19omr,)_u_k""9eu7#RLhG$k3[W&.oNg'GVB"(`=52
4?X`-+<_pR,UFcbKIJB$/1iJ-0JP=N<+g)eKlqh<Jb+GS!lG(!"#C*;2$aKq$T9pR3"QZ^',2/s3Z&_r
)a$8)9HYKB,:#K#-U:I(.kEtQ01.HL6r[T4DfTuKIJJHaJW^)O!]U9<"[t9S7LBM]2c`uk83%>T'c&hI
8imtb4W[9>+[.,F5:0,j:J`QJ5seFH0iLJ>@;^mAFa&91Ja\/S!l4pt"#C'h2$ZSX<Ald:=(Fi^&kQ50
3Z(IN)I#?F9H[SP,>CBK:-`)].pbMu;,Ub"6ssG@CO:GQIJ\T_JX-AQ!]U9<"C_Q?7L<'Q$s$G?8.cJ+
AQh,28imqq*$%]p>\50S5:'&P-r;C"5qQhL?W/^f@:sA&I!:#:Ja7lS!l"dr!s8[8"p[U(<=94K%V/*B
&ebs_()KR\)I"1%*ZnX$,#'=/:+%G=.UFYXC+h8>114'oCOgeVIJn`]JXQYR!]L2a"U52;#uq?A%1Wm[
&J>`k'c%T&)&aG6*?H:F+X/-V,pjuf.4Qi!/M8\10f!-9B5VX8Faa7?kCK-)]E1(q1BfTm#RLhG$k3\+
&.po9'GVBE(`>CS4?X`-+<`on,X3V'5Ue05/3uTU6SU>a<+g)eEcleYJ`VHS!kSLn"#C*L2$cYY$T9q6
3"SV@'1ioS3Z&_r)bW=89HYKB,>CBL:-_TO.kEtQ;,T,I6r[T4DfTuEIH,mO!kJFl"#C*L2$ZSX<Ald:
='/!R&kQ503Z(IN)bW=79H[S(,>CBK:-`)].pbM.;,Ub"6ssG@CN=QA!.EjXJcaU,3!1r>@UfX4#urkl
<``g&3>+np=umHl3uV=L*D@P[Ag0r6,u-^2:b#d;/Q#DQ;_h`hB5;jAGCAM&s+,h)fE+#7!sE';#=]#"
$Og]tA4R:F8S)'@(J5P`>9"YW+'`M(9dD#[-RaHo?7[[C04.X5?rUcSJ:)QhjFR8\L'#s.3!06cC^(+M
#uq?ANt)[3&J>`kD&*p))&aG6*?H;-Bd+cI,pjuf.4SXT/M8\10f!-9B5W6IFa`A&qgjP)eH.]4"9gV>
#RLhG$k3\+&.po9'GVB"(`>CS4?X`-+<b_L,X3V'5Ue05/1iJ-6SU>a<+g)eKlqflkCNG[M?;9/3!1r?
1c5P.$4AaN7lV%l3>6HK(-39M3u^gU*_[\"4sM=;-;Hg%:b+(_6?GRL;aaSnDJsQ<I=:=1pOS8)dfMK2
1Bg3)#Y#/$2E+Z<&4eep8Qf4X(eQk/90JA1+GN')9g9t"5[@2:?9pnT;Kbu,?t!qgEclSSl%/MYNWRW1
3!1r>@PnB[$<9!/<``g&3>+nd=umHl3uV=L*D@S\Ag0r6,u-^2:b#d;M,@/X;ab#%B5;jAGCAb-o7;u)
d/l90!sE';#=]#"2@O8JA4R:F8S)'d(J5P`>9"YW+'`D%9dD#[-RaHo?BHgSMI0:;?t!\`J:)Qhl[eSW
Ooiu33!06c@Km&C#uq?ABFYOa&J>`k=r%oH)&e)H*?H;-Bd-7s,pjuf.4SXT/M8\10f!-9B5<$FFa`V-
mt$])c2os-"9gUe#RLhG$k3[W&.po9'GVB"(`=524?X`-+<_pR,UFcbKIJB$/1iJ-0JP=N<+g)eKlqfl
mXabVQ3,;43!1r?1c5OF$4AaN%QG"33>6HK(-39M3u^:F*_[\"4sM=;-7;&S:b+(_68(\\1.5)MDJsQ<
I=:R8l[bE)bQ9a+1Bg3)#Y#./2E+Z<&4eep8Qcfi(eQk/90F=i+GN')9g9t"5Yk3,?9pnT;Kbu,<+0[#
EclSSn:BhTRKCY63!1r>@PnB[$<8uC<``g&3>+nd=umKm3uV<d*D@S\Ag0r6,u-^2:b,j<M,@/X;ab#%
DJOTHGCB"4kCK-)aoXO)1B_.k#=]#"2@NVfA4R:F8S)'d(J6b->9"YW+'`D%9g9q!-R_e@?9p/XMI0:;
?t!\`H[L$cnq#nRSc["83!06c@Km&C#uq?ABF\QD&J>`k=r%oH)&c^!*?H;-Bd-7s,u,g9.4SXT/SZpm
0f!-9B5<$FGCB(6j+3j)`r\1%"9eu7#RLhG$k3[W&.oNg'GVB"(`=52*$$(B+<_pR,UFcb-n-Vr/1iJ-
0JP=N<+g)eI!'l0J`203!p0PD"#C*;2$aKq$T8G(3"QZ^',2/s3Z&_r)a$8)+!;^j,:#K#-U9+1.kEtQ
01.HL6r[f:DfTuKIF`uLJV4*d!]U9<"[t9S7LBM]2b,h=83%>T'c&hI8imtb4W[9>+[.,F5:0,j:J`Pm
5seFH0iLJ>@;^"(Fa&8cJc1.S!osDB"#C*L2$ZSX<Ald:='/!R&kQ503Z(IN)I#?F9H[S(,>CBK:-`)]
.pbM.;,Ub"6ssG@CN=QAIFs,JJVXBf!]U9<"CbjG7L<'Q$s$G?83%;SAQh,28imqqH6#[$>\50S5:'&P
-r;C"5qPr3?W/^f@:sA&I!:"lJbakS!oa8@!s8[8"p[U(<=94K%V/*B&kQY<()KR\)I"1%9HRMR,#'=/
:+%G=.UFYXC+ipm114'oCOgeVIG08HJW'Zh!]Z>F"De8I#ROK=$k3[W&.oNg'Q"U%(`=52*$$(B>\PB,
,UFcb-n-Vr/1iJ-0JP=j<+g)eI!'klJb=SS!oF&=")nE#2$aKq$OdIS3"QZ^',2/s(Dn#O)a$8)+!;_H
,:#K#-U9+1.kE8)01.HL6r[f:DfTuKIGKJGJWKri!]U9<"Z/(B7LBM]2b,h=83%?)'c&hI)*8d14W[9>
+[.+r5:0,j:J`Pm5sfZ\0iLJ>@;^"(Fa&8jJan;S!o3o;"#C*L2$cYY<Ald:='/!RP=\n\3Z(IN)bW=7
9H[S(,>CBL:-`)].pbM.;,VR96ssG@CN=QAIG]VEJWp5k!]U9<"CbjG7LE-RGZImV83%;S=^!j&8imqq
H6#[$>\50S5:'&i>u3"W5qPr3?W0@#@:sA&I!:"sJaJ#S!o!c9!s8[8"p[U(<Ak8!IUkt]&kQY<3YtC+
)I"1%9HRN(,#'=/:+%H>.UFYXC+ipm114O'COgeVIGobCJX?Mm!]U8a"De8I#ROK=$tp+]&.oNg'Q"U%
8f8P!*$$(B>\PC7,UFcb-n-WP/1iJ-0JP=j<+fusI!'ksJa%`S!n[Q6!sAca2$aKq$OdIS%hK=5',2/s
(Dn#.)a$8)+!;_H,:"Q^-\Nou.kE8)01.HL6r[f:DhW=^IH5tBJXcen!]U9<"Z/(B7LBM]2\%eY&NLMG
'c&hI)*8d"4W[9>+[.+r5:.aC:J`Pm5sfZ\0pP.+@;^"(Fa\]"J`VHS!nIE4"#C*L2$cYY$T9qE<tIn_
'1l>13Z(IN)bW=89H]'R,>CBL:-_TO.pbM.;,VR96r[T4LiRW^IHH+@JY3(p!]U9<"Ca4n7LE-R2ca!j
83%;S=^!j&8imqq4WR3=>\50S5:'&i>u3%X6&AH:?W0@#@;]k-I!:#%J`203!qZOR"#C'h"p[U(<Ak7d
=(Fi6&kQY<3YtCM)I"1%9HRMO,#'=/:+%Gd.UGCmC5Q@s114O'CO:GQIE7!>JV4*r!]U8a"C_Q?#ROK=
$tp,]8.cIJ'Nu7g8f8OO*$$(B>\PBV,UFcb-n-WP/1kTi0JP=j<+fusI!:"\Jc1.S!q?=N!sAc3#7(VC
$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-\Nou.kE8)0/,+96r[f:DgZ\Ub(9G@L][&I3!1r?1c5OF
$4AaN%QG"33>3)A(-39M3u^:F*ZlLJ4sM=;-7;&S.P!&968(\\1.5)MDJsQ<I=9=jq14D)mfGHN1Bg3)
#Y#./2E+Z<&4eep8JN"%(eQk/90F=i+<`on9g9t"5Yk3,/3uU";DD*<<+0[#EclSSc%5V?MurDK3!1r?
75Y<>$<8uC<``g&3>+nd=umKm3uV<d*D@S\4sNcd,u-^2:b,j<6;^Wf;ab#%DJOTAGC@bfomr,)m/f6L
1B_/s#=]#"2@NVfA4S]n8S)'d(J6b->9"YW+'`D%9g9q!-R_e@?9p/?;I<?X?t!\`H[L$cc[k\=O94bM
3!06c@Km',#uq?ABF\QD&J@ZH=r%oH)&c^!*?H;-Bd-7s,u,g9.4SXT/SZqG;_h`[B5<$FGC@hhnUZi)
l2imH"9eu7#ROK=$k3[W&.oNg'Q"U%(`=52*$$(B+DE#E,UFcb-n-Vr/1iJ-0JP=j<+g)eI!'kbJa\/S
!pKbG"#C*;2$aKq$OdIS3"QZ^',2/s(Dn#O)a$8)+!;_H,:#K#-U9+1.kEtQ01.HL6r[f:DfTuKIFEc7
JX-B$!]U9<"[t9S7LBM]2b,h=83%>T'c&hI)*8d14W[9>+[.+r5:0,j:J`Pm5seFH0iLJ>@;^"(Fa&8`
Ja7lS!p9VE"#C*L23p]=<Ald:='/!R&kQ503Z(IN)bW=79H[S(,>CBL:-`)].pbM.;,VR96ssG@CN=QA
IFWo5JXQZ&!]U9<"CbjG7LE-RGZImV83%;SAQh,28imqqH6#[$>\50S5:'&i>u3"W5qPr3?W0@#@:sA&
I!:"iJ`hTS!p'JC!s8[8"p[U(<Ak8!IUkt]&kQY<()KR\)I"1%9HRMR,#'=/:+%H>.UFYXC+ipm114O'
COgeVIFj&3JXur(!]U8a"De8I#ROK=$tp+]&.oNg'Q"U%N#<Oc*$$(B>\PB,,UFcb-n-WP/1iJ-0JP=j
<+fusI!'kiJ`D<S!oa8@!sAca2$aKq$OdIS%hK=5',2/s(Dn#.)a$8)+!;_H,:#K#-\Nou.kE8)01.HL
6r[f:DhW=^IG082JV!q_"#C*;2$cYY$T9pR3"QZ^'6=m(3Z&_r)a$8)9HYKB,:#K#QU">C.kEtQF@.c]
6r[T4DfTuKICk(1JV4(b!Wt4^75Y??$<8uC<`]i'3>4te=umKm3u^gU*_[]24sNcd-;Hg%:b,j<6;^X(
;ab#%DMW=UGC@,TrIK\)3W]?b1B_/E#=]&#2L&8(A4S]n8Qf4X(J6b-><O!#+C&M&9g9q!5[@2:?9sEF
;I<?j?t!\`H[L$c]n-'3L][PW3!1r>@Km',#urklBRXJ_&J@ZH=umHl)&c^!*D@P[Ag0qp,u,g9Ik"bj
/S^/M;_h`hB5<NTGC@2Vq14D)r;nq\!sE';#7(W9$Og\YA4R:F',4Uc(J5P`JfGdP+'`M(9dD#3-R^Dn
?7[[C0/,+9?rUcSJ:)Qh^Oc-1MurkX2Zj0d"pYD?$4@7O%M'*_&ebro()If*)B1e%*ZlLJ+sS?Z-7=Hq
.P!&%/h\n51.5)SDJt5OIDCF,JW9g.!]U9<"Z/(B#mq%u2\%eY&NLL='c&hI)*8d"4WY[f+[.+r5:.aC
:J`Pm5sd4l0eu-r@;^"(Fa\\TJb+GS!r2mW"#C*L2$cYY$T9qE<tIn_'1ioS3Z(IN)bW=89HYKB,>CBL
:-_TO.pbM.;,T,I6r[T4LiRW^ID^X+JW^*0!]U9<"Ca4n7LE-R2ca!j83%;S=^!j'8imqq4WR3=>WsB,
5:'&i>u3%X6&AH:?W0@#@;]k-I!:"WJa\/S!quaU"#C'h"p[U(<Ak7d=(Fi6&kQY<3YtCM)I"1%9HRMO
,#(9J:+%Gd.UGCm;,Ub"114O'CO:GQIDpd)JX-B2!]U8a"C_Q?7L<'&$tp,]8.cIJ'Nu7g8f8OO*$$(B
>\PBV,UH25-n-WP/1kTi?W/^f<+fusI!:"YJa7lS!qZOQ!sAc3#7(W9$OdIS%hK<c',2/s(Dn#.)]Tk>
+!;^N,:"Q^-R^Dn.kE8)0/,+9?rUcVDgZ\Ua+<K+RKE'^3!1r?1c5OF$4@7O%QG"33>3)A()If*3u^:F
*ZlLJ4sM=;-7;&-.P!&968(\\1.5)SDJsQ<I=94gkCK-)ncCcQ1Bg3)#Y#./2E+,c&4eep8JN"%(`>CS
90F=i+<`on9g9t"5Yk3,/3uU";DD*<<+0Z_EclSSb(8Z*Sc\E`3!1r?75Y<>$<8uC<``Bo3>+nd=umKm
3u^gU*D@S\4sNcd,u-^2:b,j<6;^Wf;ab#%DJO98GC@Ycj+3j)n,bQO1B_/s#=]#"2L&8(A4S]n8S)'d
(J6b->C%;`+'`D%9g9q!5[@29?9p/?;I<?X?t!\`H[L$cb^n`(O9,jn!sE';#=]#"$Og]tA1C+^&kQY<
()KR\)I"1%9HRMR,#'=/:+%H>.UFYXC+ipm114'oCOgeVIBA)#JWU!B!s8[B"pYD?<=94r%P&&$&J>`k
D&*p))&aG6*?H;-Bd+cI,pjuf.4SXT/M8\10f!-9B5<$FFa^EDrIL(4$3LD71c5OF$4@7O/Ii:&&NLL=
'c%T&)*8d"4WY[f+`S_P5:.aC.4Qi!/M8\D0eu-rB5VXAFa\\BJbt"]!XSrb"Z/(B7LBM]/iQ9[&.po9
EtoHO(`>CSQouKa+<`on,X3VN5Yk3,/3uUE6SVM-<+0Z_EcleYZ%;_%P6)!l1Bg3)#Y#/$0/bai<tIn_
'1l>13Z(IN)bW>U9H]'R,>CBL:-`)].pbM.;,VR96ssG@CN=QAIBnFuJWp3@"#C'h2$ZSX0NC#U<``g&
3>+nd=umHl3uV=L*D@S\Ag0r6,u-^2:b#d;M,@/X;ab#%B5;jAGC?fKomrA0"p4r1@Km',0aUi<$tt*#
8.cJ+AQh,28f8OO*$%]p>\50S,UH25."<^QOY(=*?W/^f@:sA+I!:"GJb+GY!X/Z."C_Q?1'e1d$Og\Y
%hK<c',4Uc(J5P`JfGdP+'`M(9dD#3-R^Dn?7[[C0/,+9?rUcSJ:)Kf[=Rk!Q3%-j"9gV=#7(VC$OdIS
%hK=5',2/s(Dn#.)a$8)+!;^N,:"Q^-\Nou.kE8)0/,+96r[f:DhW=^RC@b9JX6E>"#C*<1c5OF$4AaN
%QG"33>3)A(-39M3u^:F*_[\"4sM=;-7;&S:b+(_68(\\1.5)MDJsQ<I=8VVm=CW+!<Y,9"[t9S7LBM]
2c`uk83%>T=Va%88imtb4W[9>L-?hV5:0,j:J`QJ5seFH0iLJ>@;^mAFa&8EJa7lT!WW<]1B_/E#=]&#
2E+Z<A4S]n8Qf4X(eQk.><O!#+C&M&9g9q!5[@2:?9sEF;I<?j?t!qgH[L$c\q0*sRK>GN1B_.k#=]#"
2@NVfA4R:F8S)'d(J6b->9"YW+'`D%9g9q!-R_e@?9p/XMI0:;?t!\`H[L$c]7K-rS,t\P!s8[8"pYD?
<=94K%V/*B&ebs_()KR\)I"1%*ZnX$,#'=/:+%G=.UFYXC+h7q114'oCOgeVICt-mJXurB!]L2a"U52;
#mq%K%1Wm[&J>`k'c%T&)&aG6*?H:F+X/-V,pjuf.4Qi!/M8\10f!-9B5VX8Fa^rSj+3j)r;nq\1BfTm
#RLhG$k3\+&.po9'GVBE(`>CS4?X`-+<`on,X3V'5Ue05/3uTU6SU>a<+g)eEcleY^Ob?pSH9]31Bg3)
#Y#./2E+,c&4eep8JN"%(eQk/90F::9HYKB,>CBL:-_TO.kEtQ;,T,I6r[T4DfTuEI@u/kJXuo\"#C*L
2$ZSX<Ald:='/!R&kQ503Z(IN)G;,7*D@S\4sNcd,u-^2:b,j<6;^Wf;ab#%DJO98GC?09rILRB(]uPs
@UfX4#urkl<``g&3>+np=umHl3uT2FH6#[$>\50S5:'&P-r;C"5qPr3?W/^f@:sA&I!:"5Jbt"k!Z(q@
"C_Q?7L<'&$tt*#8.cJ+AQfic8f8`i>9"YW+'`M(9dD#[-R^Dn?7[[C04.X5?rUcSJ:)QhUOi5lT`Q!m
!sEEE#7(W9$OdIS%hK<c',5:!(Dn;5)B0Y:*ZnX$+sS?Z-7:2j.UFYX/h\n5114'oDJsoFIADGgJY<,Z
!sAca2$aKq$OdIS3"QZ^',2/s(F'b73u^:F*ZlLJE?c_n-7;&-.P!&%/h]RH1.5)SDJsQ<I=7uDomrh=
'*C#o1c5P.$4AaN7lV'K3>6HK(*kpX)*8d14W[9>+[.+r5:0,j:J`Pm5sfZ\0iLJ>@;^"(Fa&83Jb+Gf
!YPSk"[t9S7LE-R2ca!^83)l*=X@64(eQk/90F:h+GN')9g9t"5[@2:?9pnT;Kbu,?t!qgEclSSW.FJi
U]M,11B_/E#=]&#2L&8(A4S]n8L@SD3YtCM)I%M.9HRMO,#(9J:-`)].UGDt;,Ub"6ssG9CO:GQIAqed
JY`DZ!s8[8"p[U(<Ak8!IUkt]&gp7^=umHl)&c^!*D@P[PTigI,u,g9Ik"bU/SZqG;_h`hB5<$FGC?KB
m=D,9%g)n:C^(+M#uq?ABFYOa&L\8*'Q"U%8f8P!*$$(B>\PBV,UFcb-n-WP/1iJ-0JP=j<+fusI!'k<
Ja7la!Y#57"Z/(B#mq%K%1Wm[.M4ZS'GVB"(`=524?X`-+<b_L,UFcbKIJB$/1iJ-RkZZd<+g)eKlqfl
Xb#_fVZI8/1BfTm#RLhG2E)+*.hE:Q'6=m(3Z&_r)a$8)9HYKB,:#K#-U:I(.kEtQF@.dJ6r[T4DfTuK
IBJ.aJZ&VX"#C*L2$cYY$T9qE/6<BR3>4te=umKm3u^gU*_[]24sNcd-;Hg%:b,j<6;^X(;aaSnDMW=U
GC?ZGjajB4$3N'e@PnB[$<8uC/QPq`83%;S=^!j&8imqq4WR3=>\50S5:'&i>u3%X6&AH:?W0@#@;]k-
I!:"CJ`D<]!XSrb"C_Q?7L<'Q/dtc^A4R:F8S)'d(J6b->9"YW+'`D%9dD#[-R_e@?9p/XMI0:;?t!\`
H[L$cZ%:kbWra[O!sE';#7(W9$Og\YA4R:F',4Uc(J5P`>9"Y)+'`M(9dD#3-R^Dn%pge=C+h7q114'o
COgeVI?K0]JZAi!!sAc3#7(VC$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^DT.P!&%/h\n51.5)S
DJsoFI?T6\JZJo!"#C*;2$aKq$T9pR3"QZ^',2/s3Z&_r)a$8)+!;^j,:#K#-U8;?.P!&968(\\1.5)M
DJsQ<I=7B3qgkjN,Qfh+75Y??$4AaN<]CX]3>4t!(-3:)3u^gU*_[\"4sNcd-;G4>:J`Pm5seFH0iLJ>
@;^mAFa&8"Jbal"![@e'"[t9R7LE-R2ca!j83%;S=^!j'8imqq4WR3=>WsB,5:%"=5[@2:?9pnT;I<?j
?t!qgHZaO\Q\"m^Y6#mM1B_/s#=]#"2@NVfA4S]n8S)'d(J6b->9"YW+'`D%9g9@=:+%Gd.UGCm;,Ub"
114O'CO:GQI@,TYJZo2!!s8[8"p[U(<=94K%V/*B&kQY<()KR\)I"1%*ZnX$,#&gu,u,g9.4SXT/SZqG
;_h`[B5<$FGC>m1o7=+I*s2WL"pYD?<=93E%M'*_&ebsr()If*)B0Y:*ZnX$+r;IL,pjuf.4Qi!/M8\1
0f!-9B5VX8Fa]^0nU[qH*Wn2%1c5OF$4@7O%QG"33>3)A()If*3u^:F*ZlLJ)0$lH5:.aC.4Qi!5qXfX
0eu-rB5VX.Fa\\.Ja\/q!Z_A!"[t9S7LBM]2b,h=83%>T'c&hI)*8d14W[9>)Bh9h,X3VN5Yk3,/3uU"
6SVM-<+0Z_EclSSSUp0ZZN;*K1Bg3)Q:;3]2E+Z<=@bFb8Qf4X(eQk/90F:h)^&BL,>CBL:-`)].pbM.
;,VR96ssG@CN=QAI@c#UJ[>It"#C'h@g>I1<Ao)&=(Fi^&kQY<3YtCM)I%M.*)%GZAg0r6,u-^2:b#d;
/Q#DQ;ab#%B5;jAGC?*7l%-5D)?U'E@Km',#urklBRXJ_&J@ZH>+?C$)&c^!*?@fq>\PBV,UH25."<^Q
/1kTi?W/^f@:sA+I!:"3J`hTm!Z;(B"De8I#ROK=$tp+]&.oNg'Q"U%8f8P!*ZQ1A+'`M(,:"Q^-R^Dn
?7[Z\0/,+9?rUcSJ:)KfTn2<V[K76I"9gV>#RLhG$k3[W&.po9'GVB"(`=57)a$8)+!;_H,:#K#-\Nou
.kE8)01.HL6r[f:DhW=^IA;ARJ[Y[r"#C*;2$cYY$T9pR3"QZ^'6=m(3Z&_X3u^:F*_[\"4sM=;-C6tn
:b+(_6?GRL;aaSnDJsQ<I=7oBiISK?2$5W<75Y??$<8uC<`]i'3>4te=umKm3u^gU*_[]24sNcd-;Hg%
:b,j<6;^X(;ab#%DMW<7Fa&7fJcC;3!]1!8"Ca4n7LE-RGZImV83%;S=^!j&8imqq4WR3=>\50S5:'&i
>u3%X6&AH:?W0@#@@_09H[L$cL4T;S\cOYi1B_.k#=]#"2@O8#A4R:F8S)'d(J5P`>9"YW+'`D%9dD#[
-RaHo?9p/XMI0:;?t![NCO:GQI><CNJ\(t=!s8[8"pYD?<=94K%V/*B&ebs_()KR\)M/qL*ZnX$,#'=/
-7:2j.UFYXC+h7q114&bB5<$FGC>9uq16-Z0EVF]"pYD?$4@7O%M'*_&ebro()If*)B1e%*ZlLJ+sS?Z
-7=Hq.P!&%/h\n51.2=GB5VXAFa]*tpOTsY0*=!61c5OF$4AaN%QG"33>3)A(-39M3u^:F*ZlLJ4sM=;
-7;&S:b+(_68(\\1'g9I@;^"(Fa\[rJb=T-!\OR2"[t9S7LBM]2c`uk83%>T'c&hI8imtb4W[9>+[.,F
5:0,j:J`QJ5seFH0aUcH<+0[#EclSSN.LSO^&fkg1B^-(#=]&#2E+Z<A4S]n8Qf4X(eQk.><O!#+C%)T
9g9q!5[@2:?9pnT;@6c06ssG@CO:GQI>rgJJ\M7;"#C'h@g>I0<Ak7d=(Fi6&kQY<3YtCM)I"1%9HRMO
,#(9J:+%Gd.UGCm;%$9/;_h`hB5;jAGC>L&mt&7U.g#kV@Km',#uq?ABF\QD&J>`k=r%oH)&c^!*?H;-
Bd-7s,u,g9.4SXT/IZAI?W/^f<+fusI!:""JaJ$(!\"3S"U52;#uq?A%1Wm[&J>`kD&*p))&aG6*?H:F
+X/-V,pjuf.4Qi!%4s1c0JP=j<+g)eI!'k!Ja7m'![n.,"Z/(B#mq%K%1Y?/&NLL='c%T&)*8d"4WY[f
+[.+r5:.aC.4QhY/3uTU6SU>a<+g)eEcleYP(DkK_?)(e1Bg3)#Y#./2E+,c&4eep8JN"%(`>CS90F=i
+<`on9g9t"5Yk2f.kEtQ;,T,I6r[T4DfTuEI?T6FJ\qO9"#C*L2$ZSX<Ald:='/!R&kQ503Z(IN)bW=7
9H[S(,>CBL:-`(s:b,j<6;^Wf;ab#%DJO98GC>^,jak>O,m,q+@UfX4#urm.<``g&3>+np=umHl3uV=L
*D@P[Ag0r6,u-]<>u3"W5qPr3?W/^f@:sA&I!:"(J`D=#![IjM"C_Q?7L<(d$tt*#8.cJ+AQfic8f8OO
*$%]p>\PBV,UH2!-RaHo?7[[C04.X5?t!\`J:)QhQ@\"G`WA+%!sEEE#7(W9$Og\Y%hK<c',5:!(Dn#.
JfGdP+'`M(,:"Q^-R^Dn?7[Z\0/,+9?rUcSJ:)Kfp47gHs+//k3!09e1c5OF$4@7O%M'*_3>3)A()If*
3u^:F*ZlLJE?c_n-7;&-.P!&%/h]RH1.5)SDJt5OI=:mAJq<lO`r\4&1BfTm#Y#./2E+,c&.po9EtoHO
(`>CSQouKa+<`on,X3VN5Yk3,/3uUE6SVM-<+0Z_EcleYq14-Kqglfi3!1r?75Y??$<8uC<`]i'3>4te
=umKm3u^gU*_[]24sNcd-;Hg3:b,j<6;^X(;ab#%DJO98GCB==Jq<`KaT=F(1B_/E#=]&#2L&8(A4S]n
8Qf4X(J6b->C%;`+C&M&9g9q!5[@3Y?9sEF;I<?j?t!\`H[L$cqgj?MpOUHg3!1r>@Km',#urklBRXJ_
&J@ZH=umHl)&c^!*D@P[Ag0qp,u,g9Ik"bj/S^/M;_h`hB5<$FGCBC?Jq<TGb5sX*!sE';#7(W9$Og\Y
%hK<c',4Uc(J5P`JfGdP+'`M(9dD#3-R^Dn?7[[C0/,+9?rUcSJ:)KfrIKQOo7>'d3WfKg"pYD?$4@7O
%M'*_3>3)A()If*)B1e%*ZlLJ+sS?Z-7=Hq.P!&%/h\n51.5)SDJt5OI@5Y;Jq<HCbQ9d,1BfTm#RLhG
2E)+*&.po9'GVBE(`>CS4?X`Z+<`on,X3V'5Yk3,/3uTU6SU>a<+0Z_EcleYJV&IAJ^"6U"#C*L2$cYY
$T9qE<tIn_'1ioS3Z(IN)bW=89H]'R,>CBL:-_TO.pbM.;,T,I6r[T4LiRW^I=d%;J^+<U"#C'h2$ZSX
<Ald:=(Fi^&kQ503Z(IN)I#?F9H[SP,>CBK:-`)].pbMu;,Ub"6ssG@CO:GQ!.BKNl[d@`2?P`<@Km',
#urkl<``g&&J@ZH=umHl3uV<C*D@P[Ag0r6,u,g9:b#d;/S^/M;_h`hB5;jA!I&sFJa%a4!]:&^"C_Q?
#ROK=$tp,]8.cIJ'Nu7g8f8OO*$$(B>\PBV,UH25-n-WP/1kTi0JP=j<+fus!do3?Kn8E<ciQ!*"9eu7
#RLhG$k3[W&.oNg'GVB"(`=52*$$(B+<_pR,UFcb-n-Vr/1iJ-0JP=j<+g(NDgZ\UL4SH;d/l'*1BfTm
#RLhG$k3\+&.po9'GVBE(`>CS4?X`-+<`on,X3V'5Ue05/3uTU6SU>a<+cAPDfTuKI>EI7J^OTS"#C*L
2$cYY$T9q63"SV@'1ioS3Z(IN)bW=89HYKB,>CBL:-_TO.kEtQ;,T,I6rXA!DJsQ<GC>=!iITGZ3!1r?
75Y<>$<8uC<``Bo3>+nd=umKm3u^gU*D@S\4sNcd,u-^2:b,j<6;^Wf;ab#%DJO98GCA_,Jq<rQe,hT3
1B_/s#=]#"2@NVfA4S]n8S)'d(J6b->C%;`+'`D%9g9q!-R_e@?9p/?;I<?X?t!\`H[L$cl@FP<rINK#
3!06c@Km',#uq?ABRXJ_&J@ZH=r%oH)&c^!*D@P[Bd-7s,u,g9.4SXT/SZqG;_h`[B5<$FGCAe.Jq<fM
ecIgo!sEEE#7(W9$OdIS%hK<c',5:!(Dn#.)]Tk>+'`M(,:"Q^-R^Dn?7[Z\0/,+9?rUcVDgZ\Um"'b>
q17)u3!09e1c5OF$4@7O%QG"33>3)A()If*3u^:F*ZlLJE?c_n-7;&-.P!&%/h]RH1.5)SDJsQ<I=:O7
Jq<ZIf)do61BfTm#Y#./2E+,c&=PTmEtoHO(`>CS90F=i+<`on,X3VN5Yk3,/3uUE6SVM-<+0Z_EcleY
mt$(Aomt`s3!1r?75Y??$<8uC<``Bo3>4te=umKm3u^gU*D@T14sNcd-;Hg3:b,j<6;^X(;ab#%DJO98
GCAt3Jq<NEf`F,81B_/E#=]&#2L&8(A4S]n8Qf4X(J6b->C%;`TNl(Q9g9q!5[@29?9sEF;I<?j?t!\`
H[L$cnUZ:CnU]Bq3!06c@Km',#urklBRXJ_&J@ZH=umHl)&c^!*D@P[PTigI,u,g9Ik"bU/S^/M;_h`h
B5<$FGCB%5Jq<BAgB'>:!sEEE#7(W9$Og\Y%hK<c',4Uc(J5P`JfGdP+'`M(9dD#3-R^Dn?7[Z\0/,+9
?rUcSJ:)Kfo7;LEm=F!n3!09e1c5OF$4@7O%M'*_3>3)A()If*)B1e%*ZlLJE?c_T-7=Hq.P!&%/h`\K
1.5)SDJt5OI=:d>Jq<6=g]BG;1BfTm#RLhG2E)+*&.po9EtoHO(`>CS4?X`Z+<`on,X3V'5Yk3,/3uUE
6SU>a<+0Z_EcleYp47gHl%.Xl3!1r?75Y??$4AaN<`]i'3>4te=umKm3u^gU*_[]24sNcd-;Hg%:b,j<
6;^X(;aaSnDMW=UGCB4:Jq<*9h?#Y=1B_/E#=]&#2E+Z<A4S]n8Qf4X(eQk.><O!#+C&M&9g9q!5[@2:
?9sEF;I<?j?t!qgH[L$cpjn$Jjal:j3!1r>@Km',#urkl<``g&&J@ZH=umHl3uV<C*D@P[Ag0qp,u,g9
:b#d;/S^/M;_h`hB5;jAGCB:<Jq;s5huYk?!sE';#7(W9$Og\YA4R:F',4Uc(J5P`>9"Y)+'`M(9dD#3
-R^Dn?7[[C0/,+9?rUcSJ:)QhqLO6LiITng2Zj0d"pYD?$4@7O%M'*_&ebro()If*)B0Y:*ZlLJ+sS?Z
-7:2j.P!&%/h\n51.5)SDJsoFIG9=)JcC;[!]U9<"Z/(B#mq%u2\%eY&NLL='c&hI)*8d"4WY[f+[.+r
5:.aC:F[kG5sd4l0eu-r@;^"(Fa\\oJV&IOJ`6_j"#C*L2$cYY$T9qE3"SV@'1ioS3Z(IN)bW=89HYKB
,>CBL:-_TO.kEtQ;,T,I6r[T4DfTuEIGTO,Jbt#Y!]U9<"[t9R7LE-R2ca!^83%;S=^!j'8imqq4WR3=
>WsB,5:'&i>u3%X5seFH?W0@#@;]k-Fa&8kJV&IKJ`Hkl"#C'h@g>I0<Ak7d=(Fi^&kQY<3YtCM)I"1%
9HRMO,#(9J:+%Gd.UGCm;,Ub"114O'CO:GQIGf[.JbO`W!]U8a"C_Q?7L<'&$tp,]8.cJ+AQfic8f8OO
*$$(B>\PBV,UH25-n-WP/1kTi?W/^f<+fusI!:"tJV&IGJ`Qql!sEEE#7(W9$OdIS%hK<c',5:!(Dn#.
)]Tk>+'`M(,:"Q^-R^Dn.kE8)0/,+9?rUcVDgZ\Uidl]4o7?$*3!1r?1c5OF$4@7O%QG"33>3)A()If*
3u^:F*ZlLJE?c_n-7;&-.P!&9/h]RH1.5)SDJsQ<I=:1-Jq<HCk5mUF1BjI0#Y#./2E+,c&4eep8JN"%
(`>CS90F=i+<`on,X3VN5Yk3,/3uUE6SVM-<+0Z_EclSSjai#7mt'[(3!1r?75Y??$<8uC<``Bo3>+nd
=umKm3u^gU*D@S\4sNcd-;Hg3:b,j<6;^X(;ab#%DJO98GCAV)Jq<<?klNgH1B_/s#=]&#2L&8(A4S]n
8U4K#(J6b->C%;`+'`D%9g9q!5[@29?9p/?;I<?j?t!\`H[L$ckCJ59l[e=&3!06c@Km',#urklBRXJ_
&J@ZH>+?C$)&c^!*D@P[Bd-7s,u,g9Ik"bU/SZqG;_h`hB5<$FGCA\+Jq<0;lN0$J!sEEE#7(W9$Og\Y
%hK<c',5:!(J5P`JfGdP+'`M(,:"Q^-R^Dn?7[Z\0/,+9?rUcSJ:)Kfl%+G;kCMq#3!09e1c5OF$4@7O
%M'*_3>3)A()If*)B1e%*ZlLJE?ca'-7=Hq.P!&%/h]RH1.5)SDJt5OI=:F4Jq<$7liK-K1BfTm#Y#./
2E)+*&.po9EtoHO(`>CS4?X`Z+<`on,X3V'5Yk3,/3uUE6SVM-<+0Z_EcleYm"'b>j+6S!3!1r?75Y??
$<8uC<`]i'3>4te=umKm3u^gU*_[]24sNcd-;Hg%:b,j<6;^X(;acCLDMW=UGCAk0Jq;m3mK,?M1B_/E
#=]&#2E+Z<A4S]n8Qf4X(J6b-><O!#+C&M&9g9q!5[@2:?9sEF;I<?j?t#UAH[L$cc@LRus+0V?3!1r>
@Km',#urklBNJ_8&J@ZH=umHl)&c^!*D@P[Ag0qp,u,g9:b#d;/S^/M;_h`hB5;jAGC@egJq<lOn,bQO
!sE';#7(W9$Og\YA4R:F',4Uc(J5P`JfGdP+'`M(9dD#3-R^Dn?7[[C0/,+9?rUcSJ:)Qhd"-e"qgn5<
2Zj0d"pYD?$4@7O%M'*_&ebro()If*)B1dZ*ZlLJ+sS?Z-7=Hq.P!&%/h\n51.5)SDJt5OIF3UtJbale
!]U9<"Z/(B#mq%u2\%eY&NLL='c&hI)*8d"4WY[f+[.+r5:.aC:J`Pm5sd4l0eu-r@;^"(Fa\\eJV&II
Jark%"#C*L2$cYY$T9qE<tIn_'1ioS3Z(IN)bW=89HYKB,>CBL:-_TO.kEtQ;,T,I6r[T4LiRW^IFNh"
Jb=Tc!]U9<"[t9R7LE-R2ca!j83%;S=^!j'8imqq4WR3=>WsB,5:'&i>u3%X5seFH?W0@#@;]k-I!:"h
JV&IEJb0"'"#C'h@g>I0<Ak7d=(Fi6&kQY<3YtCM)I"1%9HRMO,#(9J:+%Gd.UGCm;,Ub"114O'CO:GQ
IF`t$Jan<a!]U8a"C_Q?7L<'&$tp,]8.cIJAQfic8f8OO*$$(B>\PBV,UH25-n-WP/1kTi?W/^f<+fus
I!:"jJV&IAJb9('!sAc3#7(W9$OdIS%hK<c',5:!(Dn#.)]Tk>+!;^N,:"Q^-R^Dn.kE8)0/,+9?rUcV
DgZ\UfR\X*m=Fs43!1r?1c5OF$4@7O%QG"33>3)A()If*3u^:F*ZlLJ4sM=;-7;&-.P!&968(\\1.5)S
DJsQ<I=9h#Jq<6=pB!;V1Bg3)#Y#./2E+,c&4eep8JN"%(`>CS90F=i+<`on,X3VN5Yk3,/3uU";DD*<
<+0Z_EclSSgOXs-l%/U23!1r?75Y<>$<8uC<``Bo3>+nd=umKm3u^gU*D@S\4sNcd-;Hg3:b,j<6;^Wf
;ab#%DJO98GCA7tJq<*9q#WMX1B_/s#=]#"2L&8(A4S]n8S)'d(J6b->C%;`+'`D%9g9q!5[@29?9p/?
;I<?X?t!\`H[L$ch1:0/jam703!06c@Km',$!!Q*BRXJ_&J@ZH=r%oH)&c^!*D@P[Bd-7s,u,g9Ik"bU
/SZqG;_h`hB5<$FGCA>!Jq;s5qZ8_Z!sEEE#7(W9$Og\Y%hK<c',5:!(Dn#.JfGdP+'`M(,:"Q^-R^Dn
?7[Z\0/,+9?rUcSJ:)KfhgpB1iIUk-3!09e1c5OF$4@7O%M'*_3>3)A()If*UDl<Y*ZlLJE?c_n-7;&-
.P!&%/h]RH1.5)SDJt5OI=8q_Jq<rQquSh[1BfTm#Y#./2E+,c&.po9EtoHO(`>CS4?X`Z+<`on,X3VN
5Yk3,/3uUE6SVM-<+0Z_EcleY_L[;irIOnK3!1r?75Y??$<8uC<`]i'3>4te=umKm3u^gU*_[]24sNcd
-;Hg3:b,j<6;^X(;ab#%DJO98GC@A[Jq<fMrW5%]1B_/E#=]&#2L&8(A4S]n8Qf4X(J6b->C%;`+C&M&
9g9q!5[@3Y?9sEF;I<?j?t!\`H[L$c`.<Mkq11R.!Wt4]@Km',#urklBRXJ_&J@ZH=umHl)&c^!*D@P[
Ag0qp,u,g9Ik"bj/S^/M;_h`hB5<$FGC@G]Jq<ZI3<B9b"C_Q?#ROK=$tp+]&.oNg'Nu7g8f8P!*$$(B
>\PBV,UFcb-n-WP/1kTi0JP=j<+fusI&)21JV&IGJN*]5"9eu7#RLhG$k3[W&.oNg'GVB"(`=524?X`-
+<_pR,UFcbKIJB$/1iJ-0JP=N<+g)eKlqgaJV&IEJN*`f"Z/(B#mq%u2\%eY&NLL='c&hI)*8d"4W[9>
+[.+r5:.aC:J`Pm5sd4l0eu-r@;^"(Fa\\[JV&ICJN#@g75Y??$4AaN<`]i'3>4t!(-3:)3u^gU*_[]2
4sNcd-;Hg%:b,j<6;^W8;aaSnDMW=UGC@VbJq<BA2?[JH#=]&#2E+Z<A4S]n8Qf4X(eQk.><O!#+C&M'
9g9q!5[@2:?9sEF;I<?j?t!qgH[L$cbCP7rm=@-("p[U(<Ak7d=(Fi6&kQY<3YtCM)I"1%9HRMO,#(9J
:+%Gd.UGCmC5Q@s114O'CO:GQIE[7oJa7kD"pYD?<=94K%V/*B&ebs_()KR\)I"1%*ZnX$,#'=/:+%G=
.UFYXC+h8>114'oCOgeVIEd=pJa%_A#7(W9$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^-R^Dn.kE8)
0/,+9?rUcVDgZ\Uc@LRukCGDp#mq%K%1Y?/&NLL='c&hI)*8d"4WY[f+[.+r5:.aC.4Qi!5sd4l0eu-r
B5VX.Fa\\bJV&I7JMK\%$T9q63"SV@'1ioS3Z(IN)bW=89HYKB,>CBL:-_TO.kEtQ;,T,I6r[T4DfTuE
IF3UtJ`D;9$<8uC<``Bo3>+nd=umKm3u^gU*D@S\4sNcd,u-^2:b,j<6;^Wf;ab#%DJO98GC@njJq;m3
J,~>

%%EndBinary
grestore
np
grestore
%ADOBeginSubsetFont: WTDCKO+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WTDCKO+SimSun-GBK-EUC-H 5 GetGlyphDirectory
17432 <001C60D8A8C9B5EE310DD7A46C6A780C9380771431072FB63AC7FD8B8
966963B91B3B395307427E8CDAC75B19956BEB68A5BCF6CE7C02EF274C0374BD
B1363B455527659DDF304D846DDF58AD82E42958744743A77301912A7EC3E841
27F2CCB3F5C1BB159A7A7B13988667D9A420B9B4C1A28237FECD20E71FEFC205
11417467F197494061CA5777B56005C76A866570C8F304B657970B208EE3143E
637BCAFC06E8AE3ACE9C507329ABF14E85A784035C482AC417808C1355A85250
37481155555B0E1180BB5F260B4B3AED89FBA07E72CE863DDD8EAD4C42AB67FB
EB413121AC72CC3CEA9A1EC54C43AB5BB8F349DD7106F77B17A6EF54231174E0
11B953FBF315FB5F6E1EF0E7465D1954A898B983FC9288CB716E8C007B30CE05
E3A31CD182CAF370A3DC6146CA87233FA53ECD761CBD034CD9B1D776670CFA81
8CE2DFDE28B8A63E3DBBD8384C2961734220B2498E6878C6921858D209C4F46C
C48A9FA10222BE42A4AB479CD829474BA4A94D9D434> |
5681 <001C60D8A8C9B5EE310273E177E80597ED18B98C1A2546D2320D18DB50
53EFC27D64667CD82C0E8664625D0450FE93E88C662454548B54C465BDD31B5C
D5CA488EE12CC9A42A00FBEA24562B5F2B4A8520BBF3A58200C0054612E5434C
7BA5888D8916F56B06B5398A5AA18BB87A3821A82EF12A19DF44CC1F7EE44740
2F9AFA8D6A65852AFCC9ED4C3C9C89B911F0DF4F343835791967DAC4B7E3C70A
F3ABB806ED1AF5874653BC75132DF2FDAEC8F13BC61B26DB66979C5392DC01E9
ABA34F57E046758BB779A30BD2DAC4FDD1A6FF793EEB7A9999F7BE3651F4CE61
F36B5D4B7BE15F0A570CC30DFC527A3F5C484FBDD69DA1FE008D214388756AA3
2AB7B92BC01BEBB691FA8D9EDD5ADE37CEE88C5B187EADD424C770FDCA7CCCC0
043ED18099238A66B8D86167730AF3D0C351F671DA684115904918B54895B19E
BC82B76F49E97A9239B7A0D21072EE07FBD8A74C52BFF827922B1FF81598B1CB
8590CD0EF078CB2E3D7ED55198F7DD9753F1AD9E6FE1BCD0DA5AF390148DAF16
AE42615CD9F7BABA830B0BEEBC17452B141D57D88F2510F434CC32A354DA97> |
8984 <001C60D8A8C9B5EE3102B5A9839F635E86BE8B22D0C2561985725C0ED5
3361A9EDC8C8BFA5EE3DE0752238BF3D2D26538BA14C12BD2D68632351A6D40E
9140CA5113D2BEE2E85368A021E50187921ADA8E8C5694219B730C5242014956
6944BC5CCC584FC99005AB7ABA90F00134D853F21AC73789BDFB6282C672852E
F98F3172F3725E37B76F3C65DA53B714CB9179134BBCAD8D5E51E6C226CEC446
FE2C799E47A1B97E967D4DB235BB3AE8C0145EDE09C50638971B978F6C003FA4
2A439BE9A3B71E3F8C26EEA0C6A06CE6829A99F0FB720B4B57C465BB219791B9
841837118F38C59B4680ADCBC5DC5669B7FEEEF5D20D70EC3D7E58CC61764528
4F76A4E011CC09B2670FD8192789001D6132E76B10B33CFF73C01F0A4CFF20F9
BF2A21ED0E42F661D7A028CE47003D2D182D40FA6B0DE7BDE2EBFB6C04D27ECA
2F166390B71DCE9E32A893FB80A8DB153E0581> |
5951 <001C60D8A8C9B5EE310273E1BF1E28686314D946A11BB720BF5FE3D9A0
13ACEA39EC743269C16F2650D72828DE09DE9661682BD91B2E62B3AF5BD59A58
10BAF58A398F0E1AEF5620F41D06F20EE47D40313F1D9ACDAFF2846A6C57A379
8F82CECC72C1A1F72A756D12A4AF8E02D88BAE2AD8F96E25E44516F8A24ACDA9
6B706D2DECCB8C8E4FC9662BD2D293A58995557A24A0744F8792308C07A3434A
0CEC4AB35BEDD61E9F27D120947EADD506038B0127F7202760C8BA53EB7A7AFB
0C859BCAF3E58F3CE9407EC051EF947E90315758DEBEA04862264B289554F5D3
7A84BD4C122A6A2E42B048A370363A5F60CA922CE0409D301328665EE7F6B105
A143DE152D4A07A1D4CA0325D7E4F33CE1228680CF0418D986B918B6D4E2EB7C
71B3690056570E644DA7CE09DA0C8B7C77603442D283E1A832E3C5C11E031860
AAB48D19BE66EAE150D181A35B86DB8E7B656E4DAA0C9D4C7A4CBA39252FC076
CB8B96E5E55AAE5696E0FB6AF8C7644A1914BE35F4ADB84A1EB12DB0A9099507
DF957A37588CA6864F63E9DFC3369F8C8A53952A6487F3EDF8082372E29F7C49
A1B9D81AA6414A567747240F54DEAC73726046CB7D39240CC565F95B97ED0056
A93755C790E99C04B7CF> |
2251 <001C60D8A8C9B5EE3102FB3B0DB1F2ED712BF3FFF41D7126A86E68F34F
BA51E9285423B326D2A10EE7B4A419A7F9C03F6A62715EA6AB63DF1E60639D21
D96555524D4B6AC22321BA3702091FBAE6CC9CCF370D2547A9DDA51345BBDBE7
2A1909BA7130F5866A3F601343C5FD53F3762FCEE05A1F18C7D16CAAF6196584
6FDF545B1E52466D863DA3CC0F04A1E6EB6BC83D29076DBEEB215BEAF0E82E7A
25A5AE0F469E15DEE9> |
!
end
end end
%ADOEndSubsetFont
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
83.9157 480.823 mo
(D\030 Q\0261#\030\027?\010\313)
[-10.5598 -10.4999 -10.5598 -10.4998 -10.4999 0 ]ysh
gsave
191.616 492.403 mo
189.036 492.343 186.876 490.243 186.876 487.663 cv
186.876 410.743 li
186.876 408.103 189.036 405.943 191.616 406.003 cv
210.636 406.003 li
213.276 405.943 215.376 408.103 215.376 410.743 cv
215.376 487.663 li
215.376 490.243 213.276 492.343 210.636 492.403 cv
191.616 492.403 li
eclp
215.532 492.476 mo
215.532 405.812 li
186.708 405.812 li
186.708 492.476 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 768.104 ]ct
[0 86.664 -28.824 0 215.532 275.628 ]ct
snap_to_device
<<
/T 1
/W 256 
/H 256 
/M[256 0 0 -256 0 256 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Jc`.X/HZ+Z"pYD?$4@7O%M'*_&ebro()If*)B0Y:*ZlLJ+sS?Z-7:2j.P!&%/h\mZ0f"C`Y6$6W1Bdt>
#RLhG2)Yq'&.oNg3#*2h(`>@R*$$(^+<`il,X!J%5!M:_/3uTi"%4k!7>:lH!\4@/"\(<S7g]V]2FpCN
8eMe19MIMa:-'=i*?I9b:cot"4XO&j5<p_t5sb`S<E<0i=GR$\!\+:."BdPd7g`EW2FpDD8ePB%9MIMa
:-';!*F:fM?XR;>4XEui@R)GB5mLn!<Ff0"AS-f$X9'gQ1B^in#=f)(2%3#I>=oK495%$[(J["0?"mV,
+(&Da;'[Gc-Ybmr;[G`ACM[N_11b'7Mup$]-j'PS=_@sF$!I]FD@TlC&R5t`9bnO?)&cdp?611qDdcKg
,uQ+*.4P^(/1kWj0JP=o=D`#;!iZ5J!sAd?#7(VC$OdIS%hK=X',2/s(Dn#.)eiV"+!;_8,:"Q^-Yb(>
.P!&%/h\n51.>;^EH7-BVue7I1Bdt>#RLhG2)Yq'&.oNg'GVBD(`>@R*$$(B+<`il,X!J%4qB(l.kEtQ
017NM79F/AEc[BFVZJ+G1Bg6)#Y,402)[ua&5!QK9,/4&(f!+2:E:K<+<`il;*?7(&O&EE.kEtQ<)kYS
79F/AEcZ>e!i?#D"#C*M1^?MX=uA3/8TdW<>Y@ab3>bLP)I4@i4!7lm,>gTM'2h#'5V#c!6<$rq=%-\4
EH#u@G*W3+![7_&"BfpR7gW?V$qNro8ePB%BMCK':-';!BjNkC?XR;>4V]8@-Ybmr;aE!7<Ff/dAS,du
G^4IYQia&b+ThfL=_@t0$!I]FD@TlC&R7tB9bnO?)&cdp?9969DdcKZ,UH>9C+1W2/1kWjA61Nt=D`#(
H$4L]RKB2b*s2XoB*S\K=pk`J%M'*_>S@g#()If*)B3Bs*Zna-@2U:8,pk!S.4Qi!/M8\10f!<BD/jTA
FF&=^S-#Ac*Wplq"uHSl$4@7O%Q=q2&ebro()If*3ZB%Z*ZlLJ)^6LP4XMO?.4Qi!5qXfY0eu1"D/jT;
FF&7\I%CD4!Z_A!"b8E87g]V]2M!du8eMds'c&eH)*/^4*?I9b)Bh3f,X!JP5!M:_/3uTi6nqb3=CuPn
F*)SOrd:@?T)ou71Bg6)#Y,5*2)[usF\39O92&&?(f!+2:E<b')^&KM,>gTN;EePT.oS`#<)lt#7:g(N
E-$,EHMr5C!kn^q"#C'_G6^VF=uCn&8R"e">YB]D3>YFO)I8#&4!.g;@8T06;EePT.T8Vb<)mI17:g(J
E-QYOHN&<lI"VR7!]gDc"Bf@B7gW?V$uUc'8eG<$BMCK':)OsUBjNkC?Z0@M,UH>9C5+3:/1kWjA61Nt
Ao2L6H$4L]I/SGI!k\Rp!s8[SB*S\K=pkaV%M'*_>S@g#()K^`)M`$5*Zna-@>H0T-7<OW.T7lM/h\n5
11aR)E-lkPH@5U;L]Y-h2Zj0d"uHSl$4@7O%M'*_&ebro()If*)B0Y:*ZlLJ+sS@i-7:2j.P!&%/h]UI
1.>;^EH6qYH2r9fI#8!9!]C-:"U6dh7g]V]2@_YW&J>a:'c&eH)*/]V*?I9b+Zptp4XMO?5<p_M5sdq,
0ipeGAoVj4FT6[_I#J-:!]:'9"\(<S7g`EW2FpCN8eMe19MIMa:-'=i*?I9b:cot"4XO&j5<p_t5seON
<`__JAoWcN!d&U3pjA)'[fSAg1B^i;#=f,)2)[us>=oN592&&?(J["0>od65+CAMb;*?4'5%6c-;aFnm
<Ff0"AS,q$"*f*7HM;fK!k&.d"#C'_B*Up5=u?_+8R"e!>YAa)3>YF.)I7&`4!.g;@8S9r;C?3E.T8Vb
CM[N_11b'7"E8U2G'`k0Ooi#m1'7U]=_@sF$!I]FD@TlC&R5t`9bnO?)&cdp?611qDdcKg,pk!S.4S7I
/Sd!n0f!<B"`84*H$4N,I$=]=!\a]Z"_S&G#mq%K%1Wm[&R5t`'c%T&)&aG6?6112+^lT@,pjuf.4Qi!
/M8\10eu0%=D`%uH$"B)I$Oi>!\XX3"U6dh#mq%t2@_YW&J>`k'c&eH)*/]V*?H:F+Zptp4XMO?5<p_M
5sd4m0es#'=CuPnF*)_SoR*#-YlZN[1Bg6)#Y,402)[us&5!QK9,/4&(f!+2:E:K<+<`il;*?7(5!M:_
/3uU%<A=e]79F/AN,s)aHLlNQ!jD_X"#C*M1^?MX=uA3/8R"e">Y@ab3>bLP)I4@i4!7lm,>gTM;EePT
.oS`#<)j99=%-\4EH$/JG'`_,S-#kq/-@[2=a(*@$!K1p84d#X&R7tB9fX"b3Z;:<?9969?sunq,uQ+*
5Uo\u/Q<*XA61NtAo2L3H$4N(I%CDB!\4?T"Bf@B7gW?,$uQPZ8eG<$BMB6Y:)OsUBjMi&?Z0@M,UH>9
C+1W2/1h9G04\->AQWegH[0d\n9gl1X9'gQ"9iEC#ROZB$k3[W&.r.\'Rgf6(`=52BjMi&+<b/<,UFcb
C+1V_/.F0`0/,+9AQWehEd;bQmsK]gb5sX*1Bdt>#RLhG$k3\*&.oNg'GVB"(`>@R*$$(B+<`il,X!J%
4t.s3/3uTU6npGc=D`%uF*)_SnU1@aKEB9t3!1r?7PkB@$4A^LJN"-4&ednQ(-*3L3ZCj8*]kJf4<l+7
-;m#l5V"BO6<$r>=%-5'EH6,BG'`_,rHs>$aT=F(1Bg6)#=f,)2)[usF\39O92&&?(f!+2:E<b'+C@5U
;*?7(5%6c-;aE`L<Ff0"AS,q$F*)SOo6gF_L]YX!3!1r>=a(*@NES2k84d#X&mS(C9fX"b3Z;:W?9969
?sunq,uQp95Uo\u/Q>_\=%-\4D/a`FG'`e.q0\&$`r\4&!sDb>#=f)(2%4AV>=oK495%$8(JYhd?"mV,
+(&qp;'[Gc-YeAc;_0M904\->AS,duH[0d\omHL]Muq!#3!06cI:icj$!I]FD@R0g&R5t`IMN`[)&e9E
?611qDdak9,pk!S.4S7I/M8\10f!<BD/aiIFF*Y.omDc$_u_n#"9eud#RLhG$k3[W&.oNg'GVB"(`AAR
*$$(B+<_pR,X!J%-n-Vr/1iJ-6npGc=D`%uMKF/jpjD[\O93<$3!1r?"uHTU$4A^L%Q=q2&ed5>(-*3L
3ZB%Z*]kJf4<l+7-;m#l5V"BO6:4-q=%-5'EH6,BH@#C7nU-K$_?)\!1Bg6)#Y,5*2)[us&5!QK92&&?
(f!+2:E:K<+Ab0F;*?7(5*/#[;aE`L<E<0iAS,q$F*)SOqL%aZPQJZ&3!1r>=Yp@R$<f<=84d#X&mS('
9fX"b3Z;:W?999:?sunq,uQp95V#c!@oQH==%-\4D/a`FG'a%5m<k3$^]HIt1B^in#=f)(2%4AV>=oK4
95%$[(JYhd?"mV,+(&Da;'[Gc-YeAc;aE!NCh-U&AS,duOa2+rr-[gXQib#(3!06c=_@sF$!I]FD@R1L
&R5t`9bnO?)&e9E?611qDdcKg,pk!S.4S7I/Sd!n0f!<BD/aiIP'[(Sl$Sp$]`L+p"9iEC#RLhG$k3[W
&.r.\'GVB"(`=52*$$(B+<b/<,UFcb-n-Vr/1iJ-0JP=O=D`%uMKF1DI-5mI!k\Rp"#C)b1^FBp$T0gP
2\6Q6',2/s3>`Vp)]Tk>4!5\/,:#E!-U'a[.kEtQ017NM79F/AEcZ>KH@4h%ScZM*3!1r?7PkB@$4A^L
84a@b&ednQ(-*4,3ZCj8*]kJf4<m]d-;m#l5V#c!6<$r>=%-5'EK"s\G'`1rTE;\+2Zki==Yp@R$<f;F
84d#X&mS('9fX%c3Z;9E?999:?mAN3,uQp95V#c!@oQH==%-\4EH$/JFoZjJI"DFQ!]U9<"Bf@B7gW?V
$qNro8eG<$BMCK':-';!BjNkC?XR;>4XEuRC-X7I5qQkPA61NtAo2L3H$4MoI/eSI!n[Q6!s8[/B*Up5
=pkaV%U2O;>S@fG()K^`)I7&`*Zna-@8S9r;C?3..T7lMCG.AC11aR)E-lkRHK9JPI"h^R!]L2a"_S&G
$!I]F%1Wm[&R5t`'c%T&)&aH.?6112+^lT@,pk!S.4Qi!/M8\10f!<BD/jTAFF*%rqg=2$eH.]41Bdt>
#RLhG$k3\*&.oNg'GVBD(`>@R*$$(B+<`il,X!J%4t.s3/3uTU6npGc=D`%uF*)_SkC!)QM?;9/3!1r?
7PkB@$4A^LJN"-4&ednQ(-*3L3ZCj8*]kJf4<m]d-;m#l5V"BO6<$r>=%-5'EH6,BG'`A"pO%o$dfMK2
1Bg6)#=f,)2)[usF\39O92&&?(f!+2:E<b'+C@5U;*?4'5%6c-;aE`L<Ff0"AS,q$F*)SOl$W/ONWRW1
3!1r>=a(*@$!K1p84d#X&mS(C9fX"b3Z;:W?9969?sunq,uQp95Uo\u/Q>_\=#+?!D/a`FG'`G$o6cW$
d/l90!sDb>#=f)($Ogp,>=oK495%$8(JYhd?"mV,+(&qp;'[Gc-YeAc;_0M904\->AQWegH[0d\l[85M
Ooiu33!06cI:icj$!I]F%1Wm[&R5t`IMN_:)&aH.?611qDdak9,pk!S.4S7I/M8\10f!<BD/joJFF*;$
msL?$c2os-"9eud#RLhG$k3\*&.oNg'GVB"(`>@R*$$(B+<_pR,X!J%4t.s3/1iJ-6npGc=D`%uMKF/j
mX4DLQ3,;43!1r?"uHTU$4A^LJN",P&ed5>(-*3L3ZCj8*]kJf4<l+7-;m#l5V"BO6:4-q=%-5'EH6,B
H@#%-l[5'$bQ9a+1Bg6)#Y,5*2)[usF\38[92&&?(f!+2:E>W\+Ab0F;*?7(5%6c-;aE`L<E<0iAS,q$
F*)SOn9jJJRKCY63!1r>=Yp@R$<f<=84d#X&mS('9fX"b3Z;:W?999:?sunq,uQp95Uo\u@oQH==%-\4
D/a`FG'`\+kBrd$aoXO)!sDb>#=f)(2%4AV>=oK495%$[(JYhd?"mV,+(&Da;'[Gc-YeAc;_0M9Ch-U&
AS,duH[0d\npKPHSc["83!06cI:icj$!I]FD@R0g&R5t`9bnO?)&e9E?611qDdcKg,pk!S.4S7I/M8\1
0f!<BD/aiIFF*P+j*[L$`r\4&"9eu7#RLhG$k3[W&.oNg'GVB"(`=52*$$(B+<b/<,UFcb-n-Vr/1iJ-
0JP=O=D`%uMKF/jomG_GJcb'93!1r?"uHSl$4A^L%Q=q2&ed5>(-*3L3ZB%Z*]kJf4<l+7-7:uA5V"BO
6:4-q1.>;WEH6,BH@".is*TJ$jT7CD1Bg6)#Y,402)[us&5!QK92$*](f!+2:E:K<+Ab0F;*?7(5!M:_
;aE`L<E<0i=CuQ3F*)SOf6mOEL'$E;3!1r>=Yp@R$<f;F84d#X&mS('9fX%c3Z;9E?999:?sunq,uQp9
5V#c!@oQH==%-\4EH$/JG'_egqg=2$irV1B1B^in#=f)(2%3#I>=oK495%$[(J["0?"mV,+(&Da;'[Gc
-Ybmr;aE!NCh-U&AS,duG^4IYfmNUCM?;c=3!06c=_@sF$!I]FD@TlC&R5t`9bnO?)&cdp?611qDdcKg
,uQ+*.4S7I/Sd!n0f!<BD/aiIG'_kipO%o$huYh>"9iEC#RLhG$k3[W&.r.\'GVB"(`=52BjMi&+<b/<
,UFcbC+1V_/1iJ-0JP=O=D`%uH$"AeI._lI!oF&="#C)b1^FBp$T/A'2\6Q6',2/s3>`Vp)]Tk>+!;^h
,:#E!-U&t/.kEtQ017NM79FDHEcZ>KHJNu?I#nEd!]U9<"\(<S7g]V]2M!du8eMe1'c&eH:-'=i*?I9b
+ZpuH4XO&j5<p_M5seON0ipeGAoVj4FEVueI.;TI!o3o;"#C*M1^?MX=uA3/8TdW<>Y@ab3>bLP)I4@i
4!7lm,>gTM;EePT.oS`#<)mI17:g(NE-$,EHJa,=I$=]f!]U9<"BfpR7gW?V$qNro8ePB%BMCK':-';!
BjNkC?XR;>4XEuRC-X7I5qQ&9A61NtAo2L3H$4MlI-l<I!o!c9!s8[/B*Up5=pkaV%U2O;>YAa)()K^`
)I7&`4!.gJ@8S9r;C?3..T7lMCG04"11aR)E-lkRHJs8;I$aug!]L2aI:icj$!I]F%1Wm[&R5t`IMN_:
)&aH.?611qDdak9,pk!S.4Qi!/M8\10f!<BD/jTAFF)qol$Sp$fE+#7Ig$$5#RLhG$k3\*&.oNg'GVB"
(`>@R*$$(B+<_pR,X!J%4t.s3/1iJ-6npGc=D`%uF*)_SjF$-<S-%:D3!1r?"uHTU$4A^LJN"-4&ed5>
(-*3L3ZCj8*]kJf4<l+7-;m#l5V"BO6:4-q=%-5'EH6,BG'`7tja<X$ecIf51Bg6)#Y,5*2)[usF\3:2
92&&?(f!+2:E<b'+C@5U;*?7(5%6c-;aE`L<E<0iAS,q$F*)SOk'Z3:TE<XF3!1r>=a(*@$<f<=84d#X
&mS('9fX"b3Z;:W?9969?sunq,uQp95Uo\u/Q>_\=%-\4D/a`FG'`>!iI$4YoE$uS!sDb>#=f)(2%4AV
>=oK495%$[(JYhd?"mV,+(&qp;'[Gc-YeAc;_0M904\->AS,duH[0d\aF+#8KEC`H3!06cI:icj$!I]F
D@R0g&R5t`IMN_p)&e9E?611qDdeGI,pk!S.4S7I/M8\10f!<BD/aiIFF)&VrHs>$nH(ZP"9eud#RLhG
$k3[W&.oNg'GVB"(`=52*$$(B+<_pR,UFcb-n-Vr/1iJ-6npGc=D`%uMKF/jbC'27L][&I3!1r?"uHTU
$4A^L%Q=q2&ed5>(-*3L3ZB%Z*]kJf4<l+7-7:uA5V"BO6:4-qPsneeEH6,BH@!e_q0\&$mfGHN1Bg6)
#Y,402)[us&5!QK92&&?(f!+2:E:K<+Ab0F;*?7(5!M:_;aE`L<E<0iMe6sfF*)SOc$]85MurDK3!1r>
=Yp@R$<f;F84d#X&mS('9fX"b3Z;9E?999:?sunq,uQp95V#c!@oQH==%-\4EH$/JG'_G]omDc$m/f6L
1B^in#=f)(2%3#I>=oK495%$[(JYhd?"mV,+(&Da;'[Gc-Ybmr;aE!NCh-U&AS,duG^4IYc[>>3O94bM
3!06c=_@sF$!I]FD@TlC&R5t`9bnO?)&cdp?611qDdcKg,pk!S.4S7I/Sd!n0f!<BD/aiIG'_M_nU-K$
l2imH"9iEC#RLhG$k3[W&.r.\'GVB"(`=52**s[.+<b/<,UFcb-n-Vr/1iJ-0JP=O=D`%uH$"A[I.)HI
!pKbG"#C)b1^FBp$T0gP2\6Q6',2/s3>`Vp)]Tk>+!;^h,:#E!-U'aE.kEtQ017NM79F/AEcZ>KHII9/
I$Oit!]U9<"\(<S7g]V]2FpCN8eMe1'c&eH:-'=i*?I9b+ZpuH4XO&j5<p_M5seON0ipeGAoWcNFEVu[
I-Z0I!p9VE"#C*M1^?MX=uA3/8R"e">Y@ab3>bLP)I4@i4!7lm,>gTM;EePT.oS`#<)mI17:g(NE-QYO
HI[E-I$t-!!]U9<"BfpR7gW?V$qNro8eG<$BMCK':-';!BjNkC?XR;>4XEuRC-X7I5qQ&9A61NtAo2L3
H$4MbI-5mI!p'JC!s8[/B*Up5=pkaV%U2O;>YAa)()K^`)I7&`*Zna-@8S9r;C?3..T7lMCG04"11aR)
E-lkRHImQ+I%CE"!]L2a"_S&G$!I]F%1Wm[&R5t`IMN_:)&aH.?6112+^lT@,pk!S.4Qi!/M8\10f!<B
D/jTAFF)Sej*[L$iW;(A1Bdt>#RLhG$k3\*&.oNg'GVB"(`>@R*$$(B+<_pR,X!J%4t.s3/3uTU6npGc
=D`%uF*)_Sg3hk,Jc[n61Bg6)#Y,402)^"E&5!QK9,/4&(`>@R:E:K<+<`il,X!JP5!M:_/3uU%<A@QD
=CuPnF*)SO]6sX+KE=.8"#C*M1mUW==uA3/8TdW<>Y@ab3>bLP)c%J\4!7lm,>gTN;EePT.oS`#<)mI1
7:g(NE-$,EHG"Y(I"h\`!WiH["BfpR7u^\0Jk/I;8ePB%BMCK':-';!KO-_^?XR;>4XEui@R)DA5qQ&9
A6232Ao2L3H$4MII/A;I!r`6\!s8[/B*Up5=u?_+Kj..]>YAa)()K^`)I7&`4!.gJ@8S9r;C?46.T7lM
CG04"11b'7E-lkRHG4e&I#8"(!]U8a"FXnf#ROZB$uQOc&.r.\'Rgf6NYrajBjMi&?Z0?t,UFcbC+1W2
/1iJ-0JP=o=D`#(H$"AII.r#I!rE$Y!sAc31^FBp$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:#E!-R^Dn
.kE8)017NM79FDHEf+sbHGP"%I#\:)!]U9<"U6dh7g]V]2@_YW&J>a:'c&eH)*/]V*?I9b+Zptp4XQLZ
5<p_M5sdq,0ipeGAoVj4FF&8MI.M`I!r2mW"#C*M1^HSY=uA3/8J"K,'2)"n3>bLP)c%Iq4!7?^,>gTN
;Eg1-.oS`#<)lt#7:g(NN,s)aHGb.#I$+R+!]U9<"BdPd7g`EWJk/I;8ePB%9MIM`:-';!*F:fM?XR;>
4XEui@R)GB6"<koA6232Ao2L3H$4MPI.)HI!quaU"#C'_B*Up5=u?_+Kj..]>YAa)3>YF.)I7&`4!.g;
@8S9r;C?46.T8VbCM[N_11b'7E05EhHGt:!I$Oj-!]U8a"Bf@B#ROZB$uQPZ8eG;A'MT>Z:)Ot*BjMi&
?Z0@M,UFcbC+1W2/1kWj0JP=o=D`#(H$4MRI-Z0I!qZOQ!sAd?#7(VC$OdIS%hK=X',2/s(Dn#.)]Tk>
+!;_8,:"Q^-R^Dn.kE8)0/,+979FDHEf+sba*d-!RKE'^3!1r?"uHSl$4A^L%Q=q2&ebro(-*3L3ZB%Z
*ZlLJ4<l+7-7:uA5V"BO68(_]1.>;WEH6,BH@!\\kBrd$ncCcQ1Bg6)#Y,402)[us&5!QK9,/4&(f!+2
:E:K<+<`il;*?7(5!M:_;aE`L<A@QD=CuQ3F*)SOb'`;uSc\E`3!1r>=Yp@R$<f;F84d#X&mS('9fX%c
3Z;9E?999:4<m]d,uQp95V#c!@oQH==%-\4EH$/JG'_>Zj*[L$n,bQO1B^in#=f)(2%3#I>=oK495%$[
(J["0?"mV,+(&Da;*?4'-Ybmr;aE!7<Ff/dAS,duG^4IYb^AAsO9,jn!sDb>#=f)($Ogn_>:N5W>S@fG
()K^`)I7&`*Zna-@8S9r;C?3..T7lMCG.AC11aR)E-lkRHEDSpI#nC;!sAd?#7(W>$OdIS.h<1'>S@ed
()If*)B3Bs*ZlLJ@3[$D-7<OW.P!&%/h\n511aR)EH6>HHEMYoI$"I;"#C)b1^FBp$OdIr%Q=q2&ebro
()If*3ZB%Z*ZlLJ4<l+7-7:u+.P!&968(_]1.>;^EH6,BH?ufCqg=P.#m2se7PkB@$4A^D2M!du8eMe1
'c&eH)*/^4*?I9b+ZpuH4XO&j5<p_M5seON0ipeGAoVj4FEVu8I///R!XJla"\(<R7g`EQ2)[usF\39O
92&&?(f!+2:E<b'+C@5U;*?4'5%6c-;aE`L<Ff0"AS,q$F*)SOZ@)CoPQD'l1B^j)#=f(S=uCn&8R"e"
>YAa)3>YFO)I8#&4!.g;@8T06;EePT.T8Vb<)mI111b'7E-QYOHF&"lI$Fa;!s8[/B*Up]$!I]FDM;:e
&R7tB9bnO?)&cdp?9969DdcKg,uQ+*L+6+Q/Sd"M=#+>hD/aiIG'^NCo6ci*"Tni0I:id?#ROZB%%%M8
&.r.\'Rgf6(`=52BjMi&?Z0?t,UFcbC+1W2/1iJ-0JP=o=D`#(H$"A?I.;TM!WrN-"U6e?#RLhG$k3[W
&.oNg'GVB"(`>@R*$$(B+<_pR,X!J%4t.s3/1iJ-6npGc=D`%uMKF/j[s[XlQN@3j1BfW?1^HSY$T0hn
2\6Q6'0$^B3>`Vp)c%Iq4!5\/,:#E!;Ed<1.kEtQ6UWY179F/AEcZ>KHFS@iI$as9"#Dh=7PkB@$<f;F
84a@b&edo39fX%c3ZCj8P<0m`4<m]d-;m$:5V#c!6<$rc=%-\4EH#u@G'^]Hl[5*%!!>/9"BdPd7g`EW
Jk/I;8ePB%9MIM`:-';!KO-__?XR;>4XEui@R)DA6"<koA6232Ao2L3H$4MFI-H$I!]U8a"Bf@B7gW?V
$uUc'8eG<$BMCK':)OsUBjNkC?XR;>,UH>9C5+3:R4W2jA61NtAo2L6H$4MGI-5mI!]^;a!sDb>#7(W>
$Ogn_%hK=X',4.V(JYhdLM:'9+(&qp;'[G7-Yb([;_0M90/,+9AQWegH[0^Z]R8ggSc\lm3!09e"pYD?
$4@7O%M'*_&ebro()If*)B0Y:*ZlLJ@3[$D-7:2j.P!&%/h\n51.>;^EH6qYH@!;Qj*[L$r;nq\1Bdt>
#RLhG2)Yq'&.oNg'GVBD(`>@R*$$(^+<`il,X!J%5!M:_/3uTU6npGc=CuPnF*)_S^O5!fSH9]31Bg6)
#Y,402)[us&5!QK92$*](f!+2:E:Gs4!7?^,>gTN;Ed<1.oS`#<)kYS79F/AN,s)aHD#ZcI%CBW"#C'_
1^?MX=uA3/8R"e">Y@ab3>bLP)I4C)?999:?sunq,uQp95V#c!@oQH==%-\4EH$/JG']j0rHt4=(]uPs
=_@t0$!K1p84d#X&R7tB9fX"b3Z9)GBjNkC?XR;>4XEuRC-X7I5qQkgA61NtAo2L3H$4M.I/A;a!Z(q@
"Bf@B#ROZB$uQPZ8eG;A'MT>Z:)P/m?"mUd+(&qp;'[Gc-Yb([;_0M90/,+9AQWegH[0d\UO;lbTE5i1
"9iEC#RLhG$k3[W&.r.\'GVB"(a0b8)eiV"+!;_8,:"Q^-Yb([.kE8)0/,+9AQWehEd;bQUjVoaT`Po1
1Bdt>#RLhG$k3\*&.oNg'GVBD,8_:Z)]Tk>+!;^h,:#E!-U&t/.kEtQ017NM79FDHEcZ>KHDZ)_I%gZU
"#C*M1^HSY$T0hn2\8Ro'2'&U,WQ]:3ZCj8*]kJf4<m]d-;m#l5V"BO6<$r>=%-5'EH6,BG'^'6o6d;7
&d'on7Pk??$<f;F84dqr&mS(',u$B::-':h*F:fM?T]Q14XEui@R)GB5seONA6232AoVd2FEVu/I.;T[
!YGMj"BfpR7gW?V$qNro8ePB%->6+6(J["0?%cNG+(&Da;*?4'-Ybmr;aE!7<Ff/dAS,duG^4IYWI4/^
V#h21!sDb>#=f)($Ogn_>=oK4-VJ,I()K^`)I7&`4!.gJ@8S9r;C?3..T7lMCG04"11aR)E-lkRHE)A[
I&6rURKE\@B*S\K=pk`J%M'*_-sRE"IMN_:)&aH.?611qDdak9,pk!S.4S7I/M8\10f!<BD/jTAFF(!8
l[5Q2%0H_:"uHSl$4@7O%Q=qK&J>`k'c%T&)*/]V*?H:F+X/-V4XMO?.4Qi!/M8\E0eu1"D/jT;FF&88
I-H$V!Xo/e"U6dh7g]V]2M!e;&5!QK3#*2h(`>@R:E:K<+<`il,X!JP5!M:_/3uTi6nqb3=CuPnF*)SO
Y'fD[Vud>/1Bg6)#Y,5*2)[uV8TdW<PY4\E3>bLP)c%J\4!7?^,>gTN;EePT.oS`#<)lt#7:g(NE-$,E
HEV_XI&R/S"#C'_1^?MX=uCm`84d#X&mS('9fX"b3Z;:W?9969?sunq,uQp95Uo\u/Q>_\=%-\4D/a`F
G'^B?j*[j.#m184=_@t0$!K2=$uUc'8eG<$BMCK':)OsUBjNkC?^kJ$,UH>9C5+3:/1kWjA61NtAo2L6
H$4M=I,TIR![n-Q"FXnf#ROZB$uQOc&.r.\'Rgf6:)Ot*BjMi&?Z0@M,UFcbC+1VC;_0LQ0/,+9AQWeg
H[0^ZP'm:WWraUM"9eud#RLhG$k3[W&.oNg'GVB"(`=52*$$(B+<_pR,UFcb-n,`X.kE8)017NM79FDH
Ef+sbHB`gUI&mAq"#C)b1^HSY$T0gP2\6Q6'0$^B3>`Vp)]Tk>4!5\/,:#E!-U&/-5V"BO6:4-qPsnee
EH6,BH?tj(qg>LI,Qfh+7PkB@$4A^L84a@b&edo39fX%c3ZCj8*]kK@4<m]d-;kL@5<p_t5seON<`_^l
AoWcNFEVtrI///m![@e'"BdPd7g`EW2FpDD8ePB%9MIM`:-';!*F:fM?XR;>4XCe?5%6c-;aFnm<Ff0"
AS,q$G^4IYQ[JOTY6#mM1B^in#=f)(2%3#I>=oK495%$[(J["0?"mV,+(&Da;'Zl&;C?3E.T8VbCM[N_
11b'7E-QYOHC0*QI'<Yq!s8[/B*S\K=pkaV%U2O;>S@fG()K^`)I7&`*Zna-@8Rdc,pk!S.4S7I/Sd!n
0f!<BD/aiIG']R(o6dbD*s2WLB*S\K$4@7O%M'*_>S@ed()If*)B3Bs*ZlLJ@2C.6,pjuf.4Qi!/M8\1
0eu1"D/jTAFF'C'nU.SC*Wn2%"uHSl$4A^L%Q=q2&ebro(-*3L3ZB%Z*ZlLJ)*B,h4XMO?5:S075sd4m
0eu1"AoVj4FF&8'I.)Hg!Z_A!"\(<S7g]V]2Fob<8eMe1'c&eH:-'=i*?I9b)Bh3f;*?7(5!M:_/3uU%
<A@QD=CuQ3F*)SOSUBgPZN;*K1Bg6)#=f,)2)[us>=oN592&&?(f!+1>od65)^&KM,>gTM;EePT.oS`#
<)mI17:g(NE-QJJHCfNMI'`qo"#C'_G6^VE=u?^Z8R"e">YAa)3>YFO)I7&`*'56L?sunq,uQ+*5Uo\u
/Q>_\=#+?!D/a`FG']d.l$Tl?)?U'E=_@t0$!I]FD@TlC&R7tB9bnO?)&cdp*F9d/?Z0@M,UH>9C+1W2
/1kWjA61Nt=D`#(H$4M,I-5mb!Z2"B"_S&G$!I]F%1Wm[&R5t`IMN_:)&aG8BjMi&+E([5,UFcbC+1V_
/1iJ-0JP=o=D`%uH$"A+I-#aa!Z(qp"U6dh#mq%K%1Y<.&J>`k'c%T&)*/lZ*$$(B+<_pR,X!J%4t.s3
/3tmA6npGc=D`%uF*)_SUO;*L[fR<I1Bg6)#Y,402)^"E&5!QK9,/4&(`=JX)c%Iq4!5\/,:#E!;Ed<1
.kEtQ<)kYS79F/AEcZ>GHDGrII(058"#C*M1mUW==uA3/8TdW<>Y@ab3>bLP)c%J\4!7lm,>gTN;EePT
.oS`#<)lt#7:g(NE,u)&G'\jis*V?Y1]oN:=a(*@$<f<=84d#X&mS(C9fX"b3Z;:W?9969?sunq,uQp9
5Uo\u/Q>_\=%-\4D/]T%H$4LgI/SH(!]'o\"Bf@B7gW?V$uUc'8eG<$BMG!5:)OsUBjNkC?Z0@M,UH>9
C5+3:/1kWjA61NtAo.ZiH[0d\LOAuH])j_i!sF$b#7(W>$Ogn_%hK=X',5m2(QK@OLM:'9+(&qp,:"Q^
-Yb([;_0LQ0/,+9AQT+QE-lkPHAHtEI(KG6!sAc31^FBp$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:#E!
-R^Dn.kE8)017NM70cq3EH6qYH?tHrpO'UT0*=!6"uHTU$4A^L%Q=q2&ed5>(-*3L3ZB%Z*]kJf4<l+7
-C6n\5V"BO6:4-q<sV5sAoVj4FF&7kI._m#!\OR2"\(<S7g`EW2FpCN8eMe19MIMa:-'=i*?I9b:cot"
4XO&j5<p_t5seON<XDhrAS,q@F*)SON-t5E^&fkg1B^i;#=f,)21e@j>=oN592&&?(J["0>od65+CAMb
;*?4'5%6c-;aFnm<=38<7:g)%E-QYOHB!=BI(o_6"#C'_B*Up5=u?_+8R"e!>YAa)3>YF.)I7&`4!.g;
@8S9r;C?46.T8VbCC=rh=#+?!D/bV_G']0rmsMnP.g#kV=_@sF$!I]FD@TlC&R5t`9bnO?)&e9E?611q
DdcKg,pk!S.4S7I/IZDJ0JP=o=D`#(H$4LpI-l<s!\"3S"_S&G#mq%K%1Wm[&R5t`'c%T&)&aG6*?H:F
+^lT@,pjuf.4Qi!%4s1c0JP=O=D`%uMKF0+I-Z0r![n.,"U6dh#mq%t2@_YW&J>`k'c&eH)*/]V*?H:F
+Zptp4XMO?5<p_0/3uTU6npGc=CuPnF*)_SP'lMA_?)(e1Bg6)#Y,402)[us&5!QK9,/4&(f!+2:E:K<
+<`il;*?7(5!M:D.oS`#<)kYS79F/AN,s)aHBWa>I)?"4"#C'_1^?MX=uA3/8R"e">Y@ab3>bLP)I4@i
4!7lm,>gTM;EeP%5V#c!6<$rq=%-\4EH$/JG']C#ja=uJ,m,q+=a(*@$!K1p84d#X&R7tB9fX"b3Z;:<
?9969?sunq,uQ*'C-X7I5qQ&9A61NtAo2L3H$4M!I,fUn![IjM"Bf@B7gW?,$uQPZ8eG;A'MT>Z:)OsU
BjMi&?Z0@M,UH>%-Yb([;_0M904\->AQWegH[0d\Q@.Y=`<%t#"9iEC#ROZB$k3[W&.r.\'GVB"(`=52
BjMi&+<b/<,UFcbC+1V_/1iJ-0JP=o=D`%uH$"B+I"HbGI)Z4I"#C)b1^FBp$OdIS2\6Q6',2/s(Dn#N
)]Tk>+!;^h,:#E!-U&t/.kEtQ017NM79FDHEcZ>KHMDl>I/SH5!]U9<"\(<S7g]V]2M!du8eMe1'c&eH
)*/^4*?I9b+ZpuH4XO&j5<p_M5seON0ipeGAoVj4FEW!+I"HbCI)l@K"#C*M1^?MX=uA3/8TdW<>Y@ab
3>bLP)c%J\4!7lm,>gTN;EePT.oS`#<)mI17:g(NE-$,EHMW#@I//03!]U9<"BfpR7gW?VJk/I;8ePB%
BMCK':-';!KO-_^?XR;>4XEui@R)DA5qQ&9A61NtAo2L3H$4N2I"Hb?I*)LM!s8[/B*Up5>+Q.?Kj..]
>YAa)()K^`)I7&`4!.gJ@8S9r;C?46.T7lMCG04"11aR)E-lkRHMi/BI._m1!]U8a"FXnf#ROZB%%%M8
&.r.\'Rgf6(`=6IBjMi&?Z0?t,UFcbC+1W2/1iJ-0JP=o=D`#(H$"B2I"Hb;I*2RP!sAc31^FBp$OdIS
%hK<c',2/s(Dn#N)]Tk>+!;^N,:#E!-U&t/.kE8)017NM79FDHEf+sbH@1*lI.;U.!]^?="U6dh7g]V]
2M!du&J>a:'c&eH)*/_/*?I9b+Zptp4XO&j5<p_M5sdq,0ipeGAoVj4FF&7\Jpd$7blTj,1Bg6)#Y,5*
2)[us&5!QK92&&?(f!+2:E:K<+Ab0F;*?7(5%6c-;aE`L<E<0iAS,q$F*)SOJpcs5c2op,1B^i;#=f,)
21e@j>=oN592&&?(J["0?%cNG+CAMb;*?4'5%6dM;aFnm<Ff0"AS,duG^4H4H@pV2I*VjP"#C'_B*Up5
=u?_+Kj..]>YAa)3>YF.)I7&`4!.g;@8S9r;C?46.T;`eCM[N_11b'7E-lj2G'\ghl$UhZ2$3p`=_@sF
$!I]FD@R0g&R5t`9bnO?)&e9E?611qDdcKg,pk!S.4S7I/Sd!n0f!<BD/ah'H$"@dI-5n(!]'o]"_S&G
#mq%K%1Wm[&J>`k'c%T&)&aG6*?H:F+^lT@,pjuf.4Qi!/M8\10eu1"D/f]!MKF0<LOA32d/l'*1Bdt>
#RLhG2)Yq'&.oNg'GVBD(`>@R*$$(^+<`il,X!J%5!M:_/3uTU6npGc=Cq_VEcZ>KHAHt/I*r'N"#C*M
1^HSY$T0h58J"K,'2)"73>bLP)c%Iq4!7?^,>gTN;Ed<1.oS`#<)kYS79Bb+EK"s\G']!miI')U3!1r>
=Yp@R$<f;F84d#X&mS('9fX%c3Z;9E?999:?mAN3,uQp95V#c!@oQH==%-\4EH$/JG'`D#JpdTGe,hT3
1B^in#=f)(2%3#I>=oK495%$[(J["0?"mV,+(&Da;*?4'-Ybmr;aE!NCh-U&AS,duG^4IYl?n22rI!,s
3!06c=_@sF$!I]FD@TlC&R5t`9bnO?)&cdp?611qDdcKg,uQ+*.4S7I/Sd!n0f!<BD/aiIG'`J%JpdHC
eH.Z3"9iEC#RLhG$k3[W&.r.\'GVB"(`=52BjMi&+<b/<,UFcbC+1V_/1iJ-0JP=o=D`%uH$"B!I"HbA
I+A?Y"#C)b1^FBp$OdIS2\6Q6',2/s3>`Vp)]Tk>+!;^h,:#E!-U&t/.kEtQ017NM79FDHEcZ>KHL?04
I.r$?!]U9<"\(<S7g]V]2M!du8eMe1'c&eH:-'=i*?I9b+ZpuH4XO&j5<p_M5seON0ipeGAoVj4FEW!!
I"Hb=I+SK["#C*M1^?MX=uA3/8TdW<>Y@ab3>bLP)c%J\4!7lm,>gTM;EePT.oS`#<)mI17:g(NE-$,E
HLQ<6I.Ma=!]U9<"BfpR7gW?V$qNro8ePB%BMCK':-';!KO-_^?XR;>4XEuRC-X7I5qQ&9A61NtAo2L3
H$4N(I"Hb9I+eW]!s8[/B*Up5=pkaVKj..]>YAa)()K^`)I7&`4!.gJ@8S9r;C?3..T7lMCG04"11aR)
E-lkRHLcH8I.)I;!]ZVN"FXnf#ROZB$k3[W&.r.\'Rgf6(`=52BjMi&?Z0?t,UFcbC+1W2/1iJ-0JP=o
=D`%uH$"B(I"Hb5I+n]^!sAc31^FBp$OdIS2\6Q6',2/s(Dn#N)]Tk>+!;^N,:#E!-U&t/.kE8)017NM
79FDHEcZ>KHM)Z;I-Z18!]U9<"U6dh7g]V]2M!duU(S,!'c&eH)*/^4*?I9b+Zptp4XO&j5<p_M5sdq,
0ipeGAoVj4FF&9,I"Hb1I,+i`"#C*M1^HSY=uA3/8TdW<'2)"n3>bLP)c%J\4!7?^,>gTN;EePT.oS`#
<)lt#7:g(NE-$,EHM;f=I-5n6!]U9<"BdPd7g`EWJk/I;8ePB%9MIM`:-';!KO-_^?XR;>4XEui@R)DA
6"<koA6232Ao2L3H$4N/I"Hb-I,=ub!s8[/B*Up5=u?_+Kj..]>YAa)3>YF.)I7&`4!.h!@8S9r;C?46
.T7lMCM[N_11b'7E-lkRHMMr?I,fV4!]U8a"FXnf#ROZB$uQOc&.r.\'MT>Z:)Ot*BjMi&?Z0@M,UFcb
C+1W2/1iJ-0JP=o=D`#(H$"B/I"Hb)I,G&c!sAc31^FBp$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:"Q^
-R^Dn.kE8)0;C6W79FDHEf+sbHJEn"I/eTQ!]U9<"U6dh#mq%t2@_YW&J>a:'c&eH)*/]V*?I9b+Zptp
4XMO?5<p_M5sdq,0eu1"AoVj4FF&8hI"HbEI,Y2e"#C*M1^HSY$T0h58J"K,'2)"n3>bLP)c%Iq4!7?^
,>gTN;Ed<1.oS`#<)lt#79F/AN,s)aHJX%$I/A<O!]U9<"BdPd7g`EW2FpDD8ePB%9MIM`:-';!*F:fM
?XR;>4XEui@R)GB6"<koA6232AoVd7H$4MkI"HbAI,k>g"#C'_B*Up5=u?^Z8R"e!>YAa)3>YFO)I7&`
4!.g;@8S9r;C?3E.T8VbCM[N_11b'7E-QYOHJj1&I.r$M!]U8a"Bf@B#ROZB$uQPZ8eG;A'MT>Z:)OsU
BjMi&?Z0@M,UFcbC+1W2/1kWj0JP=o=D`#(H$4MmI"Hb=I,tDg!sAd?#7(VC$OdIS%hK=X',2/s(Dn#.
)eiV"+!;_8,:"Q^-Yb([.kE8)0/,+979FDHEd;bQid??*o6f[%3!1r?"uHSl$4A^L%Q=q2&ebro(-*3L
3ZB%Z*ZlLJ4<l+7-7:uA.P!&968(_]1.>;WEH6,BH@"Y"Jpd*9k5mUF1Bg6)#Y,402)[ua&5!QK9,/4&
(f!+2:E:K<+<`il;*?7(5!M:_/3uU%<A@QD=CuQ3F*)SOja;Z-msO=#3!1r?7Pk??$<f;F84d#X&mS('
9fX%c3Z;9E?999:4<m]d,uQp95V#c!6<$rq=%-\4EH$/EG'`:uJpcs5klNgH1B^j)#=f)(2%3#I>=oN5
95%$[(J["0?"mV,+(&Da;*?4'-Ybmr;aE!7<Ff/dAS,duG^4IYkBql/l[7t!3!06c=_@t0$!I]FD@TlC
&R7tB9bnO?)&cdp?611qDdcKg,uQ+*.4S7I/Sd"M=#+>hD/aiIG'`A"Jpcg1l2imH"FXnf#ROZB$k3[W
&.r.\'Rgf6(`=52BjMi&?Z0?t,UFcbC+1V_/1iJ-0JP=o=D`%uH$"AsI"Hb/I-Uhn"#C)b1^FBp$OdIS
2\6Q6',2/s(Dn#N)]Tk>+!;^N,:#E!-U&t/.kEt=017NM79FDHEcZ>KHL#s1I-#bB!]U9<"b8E87g]V]
2M!du8eMe1'c&eH)*/^4*?I9b+Zptp4XO&j5<p_M5seO=0ipeGAoVj4FEVusI"Hb+I-gtp"#C*M1^HSY
=uA3/8TdW<>Y@ab3>bLP)c%J\4!7lm,>gTN;EePT.oS`#<)lt#7:g(NE-$,EHL6*3I,TJ@!]U9<"BfpR
7g`EWJk/I;8ePB%BMCK':-';!KO-_^?XR;>4XEui@R)DA5qQ&9A6232Ao2L3H$4MZI"HbGI.%+r!s8[/
B*Up5=u?_+Kj..]>YAa)S/4p<)I7&`4!.gJ@8S9r;C?46.T7lMCG04"11b'7E-lkRHI$tjI/SH^!]U8a
"FXnf#ROZB$uQOc&.r.\'Rgf6:)Ot*BjMi&?Z0?t,UFcbC+1W2/1iJ-0JP=o=D`#(H$"AZI"HbCI..1s
!sAc31^FBp$OdIS%hK<c',2/s(Dn#.)]Tk>+!;^N,:&*m-R^Dn.kE8)017NM79FDHEf+sbHI@1mI//0[
!]U9<"U6dh7g]V]2@_YW&J>a:'c&eH)*/]V*?I9b+Zptp4XQLZ5<p_M5sdq,0ipeGAoVj4FF&8^I"Hb?
I.@=u"#C*M1^HSY=uA3/8J"K,'2)"n3>bLP)c%Iq4!7?^,>gTN;Ed<1.oS`#<)lt#7:g(NN,s)aHIR=o
I._mY!]U9<"BdPd7g`EWJk/I;8ePB%9MIM`:-';!*F:fM?XR;>4XEui@R)GB6"<koA6232At<mcH$4Ma
I"Hb;I.RJ""#C'_B*Up5=u?_+8R"e!>YAa)3>YF.)I7&`4!.g;@8S9r;C?46.T8VbCM[N_11b'7E-QYO
HIdIqI.;UW!]U8a"Bf@B#ROZB$uQPZ8eG;A'MT>Z:)Ot*BjMi&?Z0@M,UFcbC+1W2/1kWj0JP=o=D`#(
H$4McI"Hb7I.[P"!sAd?#7(VC$OdIS%hK=X',2/s(Dn#.)]W0*+!;_8,:"Q^-R^Dn.kE8)0/,+979FDH
Ef+sbfR/9um<nU/3!1r?"uHSl$4A^L%Q=q2&ebro(-*3L3ZB%Z*ZlLJ4<l+7-7:uA5V"BO68(_]1.>;W
EH6,BH@":mJpcm3pB!;V1Bg6)#Y,402)[us&5!QK9,/4&(f!+2:E:K<+<`il;*?7(5!M:_;aE`L<A@QD
=CuQ3F*)SOgO+U#l$W7-3!1r>7Pk??$<f;F84d#X&mS('9fX%c3Z;9E?999:4<m]d,uQp95V#c!6<$rq
=%-\4EH$/JG'_qkJpca/q#WMX1B^j)#=f)(2%3#I>=oK495%$[(J["0?"mV,+(&Da;*?4'-Ybmr;aE!7
<Ff/dAS,duG^4IYh0ag%ja?n+3!06c=_@t0$!I]FD@TlC&R5t`9bnO?)&cdp?611qDdcKg,uQ+*.4S7I
/Sd"M=#+>hD/aiIG'`"mJpcU+q>rSX"9iEC#ROZB$k3[W&.r.\'Rgf6(`=52BjMi&+<b/<,UFcbC+1V_
/1iJ-0JP=o=D`%uH$"AiI"Hb)I/<t)"#C)b1^FBp$OdIS2\6Q6',2/s(Dn#N)]Tk>+!;^h,:#E!-U&t/
.kEtQ017NM79FDHEcZ>KHGOu\I/eTl!]U9<"\(<S7g]V]2M!du8eMe1'c&eH)*/^4*?I9b+ZpuH4XO&j
5<p_M5seON0ipeGAoVj4FEVuII"HbEI/O++"#C*M1^?MX=uA3/8TdW<>Y@ab3>bLP)c%J\4!7lm,>gTN
;EePT.oS`#<)mI17:g(NE-$,EHGb,^I/A<j!]U9<"BfpR7gW?VJk/I;8ePB%BMCK':-';!KO-_^?XR;>
4XEui@R)DA5qQ&9A61NtAo2L3H$4MPI"HbAHo_<1!s8[/B*Up5>+Q.?Kj..]>YAa)()K^`)I7&`4!.gJ
@8S9r;C?46.T7lMCG04"11b'7E-lkRHGt8`I.r"K!WrN-I:icj$!I]FD@R0g&R5t`IMN_:)&e9E?611q
Ddak9,pk!S.4S7I/M8\10f!<BD/aiIFF(rSJpd6=3<B9c"U6dh#mq%K%1Wm[&J>`k'c%T&)35^V*?H:F
+X/-V4XMO?.4Qi!/M8\E0eu1"D/jTRFF&8SI"Hb;HoM3a"U6dh7g]V]2M!du&J>a:'c&eH)*/_/*?I9b
+Zptp4XO&j5<p_M5sdq,0ipeGAoVj4FF&8TI"Hb9HoEhb7PkB@$<f;F84a@b&edo39fX%c3ZCj8*]kK@
4<m]d-;m$:5V#c!6<$rc=%-\4EH#u@G'_;YJpd$72?[/>#=f,)21e@j>=oN592&&?(J["0?%cNG+CAMb
;*?4'5%6dM;aFnm<Ff0"AS,duG^4IYbC"nhm<gcoB*Up5=u?_+Kj..]>YAa)3>YF.)I7&`4!.g;@8S9r
;C?46.T8VbCM[N_11b'7E-lkRHH^bgI-Z/:B*S\K=pkaV%M'*_>S@fG()K^`)M`$5*Zna-@8S9r-7<OW
.T7lMCG.@r11aR)E-lknHHghhI-H#8#7(VC$OdIS%hK=X',2/s(Dn#.)]Tk>+!;_8,:"Q^-R^Dn.kE8)
0/,+979FDHEf+sbU!J+<I-5l5#RLhG2)Yq'&.oNg'GVBD(`>@R*$$(^+<`il,X!J%5!M:_/3uTU6npGc
=CuPnF*)_Sd!UFmja8gR$4A^L84a@b&ednQ(-*4,3ZCj8*]kK@4<m]d-;m#l5V#c!6<$r>=%-5'EK"s\
G'_P`JpcU+0a_)A2FpDD8ePB%9MIMa:-';!*F:fM?XP*U4XEui@R)GB6"<koA6232AoVd7H$4M^I"Hb)
I"2~>

%%EndBinary
grestore
np
grestore
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
204.696 480.823 mo
(D\030 Q\0261#\030\027?\010\313)
[-10.5598 -10.4999 -10.5598 -10.4998 -10.4999 0 ]ysh
75.156 500.923 mo
78.216 495.643 li
77.076 495.643 li
80.136 500.923 li
80.256 501.043 li
80.496 501.163 li
80.676 501.223 li
80.856 501.223 li
80.976 501.163 li
81.156 501.103 li
81.255 500.837 81.546 500.694 81.336 500.383 cv
81.276 500.203 li
77.616 494.023 li
74.016 500.263 li
73.717 500.943 74.447 501.682 75.036 501.043 cv
75.156 500.923 li
cp
78.756 557.203 mo
78.276 495.343 li
76.956 495.343 li
77.436 557.263 li
78.756 557.203 li
.021393 .33222 .5154 0 cmyk
f
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NCAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NCAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory
52 <001C60D8A8C9B6079F6D7583831D9562C0AD6535EC7DF517755B83E84092
151DEE635E9F4E30665D8BD2E476E0D924417550F2D505E0950A8DB0FA68AEA3
9175E1A9B43B74D4538ACBFCB981AA46C8B17824DDD492EB8F9358092E8A45F6
2487D9F6A2411B8ACC9C3165871354CC072699059F64CDBB40337ED181B37167
19835516EDAB4F383B2E97071536268A4E8CF687FABE6441D9F78A79FB453D02
437C897E7CB2E4C933DF96091B9957DE0592137837CA6116106CEA88D7> |
!
end
end end
%ADOEndSubsetFont
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
70.0557 524.743 mo
(\0004)sh
179.976 451.723 mo
185.196 448.603 li
185.196 449.743 li
179.916 446.683 li
179.796 446.623 li
179.676 446.503 li
179.616 446.323 li
179.616 445.903 li
179.736 445.723 li
179.942 445.498 180.101 445.46 180.396 445.483 cv
180.576 445.543 li
186.816 449.143 li
180.636 452.803 li
180.041 453.338 179.302 452.25 179.856 451.783 cv
179.976 451.723 li
cp
85.596 556.603 mo
85.596 555.343 li
85.994 504.876 132.966 450.42 184.476 448.543 cv
185.496 448.483 li
185.556 449.803 li
184.476 449.803 li
184.536 449.803 li
182.136 449.923 li
182.196 449.923 li
180.996 450.043 li
179.856 450.163 li
178.656 450.283 li
177.516 450.403 li
176.316 450.583 li
176.376 450.583 li
175.176 450.763 li
174.036 450.943 li
172.836 451.123 li
171.696 451.363 li
170.556 451.663 li
170.556 451.603 li
169.416 451.903 li
165.876 452.754 162.497 453.781 159.096 455.083 cv
157.956 455.503 li
158.016 455.503 li
156.876 455.923 li
154.596 456.883 li
154.656 456.883 li
153.516 457.363 li
150.154 458.989 146.855 460.545 143.676 462.523 cv
142.596 463.123 li
142.656 463.123 li
140.496 464.443 li
139.476 465.163 li
138.396 465.823 li
138.456 465.823 li
137.376 466.543 li
134.242 468.73 131.283 470.96 128.376 473.443 cv
127.356 474.283 li
127.416 474.283 li
126.396 475.123 li
126.456 475.123 li
125.496 475.963 li
123.551 477.699 121.78 479.483 119.916 481.303 cv
119.016 482.263 li
119.016 482.203 li
118.176 483.163 li
114.921 486.616 111.876 490.267 109.056 494.083 cv
108.276 495.103 li
108.336 495.103 li
107.556 496.183 li
107.556 496.123 li
106.836 497.203 li
106.056 498.283 li
105.336 499.363 li
104.676 500.443 li
103.236 502.603 li
103.296 502.603 li
102.576 503.743 li
102.576 503.683 li
101.256 505.963 li
101.256 505.903 li
100.656 507.043 li
98.032 511.689 95.396 517.153 93.576 522.163 cv
93.096 523.363 li
93.096 523.303 li
92.676 524.563 li
92.676 524.503 li
92.256 525.763 li
92.256 525.703 li
91.836 526.963 li
91.476 528.163 li
91.056 529.363 li
90.696 530.563 li
90.396 531.823 li
90.396 531.763 li
90.036 533.023 li
89.736 534.223 li
89.436 535.483 li
89.136 536.683 li
88.896 537.943 li
88.596 539.203 li
88.656 539.143 li
88.176 541.663 li
87.996 542.863 li
87.816 544.123 li
87.456 546.643 li
87.456 546.583 li
87.096 550.363 li
87.036 551.623 li
86.976 552.883 li
86.976 552.823 li
86.916 554.083 li
86.916 556.603 li
85.596 556.603 li
.021393 .33222 .5154 0 cmyk
f
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NCAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NCAAAA+TimesNewRomanPSMT 2 GetGlyphDirectory
46 <001C60D8A8C9B6079F6DAD6439E719A5649ADA7D8B9E734C715565956F15
B5C4CFBB8891AD82AF5B965DC9DBF0762D43C17265BBD3CD422561D8093800D4
7C30E7401B7FF953462B20D5841B49861E5477C9C06DC8DEA98C62C73A16DCD1
0A99A3BB2728EF5C45B4F29723E3FD20A045034CDC5B2823010371DE4EA42A53
65F63BDAAE6E06349967F6DD5B6C651FF133F1AC111407BA069118B1E1EF88EC
E867D30D2AC6A5EEB5F5B14A4020A8D1688A963E3E2FF5DFE6441AA27FDF0183
EE620579E7103491C7EBC49E5703B87C43F0A841871BC2D6A7D289877EB3748B
6B80FD93562885CC9F2182E80755BBCE3303DAD528BFBDFEB3202E48EDCFB93B
C1> |
15 <001C60D8A8C9B8707CDCEBD9C789FC719A6E699B9D99F66BE737EEBAFF71
11B9225F270084B7F68BC0DDECBD8A23968AE48D16B628A165111DDE7E6CD8DD
6007F82AE5C9057E54AF2D17F8AB7C9B11610F20000D2C65AB75461D35EBD119
C9E1C1E902BC7C231A59B4A0E3A4C206C50EEA0EE1> |
!
end
end end
%ADOEndSubsetFont
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
168.036 445.363 mo
(\000.\000\017\0009)
[-7.58035 -2.6145 0 ]ysh
197.436 500.923 mo
200.436 495.643 li
199.296 495.643 li
202.416 500.923 li
203 501.61 203.955 500.979 203.556 500.203 cv
199.896 494.023 li
196.296 500.263 li
196.236 500.443 li
196.176 500.563 li
196.236 500.743 li
196.296 500.863 li
196.356 501.043 li
196.476 501.163 li
196.596 501.223 li
196.776 501.283 li
196.896 501.283 li
197.076 501.223 li
197.196 501.163 li
197.436 500.923 li
cp
201.036 557.203 mo
200.556 495.343 li
199.236 495.343 li
199.716 557.263 li
201.036 557.203 li
.41566 .25302 0 0 cmyk
f
1 /8 /CSD get_res sepcs
1 sep
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
211.716 524.743 mo
(\0004)sh
101.436 451.783 mo
96.216 448.663 li
96.156 449.803 li
101.496 446.743 li
102.2 446.321 101.587 445.225 100.836 445.603 cv
94.536 449.203 li
100.716 452.923 li
101.458 453.191 102.035 452.605 101.556 451.843 cv
101.436 451.783 li
cp
191.676 556.183 mo
191.676 554.923 li
191.346 505.894 147.56 450.876 96.816 448.543 cv
95.856 448.543 li
95.856 449.863 li
96.816 449.863 li
96.756 449.863 li
99.036 449.983 li
100.176 450.103 li
100.116 450.103 li
101.256 450.163 li
102.396 450.343 li
103.476 450.463 li
105.756 450.823 li
105.696 450.763 li
106.836 451.003 li
107.976 451.183 li
107.916 451.183 li
110.196 451.663 li
110.136 451.663 li
111.276 451.963 li
112.356 452.203 li
113.496 452.503 li
114.576 452.863 li
115.656 453.163 li
116.796 453.523 li
116.736 453.523 li
117.876 453.883 li
119.674 454.587 121.531 455.145 123.276 455.983 cv
124.356 456.463 li
124.356 456.403 li
125.436 456.883 li
126.516 457.423 li
127.536 457.903 li
129.696 458.983 li
129.636 458.983 li
131.796 460.063 li
131.736 460.063 li
132.816 460.663 li
134.856 461.863 li
135.876 462.523 li
136.956 463.123 li
136.896 463.123 li
137.916 463.783 li
140.336 465.278 142.596 467.007 144.876 468.703 cv
145.896 469.483 li
145.836 469.483 li
146.856 470.203 li
146.796 470.203 li
147.756 470.983 li
148.716 471.823 li
148.716 471.763 li
149.676 472.603 li
150.636 473.383 li
150.576 473.383 li
151.536 474.223 li
152.436 475.063 li
153.396 475.903 li
154.296 476.803 li
154.296 476.743 li
155.196 477.643 li
156.036 478.543 li
156.936 479.443 li
156.936 479.383 li
157.836 480.343 li
157.836 480.283 li
158.676 481.243 li
159.516 482.143 li
160.416 483.103 li
160.356 483.043 li
161.256 484.003 li
161.196 484.003 li
163.716 486.883 li
163.656 486.883 li
164.496 487.843 li
166.056 489.883 li
166.056 489.823 li
166.836 490.843 li
169.44 494.243 171.761 497.72 174.036 501.343 cv
174.696 502.423 li
174.636 502.423 li
175.296 503.563 li
175.296 503.503 li
175.956 504.643 li
176.556 505.723 li
178.356 509.143 li
178.356 509.083 li
178.956 510.223 li
179.496 511.363 li
180.036 512.563 li
180.036 512.503 li
180.576 513.703 li
181.656 515.983 li
181.596 515.983 li
182.136 517.183 li
182.616 518.323 li
183.096 519.523 li
183.516 520.723 li
183.516 520.663 li
183.996 521.863 li
185.684 526.61 187.185 531.443 188.196 536.383 cv
188.496 537.643 li
188.496 537.583 li
188.736 538.843 li
188.916 540.103 li
188.916 540.043 li
189.156 541.303 li
189.641 544.253 189.91 547.033 190.176 550.003 cv
190.236 551.263 li
190.236 551.203 li
190.356 553.723 li
190.356 556.183 li
191.676 556.183 li
.41566 .25302 0 0 cmyk
f
1 /8 /CSD get_res sepcs
1 sep
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
112.776 445.363 mo
(\000.\000\017\0009)
[-7.58035 -2.6145 0 ]ysh
142.236 377.983 mo
136.596 377.983 131.976 373.183 131.976 367.303 cv
131.976 361.423 136.596 356.623 142.296 356.623 cv
147.996 356.623 152.616 361.423 152.616 367.303 cv
152.616 373.183 147.996 377.983 142.236 377.983 cv
0 0 0 0 cmyk
ef
1.973 lw
0 lc
0 lj
8 ml
[] 0 dsh
false sadj
131.976 367.302 mo
152.616 367.302 li
0 0 0 1 cmyk
@
142.296 377.982 mo
142.296 356.622 li
@
142.296 377.982 mo
136.596 377.982 131.976 373.182 131.976 367.302 cv
131.976 361.422 136.596 356.622 142.296 356.622 cv
147.996 356.622 152.616 361.422 152.616 367.302 cv
152.616 373.182 147.996 377.982 142.296 377.982 cv
@
gsave
79.596 406.003 mo
131.976 406.003 li
131.976 363.463 li
79.596 363.463 li
cp
clp
gsave
125.016 369.762 mo
128.136 367.902 li
80.976 367.902 li
80.976 405.943 li
79.656 405.943 li
79.656 366.582 li
128.136 366.582 li
125.016 364.722 li
124.198 364.284 124.93 363.123 125.676 363.642 cv
131.916 367.242 li
125.676 370.902 li
125.496 370.962 li
125.196 370.962 li
125.076 370.902 li
124.896 370.842 li
124.776 370.722 li
124.716 370.602 li
124.656 370.422 li
124.656 370.242 li
124.716 370.122 li
124.776 369.942 li
124.896 369.822 li
eclp
132.012 406.076 mo
132.012 363.332 li
79.548 363.332 li
79.548 406.076 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 768.104 ]ct
[0 42.744 -52.464 0 132.012 362.028 ]ct
snap_to_device
<<
/T 1
/W 256 
/H 256 
/M[256 0 0 -256 0 256 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Jc_2=&d&7?"pYD?$4@7O%M'*_&ebro!>ZK)!gE`u!sAc3#7(VC$OdIS%hK<c',1N`()IgB!g<Zs!sAc3
#7(VC$OdIS%hK<c'*T'b()If)L]W_@%g)q<"pYD?$4@7O%M'*_&d/j^'c%Vb(lABW!Y,;8"U52;#mq%K
%1Wm[&Hrd\'GVB"r>:IpO9,jn"9eu7#RLhG$k3[W&-`^Z',2/s(]5,1!fmBk!sAc3#7(VC$OdIS%gNXX
&ebro()QibO91FD$NgM8"pYD?$4@7O%L<RV&J>`k)&=%b(m4r[!X]#4"U52;#mq%K%1*LT&.oNg'H%Z&
q&#=tMuj:f"9eu7#RLhG$jmFR%hK<c',2<"(\ei5!fI*c!sAc3#7(VC$O[@P%M'*_&ebrs()Q]^Qi`-H
#6P)4"pYD?$4I:N%1Wm[&J>`k)&=%^(n(M_!X8`0"U52;#n74L$k3[W&.oNg'H%Z&oba2#L]R_^"9eu7
#S%.J$OdIS%hK<c',2<"(\AQ9!f$g[!sAc3#7h(H$4@7O%M'*_&ebrs()QQZTE9iL!s8Z0"qV"F#mq%K
%1Wm[&J>`k)&=%Z(kMgc!Yb_>"U52;#mq%K%1Wm[&J>`k)&=%[)#kG+!i,l3!sAc3#7(VC$OdIS%hK<c
',2<"(\ARC(kr*e!Yb_>"U52;#mq%K%1Wm[&J>`k)&=%])#G/+!ho`1!sAc3#7(VC$OdIS%hK<c',2<"
(\S^A(lABg!Yb_>"U52;#mq%K%1Wm[&J>`k)&=%_)#"l+!h]T/!sAc3#7(VC$OdIS%hK<c',2<"(\ej?
(leZi!Yb_>"U52;#mq%K%1Wm[&J>`k)&=%a)"ST+!hKH-!sAc3#7(VC$OdIS%hK<c',2<"(]#!=(m4rk
!Yb_>"U52;#mq%K%1Wm[&J>`k)&=%c)"/<+!h9<+!sAc3#7(VC$OdIS%hK<c',2<"(]5-;(mY5m!Yb_>
"U52;#mq%K%1Wm[&J>`k)&=%e)!`$+!h'0)!sAc3#7(VC$OdIS%hK<c',2<"(]G99(n(Mo!Ytk@"U52;
#mq%K%1Wm[&J>`k)&=#*)!;a+!gj$(!sAc3#7(VC$OdIS%hK<c',2<")AqQQScY5['E\IA"pYD?$4@7O
%M'*_&ebrs()l3MTE:D\'*A@@"pYD?$4@7O%M'*_&ebrs('#94(kMgs!Yb_>"U52;#mq%K%1Wm[&J>`k
)&=.N)#kG+!ji"C!sAc3#7(VC$OdIS%hK<c',2<")WVb6(kr*u!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.P
)#G/+!jVkA!sAc3#7(VC$OdIS%hK<c',2<")Whn4(lAC"!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.R)#"l+
!jD_?!sAc3#7(VC$OdIS%hK<c',2<")X&%2(le[$!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.T)"ST+!j2S=
!sAc3#7(VC$OdIS%hK<c',2<")X810(m4s&!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.V)"/<+!iuG;!sAc3
#7(VC$OdIS%hK<c',2<")XJ=.(mY6(!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.X)!`$+!ic;9!sAc3#7(VC
$OdIS%hK<c',2<")X\I,(n(N*!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.Z)!;a+!iQ/7!sAc3#7(VC$OdIS
%hK<c',2<")XnU*(nLf,!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.\(ulI+!i?#5!sAc3#7(VC$OdIS%hK<c
',2<")Y+a((kMh.!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.>)#kG+!lP-S!sAc3#7(VC$OdIS%hK<c',2<"
)UoW&(kr+0!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.@)#G/+!l>!Q!sAc3#7(VC$OdIS%hK<c',2<")V,c$
(lAC2!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.B)#"l+!l+jO!sAc3#7(VC$OdIS%hK<c',2<")V>o"(le[4
!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.D)"ST+!kn^M!sAc3#7(VC$OdIS%hK<c',2<")VQ%u(m4s6!Yb_>
"U52;#mq%K%1Wm[&J>`k)&=.F)"/<+!k\RK!sAc3#7(VC$OdIS%hK<c',2<")Vc1s(mY68!Yb_>"U52;
#mq%K%1Wm[&J>`k)&=.H)!`$+!kJFI!sAc3#7(VC$OdIS%hK<c',2<")Vu=q(n(N:!Yb_>"U52;#mq%K
%1Wm[&J>`k)&=.J)!;a+!k8:G!sAc3#7(VC$OdIS%hK<c',2<")W2Io(nLf<!Yb_>"U52;#mq%K%1Wm[
&J>`k)&=.L(ulI+!k&.E!sAc3#7(VC$OdIS%hK<c',2<")WDUm(kMh>!Yb_>"U52;#mq%K%1Wm[&J>`k
)&=..)#kG+!n78c!sAc3#7(VC$OdIS%hK<c',2<")T3Kk(kr+@!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.0
)#G/+!n%,a!sAc3#7(VC$OdIS%hK<c',2<")TEWi(lACB!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.2)#"l+
!mgu_!sAc3#7(VC$OdIS%hK<c',2<")TWcg(le[D!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.4)"ST+!mUi]
!sAc3#7(VC$OdIS%hK<c',2<")Tioe(m4sF!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.6)"/<+!mC][!sAc3
#7(VC$OdIS%hK<c',2<")U'&c(mY6H!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.8)!`$+!m1QY!sAc3#7(VC
$OdIS%hK<c',2<")U92a(n(NJ!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.:)!;a+!ltEW!sAc3#7(VC$OdIS
%hK<c',2<")UK>_(nLfL!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.<(ulI+!lb9U!sAc3#7(VC$OdIS%hK<c
',2<")U]J](kMhN!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-s)#kG+!osCs!sAc3#7(VC$OdIS%hK<c',2<"
)RL@[(kr+P!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-u)#G/+!oa7q!sAc3#7(VC$OdIS%hK<c',2<")R^LY
(lACR!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.")#"l+!oO+o!sAc3#7(VC$OdIS%hK<c',2<")RpXW(le[T
!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.$)"ST+!o<tm!sAc3#7(VC$OdIS%hK<c',2<")S-dU(m4sV!Yb_>
"U52;#mq%K%1Wm[&J>`k)&=.&)"/<+!o*hk!sAc3#7(VC$OdIS%hK<c',2<")S?pS(mY6X!Yb_>"U52;
#mq%K%1Wm[&J>`k)&=.()!`$+!nm\i!sAc3#7(VC$OdIS%hK<c',2<")SR'Q(n(NZ!Yb_>"U52;#mq%K
%1Wm[&J>`k)&=.*)!;a+!n[Pg!sAc3#7(VC$OdIS%hK<c',2<")Sd3O(nLf\!Yb_>"U52;#mq%K%1Wm[
&J>`k)&=.,(ulI+!nIDe!sAc3#7(VC$OdIS%hK<c',2<")T!?M(kMh^!Yb_>"U52;#mq%K%1Wm[&J>`k
)&=-c)#kG+!qZO.!sAc3#7(VC$OdIS%hK<c',2<")Pe5K(kr+`!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-e
)#G/+!qHC,!sAc3#7(VC$OdIS%hK<c',2<")Q"AI(lACb!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-g)#"l+
!q67*!sAc3#7(VC$OdIS%hK<c',2<")Q4MG(le[d!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-i)"ST+!q$+(
!sAc3#7(VC$OdIS%hK<c',2<")QFYE(m4sf!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-k)"/<+!pft&!sAc3
#7(VC$OdIS%hK<c',2<")QXeC(mY6h!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-m)!`$+!pTh$!sAc3#7(VC
$OdIS%hK<c',2<")QjqA(n(Nj!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-o)!;a+!pB\"!sAc3#7(VC$OdIS
%hK<c',2<")R((?(nLfl!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-q(ulI+!p0Ou!sAc3#7(VC$OdIS%hK<c
',2<")R:4=(kr(o!sAc3&-iII$4@7O%M'*_&ebrs()iARrtpLm!WrQ/&I&IG#mq%K%1Wm[&J>`k)&=-T
)#Y;-!W`B+&d8IE#RLhG$k3[W&.oNg'H%Z)Po0B8M#mYZ'*JIC#7(VC$OdIS%hK<c',2<")O;69(lAA/
!sAc3#7(VC$OdIS%hK<c',2<")OD<8(lSM2!WrQ/"pYD?$4@7O%M'*_&ebrs()iPWob`\j('4O>"9eu7
#RLhG$k3[W&.oNg'H%Z)R2GN4O95C_'E\IA"pYD?$4@7O%M'*_&ebrs()iVYnJIDjr;mZ8"9eu7#RLhG
$k3[W&.oNg'H%Z)Ri(T2PQLaa'E\IA"pYD?$4@7O%M'*_&ebrs()i\[m22,jqZ7H6"9eu7#RLhG$k3[W
&.oNg'H%Z)SJ^Z0Qid*c'E\IA"pYD?$4@7O%M'*_&ebrs()ib]knoijq#V64"9eu7#RLhG$k3[W&.oNg
'H%Z)T,?`.S-&He'E\IA"pYD?$4@7O%M'*_&ebrs()ih_jVXQjpAu$2"9eu7#RLhG$k3[W&.oNg'H%Z)
Tbuf,TE=fg'E\IA"pYD?$4@7O%M'*_&ebrs()inai>@j^'*A@@"pYD?$4@7O%M'*_&ebrs('#8*)#kG>
!YPS<"U52;#mq%K%1Wm[&J>`k)$(KkKGaY)Qi[j%"9eu7#RLhG$k3[W&.oNg'ET-f)MK%*(mtF:!sAc3
#7(VC$OdIS%hK<c'*Apd()hoEq&#P%%g)q<"pYD?$4@7O%M'*_&d/j^)&=-G)#"l:!Y,;8"U52;#mq%K
%1Wm[&Hrd\'H%Z)L`#e%S,s-%"9eu7#RLhG$k3[W&-`^Z',2<")Mo=&(nC^:!sAc3#7(VC$OdIS%gNXX
&ebrs()i&InJIi!$NgM8"pYD?$4@7O%L<RV&J>`k)&=-K)"/<6!X]#4"U52;#mq%K%1*LT&.oNg'H%Z)
N#:q!TE5E%"9eu7#RLhG$jmFR%hK<c',2<")N>U"(nh!:!sAc3#7(VC$O[@P%M'*_&ebrs()i2Mknp,r
#6P)4"pYD?$4I:N%1Wm[&J>`k)&=-O)!;a2!X8`0"U52;#n74L$k3[W&.oNg'H%Z)O;R'rU]L]%"9eu7
#S%.J$OdIS%hK<c',2<")Nbls(o79:!sAc3#7h(H$4@7O%M'*_&ebrs()i>Qi>AEn'E\IA"pYD?$4@7O
%M'*_&ebrs()l`\Jf+M)VZIP7"9eu7#RLhG$k3[W&.oNg'H%Z)o,*&rr>;I7'E\IA"pYD?$4@7O%M'*_
&ebrs()lf^Jf+A%W<*b9"9eu7#RLhG$k3[W&.oNg'H%Z)ob`8tq&$+5'E\IA"pYD?$4@7O%M'*_&ebrs
()ll`Jf+5!Wr`t;"9eu7#RLhG$k3[W&.oNg'H%Z)pDAK!obab3'E\IA"pYD?$4@7O%M'*_&ebrs()lrb
Jf+(rXTB1="9eu7#RLhG$k3[W&.oNg'H%Z)q&"]#nJJD1'E\IA"pYD?$4@7O%M'*_&ebrs()m#dJf*qn
Y6#C?"9eu7#RLhG$k3[W&.oNg'H%Z)q\Xo%m23&/'E\IA"pYD?$4@7O%M'*_&ebrs()m)fJf*ejYlYUA
"9eu7#RLhG$k3[W&.oNg'H%Z)r>:,'knp]-'E\IA"pYD?$4@7O%M'*_&ebrs()m/hJf*YfZN:mE"9eu7
#RLhG$k3[W&.oNg'H%Z)(`7iAjVY?+'a"RB"pYD?$4@7O%M'*_&ebrs()e$A(ulI@!Yb_>"U52;#mq%K
%1Wm[&J>`k)&=-B(uZ=?!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.M(kNV)(q0P\!sAc3#7(VC$OdIS%hK<c
',2<")WMZd)#Y;]!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.O(kNV%(qB\^!sAc3#7(VC$OdIS%hK<c',2<"
)W_ff)#5#[!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.Q(kNV!(qTh`!sAc3#7(VC$OdIS%hK<c',2<")Wqrh
)"e`Y!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.S(kNUr(qftb!sAc3#7(VC$OdIS%hK<c',2<")X/)j)"AHW
!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.U(kNUn(r$+d!sAc3#7(VC$OdIS%hK<c',2<")XA5l)!r0U!Yb_>
"U52;#mq%K%1Wm[&J>`k)&=.W(kNUj(r67f!sAc3#7(VC$OdIS%hK<c',2<")XSAn)!MmS!Yb_>"U52;
#mq%K%1Wm[&J>`k)&=.Y(kNUf(rHCh!sAc3#7(VC$OdIS%hK<c',2<")XeMp)!)UQ!Yb_>"U52;#mq%K
%1Wm[&J>`k)&=.[(kNUb(rZOj!sAc3#7(VC$OdIS%hK<c',2<")Y"Yr(uZ=O!Yb_>"U52;#mq%K%1Wm[
&J>`k)&=.=(kNV)(rl[l!sAc3#7(VC$OdIS%hK<c',2<")UfOT)#Y;m!Yb_>"U52;#mq%K%1Wm[&J>`k
)&=.?(kNV%(s)gn!sAc3#7(VC$OdIS%hK<c',2<")V#[V)#5#k!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.A
(kNV!(s;sp!sAc3#7(VC$OdIS%hK<c',2<")V5gX)"e`i!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.C(kNUr
(sN*r!sAc3#7(VC$OdIS%hK<c',2<")VGsZ)"AHg!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.E(kNUn(s`6t
!sAc3#7(VC$OdIS%hK<c',2<")VZ*\)!r0e!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.G(kNUj(srC!!sAc3
#7(VC$OdIS%hK<c',2<")Vl6^)!Mmc!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.I(kNUf(t/O#!sAc3#7(VC
$OdIS%hK<c',2<")W)B`)!)Ua!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.K(kNUb(tA[%!sAc3#7(VC$OdIS
%hK<c',2<")W;Nb(uZ=_!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.-(kNV)(tSg'!sAc3#7(VC$OdIS%hK<c
',2<")T*DD)#Y<(!Yb_>"U52;#mq%K%1Wm[&J>`k)&=./(kNV%(tes)!sAc3#7(VC$OdIS%hK<c',2<"
)T<PF)#5$&!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.1(kNV!(u#*+!sAc3#7(VC$OdIS%hK<c',2<")TN\H
)"ea$!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.3(kNUr(u56-!sAc3#7(VC$OdIS%hK<c',2<")T`hJ)"AI"
!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.5(kNUn(uGB/!sAc3#7(VC$OdIS%hK<c',2<")TrtL)!r0u!Yb_>
"U52;#mq%K%1Wm[&J>`k)&=.7(kNUj(uYN1!sAc3#7(VC$OdIS%hK<c',2<")U0+N)!Mms!Yb_>"U52;
#mq%K%1Wm[&J>`k)&=.9(kNUf(ukZ3!sAc3#7(VC$OdIS%hK<c',2<")UB7P)!)Uq!Yb_>"U52;#mq%K
%1Wm[&J>`k)&=.;(kNUb)!(f5!sAc3#7(VC$OdIS%hK<c',2<")UTCR(uZ=o!Yb_>"U52;#mq%K%1Wm[
&J>`k)&=-r(kNV))!:r7!sAc3#7(VC$OdIS%hK<c',2<")RC94)#Y<8!Yb_>"U52;#mq%K%1Wm[&J>`k
)&=-t(kNV%)!M)9!sAc3#7(VC$OdIS%hK<c',2<")RUE6)#5$6!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.!
(kNV!)!_5;!sAc3#7(VC$OdIS%hK<c',2<")RgQ8)"ea4!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.#(kNUr
)!qA=!sAc3#7(VC$OdIS%hK<c',2<")S$]:)"AI2!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.%(kNUn)".M?
!sAc3#7(VC$OdIS%hK<c',2<")S6i<)!r10!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.'(kNUj)"@YA!sAc3
#7(VC$OdIS%hK<c',2<")SHu>)!Mn.!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.)(kNUf)"ReC!sAc3#7(VC
$OdIS%hK<c',2<")S[,@)!)V,!Yb_>"U52;#mq%K%1Wm[&J>`k)&=.+(kNUb)"dqE!sAc3#7(VC$OdIS
%hK<c',2<")Sm8B(uZ>*!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-b(kNV))#"(G!sAc3#7(VC$OdIS%hK<c
',2<")P\.$)#Y<H!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-d(kNV%)#44I!sAc3#7(VC$OdIS%hK<c',2<"
)Pn:&)#5$F!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-f(kNV!)#F@K!sAc3#7(VC$OdIS%hK<c',2<")Q+F(
)"eaD!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-h(kNUr)#XLM!sAc3#7(VC$OdIS%hK<c',2<")Q=R*)"AIB
!Yb_>"U52;#mq%K%1Wm[&J>`k)&=-j(kNUn(`!/S!sAc3#7(VC$OdIS%hK<c',2<")QO^,)!r.T!WrQ/
"pYD?$4@7O%M'*_&ebrs()j7kJf*ej'E\IA"pYD?$4@7O%M'*_&ebrs()j:lJf*_h'*JIC#7(VC$OdIS
%hK<c',2<")Qjp/)!;_K"U52;#mq%K%1Wm[&J>`k)&=-o(kNUd(_HrW#RLhG$k3[W&.oNg'H%Z)YS_s/
itr=4#RLhG$k3[W&.oNg'H%Z)Yo&'0i><(2#mq%K%1Wm[&J>`k)&=-R(kNS9(`3Pd$OdIS%hK<c',2<"
)Nu"i)#Y9\$4@7O%M'*_&ebrs()iDSJf+A%$k!IQ%M'*_&ebrs()iGTJf+;#$OdIS%hK<c',2<")O;4l
)#"jS%1Wm[&J>`k)&=-W(kNUt(^UZ_&.oNg'H%Z)Ql(Dlo,%`D&.oNg'H%Z)R2CMmnJDKB&J>`k)&=-Z
(kNUn(^:Qb',2<")OhRq)!r.D&ebrs()i\[Jf*ej";;Ie()i_\Jf*_h!u)Ug)P.dt)!;_;)&=-_(kNUd
(]bBjTGW7titqb7Tbr@ui>@(~>

%%EndBinary
grestore
np
grestore
grestore
gsave
152.496 406.003 mo
201.816 406.003 li
201.816 363.463 li
152.496 363.463 li
cp
clp
gsave
159.456 369.762 mo
156.336 367.902 li
200.436 367.902 li
200.436 405.943 li
201.756 405.943 li
201.756 366.582 li
156.336 366.582 li
159.456 364.722 li
160.292 364.282 159.485 363.122 158.796 363.642 cv
152.556 367.242 li
158.796 370.902 li
158.976 370.962 li
159.276 370.962 li
159.396 370.902 li
159.576 370.842 li
159.636 370.722 li
159.756 370.602 li
159.816 370.422 li
159.816 370.242 li
159.756 370.122 li
159.696 369.942 li
159.576 369.822 li
eclp
201.852 406.076 mo
201.852 363.332 li
152.388 363.332 li
152.388 406.076 li
cp
/2 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 768.104 ]ct
[0 42.744 -49.464 0 201.852 362.028 ]ct
snap_to_device
<<
/T 1
/W 256 
/H 256 
/M[256 0 0 -256 0 256 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
!s/Q-"bm55"pP89#7(D7"c3G8#5n`0#mU_<"9j_gJd2)V"ptYA#Qk2;Ns:1?q$%'4$4-qC%0R0(#(d'R
"pb_J$4-qC%1j#7#(d'P"pkkP$jm:R',1ufQj/-Ho*,O:&J#9c(Dmf"&.Y06Jd1`L$Q0Zk)@RQ$(_[T'
%\<lV#4Da)*>on1+!;L=(a0S5%\X)Y#42U(+sRsN,p+6K-5[m?*"JbKJd1NF%OWGF-mU)\.2sTN+VYnG
VZq_WklqVJ/0Z;e,UFN])^ZCF/M=",Jd1BB%kfUk+sSK]1*7qa-5\Nq0!#8/#3?%#2)[-C+sT#l1*7qa
-9*e<0!>J2#3,n"3BB&P0fpU=,VgGj4?YY[1bQ'<Jd10<&jA<:2EroX,<$l'5X@Lq3&<BXPm2gE'a=k0
4ukY^5;>5E2ag)(5s.:i7l3Q"#(d'X"r'Tq4ukY^5;>5k8kVTB5s.h#7l3Q%#(d'V"r0j'6V]X&2EroX
8P2WE7Sc-?3(Gf%Sd'cNq$%U/9h7WH3BB&_;*.?A91;<J4A7_);c'.lJd1rRr_4(t6V]X&<)ldW8P2WV
7T)?B='/U%U]uDTo`k@h'M(Sd>$Fs+;*.?S93+M[?!^l?=\u"#Jd1fNr(Rkr6XX>,<)le)8R+nh7Uot8
?W^H-WWn%ZnHSkb'M(T!@9Z]B;.<+%94hgHA6rVF=_OoAJd1ZJqFqYp6XX>,<+Sp98SMpOB4GIY?Y`eX
YQf[`m0<A\'M(T!@;JnS;.=BVC1_*gA8Yai=_P,GJd1NFpe;Gn6Z6CL<+Sp9E+s'!B5qI"?Ya\'[K_<f
km$lV'M(T0@;L%.G%,E)C1_*uA8YauG]UD"Jd1BBp.Z5l6Z6CYH?FC?E+s'6B5qI0I<TpW]EWrljTbBP
'M(T?IsH?_G%,E@C3sTEJp`2pG]UV(Jd16>oM$#jKRSDrH?FCbE.D\ML4P,-K6MQ]_?PSri<JmJ'M*n+
IsH?rG(jmcM2I4BLO=_uG`8I'Jd25ZnkBfhKRSDrHAH`uNK0'WMh-Y2K91>:W!7hXr<Ddd'M*n+IsH?r
G(l'=O,AjHLQ[:OGQk,PJd2)Vn4aTfKTgn2HB`T,OcGK[Mj9'\K*.DCXp0I^q$-:^'M*n@J!ZOeR>$c`
O,Aj\LBdk_Q3FMtJd1rRmS+BdKThjkS!9=pOcGKmMj9h<!WrQ/Zj)*do`jeX'M+gfR[9M.R>$crO.;mN
SHfE&"9l7=Jd1fNlqJ0bU7[m@S!9<]OeAH[TaD)2#Qk25\d!`jnHS;R'M+sjR[9M>R2qD)UCRb?#mU_<
":MmIJd1ZJl:hs`U7[m@S"uGmV%jRQ$jm:G#RpnH^]oApm0;fL'M+sjR[9M>R2r+=&J#9W#ndLX&.ZS^
Jd1NFkY2a^U8FBWW$duR)&3_o$jm:R',1uf`Wh#!km$<F'M+sq2(tmU+rqO9&J#9c(Dmf"&.ZedJd1BB
k"QO\U8^"'.jlM])&3`%+<)+6',2DrbQ`Y'jTajA'rjX%WAQ=Z-R'QK*YBJ:)]'>7'H@V/#(d'>#3APo
840GW2(pI-+sRsN,p+6K-5[m?*"LC$Jd10<j@p=Z6`d7E0.SRt,:Ff`+"8-U(a0S5Zj)*drs%LX'M(Tm
WAQ=Z/0Z;e,VgGj)^ZCF/M=L:Jd2/Xi_:+X6`d7E0/,+),:Ffm+"8-UXYVdd\d!`jqZc"R'M(TmXu\Hp
0d7i$,VgGj)^[O#1bQHGJd2#Ti(XnV6``:/2D?jI,<$l'+"9<83&<Cp^]oAppBKML'M(ST3BB&_0fpU=
,VhhT4?YY[1d](aJd1lPhG"\T6U!Lk2EroX,<&"Z7R9."3(Gel`Wh#!o*4#F'M(Sd3BB&_0fqs!91;<9
4A7_)1d]:gJd1`LgeAJR6V]X&2F"E-8P2WE7T)?B3(Gf%bQ`Y'mfqN@'M(Sd3BB&_;*.?A9<gra4A7_:
=]!EKJd1THg.`8P6V]X&<)ldW8P2WV7T)?B='/U%dKY:-lNZ$:'M(Sd@9Z]2;*.?S93+M[?!^l?=]!WQ
Jd1HDfM*&N6XX>,<)le)8R+nhZ=@EO?W^H-fEQp3k6BO4'M(T!@9Z]B;.<+%94hgHA6rVF=_QOoJd1<@
ekHiL6XX>=<+Sp98SMpOB4GIY?Y`eXh?JQ9is+%.'M(Tt@;JnS;.=KYC1_*gA8Yai=_QauJd10<e4gWJ
6Z6CL<+Sp9E+s'!B5qI"?Ya\'`!1etrs$qH'M(T0@;L%.G%,E)C1_*uA8Zg>G]Un0Jd2/XdS1EH6Z7I"
H?FC?E+s'6B5qI0K6MQ]ap*G%qZbGB'M(T?IsH?_G%,E@C3sTEJp`2pG]V+6Jd2#TcqP3FKRSDrH?FCb
E.D\\L4P,-K6MQ]cj#(+pBJr<'M*n+IsH?rG(jmcM2I4BLO=_uG`:)UJd1lPc:o!DKRSDrHAH`uNK0'W
Mh-Y2K91>:ecp^1o*3H6'M*n+IsH?rG(l'=O,AjHLQ[:OQ3GqGJd1`LbY8dBKTgn2HBahOOcGK[Mj9'\
K*.DCg]i?7mfps0'M*n@J!ZOeR>$c`O.;,nLBdk_"9mZeJd1THb"WR@KV+^"S!9=pOcGKmM[H![!WrQ/
iWau=lNYI*'M+gfR[9M.R>$crO.;mNSHfE&"9mlkJd1HDaA!@>U7[m@S!9<]OeAH[TaD)2#Qk25kQZVC
k6At$'M+sjR[9M>R2qD)UCRb?#mU_<":ON"Jd1<@`_@.<U7[m@S"uGmV%jRQ$jm:G#RpnHmKS7Iis*Is
'M+sqR[9KkR2m.[&J#9W#ndLX&.\47Jd10<`(^q:U8FBWW$duR)&3_o$l0-d',1ufe-:L/rs$A8'M+sq
2(tmU+rqO9&J#9c(Dmf"*"LR)Jd2/X_G(_8X/Rs0.jlM])&3`%+<)+6',2Drg'3-5qZao3'rjX%WAQ=Z
-R'QK*[MmN)]'>7'H@V=#(d'T#/O"K840JX2(pI-+sRsN,p+6K-5[m?*"Lm2Jd1rR^eGM66`d7E0.SRt
,:Ff`+"8-U(a0S5iWau=o`i0*'M(TmWAQ=Z0d7hj,VgGj)^ZCF/M?,hJd1fN^.f;46`d7E0/,+),<$l'
+"8-UXYVddkQZVCnHQ[$'M(TmXu\Hp0d7i$,VgGjZopB)1bS(uJd1ZJ]M0)26U!Lk2D?jI,<$l'+"9<8
3&<CpmKS7Im0:0s'M(ST3BB&_0fpU=,VhhT4?Y[31d^^:Jd1NF\kNl06U!Lk2EroX,<&7a7R9."3(Gel
oEKmOkm"[m'M(Sd3BB&_0fqs!91;<94A7_)1d^p@Jd1BB\4mZ.6V]X&2F"E-8P2WE7T)?B3(Gf%q?DNU
jT`1g'M(Sd3BB&u;*.?A93+M[4A7_:=]#&$Jd16>[S7K-6V]X&<)ldW8[_8m7T)?T?W^H-#(d'<#.7/>
84--\>?"U"4%W[M<^otm?=-f;:u_b3#6+n79b^,c?t!8=<Dd3s>YA,'@q8nQ=BT>"#(d'X#.%#<84-cn
>?#02@S'h6AnPUa?=-f;B^#_Q#5\V19b^,c?t!kNAPlo.Bkh6m@q8nQCKY?;#(d'T#-gl:84.<(CfFtC
@W6$rAnPUaDI70^F70<b#58>+9b^,cDddH]F`q55Bkh6mEF`roCN=Le#(d'P#-U`884.<(CijfC@W6$r
HY7>/DLH_RF7f`h#4i&%9b^,cDh!%YF`q55Bki!-EIrRjGBe3(#(d'L#-CT68@X+uH$XUV@W6j4HY7nb
I"QWfF8H/n#4Dbt9b^-OIXcWhF`rIXJ80srJVSW*GBf)G#(d'H#-1H48;)GAH$Y9iKlE'/MMm%@I"QWf
N.M9"#-(B08;)GAH$Y9iKoM+RMMm%@I"MK^G`7=\km"+]%S28:IsH?rG(l'=O,AjH"c&7nOHp'+#3Q2h
9aaLFPCIkFPaR5fNfOI'Mj9'\!X"_lM[&8IVbIFfKTgnPR$="m$^$I1S;WZ'#6Fu1"c`fI#,Y)u8;*V(
Q^\JLR>$crO.;+8SHfE&"9jnli<H,Q'M+gfR[9M.R>$crO.;mNSHfE&"9nB$Jd25ZUeMOoU7[m@S!9<]
OeAH[TaD)2#Qk25p'-*Qr<B#k'M+sjR[9M>R2r+=UCRb?#mU_<":P#0Jd2)VU.l=mU7[m@S"uGmV%jRQ
$jm:G#Rq=Tr!%`Wq$*Ne(.b0sR[9KkR2m.[&J#9W#ndLX&.SmKJd1rRTM6(jU8FA4W$duR)&3_o$l0-d
',1uX%YFuY#+nU$8>;t=0;p6B*>oS()@RQ$(]tEc*"I]-o*1d\%CrO=2(pI-+rqO9&K2br)]'>7'H@U>
#4Vnh9aaKZX/Rs0.jlM])'0)1+!;L=(a0S5%ZCV\#+\Ho840JX2(pI-+q,\E,UFNT)^ZCF'H@UD#42Vb
9a+'TXJn'1%P'(S,:Ff`+"8-U(a0S5OTt+URnWrT6`^m!2(pI7+sSK]1*7qa-5[m_/sHS)#+A7#840J]
2)[-C+sT#l1*7qa-ET'\/sce*#+SEe9b^,cXKFTB0JPX62^C.#.C;5t1Gg_Q#3?&\:&@X!84,R$3]8ZH
4!Q[01-e,f4ZG5S6Ce>@#,"]c9b^,c4ukY^5;>5E2^C.J5s.:i[5:4C#2ocP9bU&b4ukY^5;>5E2bQS/
5s.:i7l134K*M>[Pt_f\6V]X&2EroX8P2WE7R9.1"#re-6A>^C#*_gk84--43]94,4%W%;77IJZ4A7_)
;c&;TqZ`6Y$:mNZ3BB&u;*.?A#tn;g;ERW4=BSIZ#5JId9a=3V:0Lk$<Da/d8R+nh7T)?T?W^H-Ns>=_
O\GsL6V_&o%ocP+\k-."<^pS0?=-f;:m)%U#*;O[84+"t@9Z]2;.<+%93/?.A6rVF=_O')o*1:N'hq4d
?t!8=APlo.>dn<X@q8nQ=BT=)#4Vn\:&Rd#84-cnCfFtC@VogoAnPUa?=.JNBU]4p#*_jY9b^,cDddH]
APloUBkh6m@q9IaCKY_M#42V\:%q?r84.<(CfGP#@W6$rAnQ*oDI7U.F.ig(#+/-W9b^,cDddp;F`q55
Bki!-EF`s8GBe2)#3c>\:%:pl84.<FH$XUV@W6j4HY7>MI"QWfF/K6*#+SEU9b^..IXcWhF`q55J80Fc
JVSW*GBe2/#3?&\:$YLf8;)GAH$XUVKlDQWMMm%@I"QWfN3*<E#,"]S9b^-OIXcWhLj"JkNerXOJVSW*
OEc_g#2oc@9`mq>IX_oSHAH`uNK0'WMh-Y2K91<]P6V$kKhVP<'82R!H$Y9iKoqCVMMm%@P(Sj^"dTAk
#)5hf9he03PCIkFPaR5fNfT'UQ%tM("-s+Y#5\U\:&I^"8;*1qQ^a5-KoqCVS;WZ'#6Fu1"e5em#)Z.N
9b^-OT:2+9PaR5fTT>V$$CqD-!sAe"#58=\:%h9q8=lHBQ^a5-*Kd"U&"s=:#7(D7"el4o#*)FL9b^-m
T:2+9PaNPSTVE$k$4-qC!sB".#4i%\:%1jk8>;`FQ^ae=*MjLG%h&dO#7(D7$`F:"#*M^J9b^-mT:2+9
UmW7"'bLrb$4-qC%1j#M#4Db\:$PFe8>;uMQ^]@j*>oS(%h&dO&ebrj%^$$'#*r!H9b^-mVRnL[-R'QK
'bLrb('tfk'G(bZ#3uJ\:#o"_8><(@0;p6B*>oS()@RQ$(_[T'%^ZH)#+A9F9bb.=WAQ=Z-R'QK*YBJ:
)]'>7'H@Ul#3Q2\:#AY[840GW2(pI-+rqOB,p+6K-5[m?*"KOajT_;NgeAMS6`d7E0.SCo,:Ff`+!;LL
(a0S5._Q&H#,"]D9b^,cXJn'1.kDkh-mU)\.2sTN+VYp2#2oc<:%h9q840JX2(pI7+sSK]1*7qa-5[m_
/trRM#)#_B9b^,cXKFE=0JOar2^C.#.2sTn1Gg_\#5na\:%1jk840I=3]8ZH4!Q[01*7sP4ZG5S/uT!O
#)H"@9b^,c4ukY^5;>5E2^C.D5s.:i1GhG!#5JI\:$PFe84,R$3]92W4!Q[P77KR*4ZGqg6EUOe#)l:>
9b^,c4ukY^5;>5E2bQS/5s.:i7l3Q;#5&1\:#o"_84--43]92W4%W%;77KR*9K5O!6F6sg#*;R<9b^,c
:,t?n5>aL68kVTB;ERW47oN6n#4Vn\:#8SY84--43]9u84%W%;<^otL9NP>!:q?l"#*_j:9b^,c:0Lk$
<DbhL>YA*e;ES8m=BSJ6#42V\:"W/S84-cn>?"U"@S'ft<^pS0?=-f;:r!;$#+/-89b^,c?t!8=]MW-0
>YA[A@q8nQ=BT=T#3c>\:!u`M84-cn>?#02@S'h6AnPUa?=.JNBZ:8>#+SE69b^,c?t!kNAPloRBkh6m
@q8nQCKY>m#3?&\:!?<G84.<(CfFtC@W6$rAnPUaDI70^F3FjK#,"]49b^,cDddH]F`q55Bkh6mEF`ro
GB.cN#2oc<:$,.a84.<(H$XUV@W6$rHY7>/I!p3`F0Z#M#)#_29b^,cIXcWhF`q55J80FDEIrRjGBe2:
#5na\:#J_[8@X+uH$XUVKlDQWH\R*,I"QWfF1;GO#)H"09b^-OIXcWhF`rIXJ;K/AJVSW*GBf(Y#5JI\
:"i;U8;)GAH$Y9iKlE'/MMm%@I"RN*N4oMj#)l:.9b^-OIXcWhLj"K3NfT'UJVTD@OE^rF#5&1\:"2lO
8;*1VH$Y]uKoqCVMMm%@P(Sj^"iLW:#*;R,9b^-OPCIkFPaR5fNfT'UQ%oSG"-s,2#4Vn\:!QHI8;*1q
Q^a5-KoqCVS;WZ'#6Fu1"j.&<#*_j*9b^-iT:2+9PaR5fTT>V$$CqD-!sAeP#42V\9up$C8=lHBQ^a5-
*Kd"U&"s=:#7(D7"jdJ>#+/-(9b^-mT:2+9PaNPS'r);5$4-qC!sB"\#3c>\9u9U=8>;`FQ^ae=*MjLG
%h&dO#7(bA%b:jI#+SE&9b^-mT:2+9UmW7"'bLrb$4-qC%1j$&#3?&\9tX178>;uMQ`):"*>oS(%h&dO
&ebrj%bq9K#,"]$9b^-mVRnL[-R'QK'bLrb()If$'G(c3#2oc<:"E#Q8><(@0.SCo*>oS()@RQ$(_[T'
%`/GM#)#_"9b]sqWAQ=Z-R'QK*YBJ:)]'>7'H@V%#5na\:!lZM840GW2(pI-+sRsN,p+6K-5[m?*"L$o
qZ_jNc:o$E6`d7E0.SCo,:Ff`+"8-U(a0S5.a&%l#)Z-u9b^,cXJn'1.kDkh-mU)\.2sTN+Y>=k#58=\
9up$C840JX2(pX<+sSK]1*7qa-5[m_0$jgq#*)Es9b^,cXKFE=0JOar2^C.#.2sTn1Gg`5#4i%\9u9U=
840I=3]8ZH4!Q[01*7r-4ZG5S0%L6s#*M]q9b^,c4ukY^5;>5E2^C.D5s.:i1GhGO#4Db\9tX1784,R$
3]92W4!Q[P77KR*4ZGqg6JMe4#*quo9b^,c4ukY^5;>5k8kVTB5s.h#7l3Qi#3uJ\9t!b184--43]92W
4%W%;77L'89K5O!:uV]D#+A8m9b^,c:,t?n5>aL68kVTB;ERW47oN7G#3Q2\9s@>+84--43`K*V4%W%;
<^otL9NP>!;!8,F#+ePk9b^,c:0Lk$<DbhL>YA*e;I*U9=BSJd#3,o\9r^o%84-cn>?"U"@S'ft<^pS0
?=-f;;!nPH#(fRi9b^,c?t!8=APlo.>YA[A@q8nQ=BT=b#6+m\9uKa?84-cn>?#02@S(9KAnPUa?=.JN
B[d7b#)5jg9b^,c?t!kNAPloRBkh6m@q9IaCKY?&#5\U\9tj=984.<(CfFtC@W6$rAnPUaDI71"F4pio
#)Z-e9b^,cDddI(F`q55Bkh6mEF`roGBe2b#58=\9t3n384.<(H$XUV@W6$rHY7>/I!p3`F5R8q#*)Ec
9b^,cIXcWhF`q55J80FDJV&9%GBe2h#4i%\9sRJ-8;)GAH$XUVKlDQWH\R*,I"QWfF63\s#*M]a9b^-O
IXcWhLj"JkJ;K/AJVSW*GBf)2#4Db\9rq&'8;)GAH$Y9iKoM+RMMm%@I"RN*N9gc9#*qu_9b^-OIXcWh
Lj"K3NfT'UJVTD@OE^rt#3uJ\9r:W!8;*1VH$Y]uKoqCVMMmaTP(Nk&"nDl^#+A8]9b^-OPCJpdPaR5f
NfT'UQ%oSG"-s,`#3Q2\9qY2p8;*1qQ^a5-KoqCVS;WZ'#6Fu1"o&;`#+eP[9b^-iT:2+9PaR5fTT>V:
$CqD-!sAf)#3,o\9q"cj8>;`FQ^a5-*Kd"U&"s=:#7(D7"o\_b#(fRY9b^-mT:2+9UmW6c'r)9J$4-qC
!sB"j#6+m\9sdV/8>;`FQ^ae=*MjLG%h&dO#7(bA%cdim#)5jW9b^-mT:2+9UmW7"'bLrb$4.=N'G(c;
#5\U\9s.2)8>;uMQ`):"*>oS(%h&dO&ebrj%dF8o#)Z-U9b^-mVDU$*-R'QK'bLrb()If$'G(cA#58=\
9rLc#8><(@0.SCo*>oS()B]t8(_[T'%e'\q#*)ES9b]sqWAQ=Z-R'QK*YBJ:)]'>7'H@VS#4i%\9qtDt
840GW2(pI-+sRsN,p+6K-5[m?*"MZHnHP.NTM6.l6`d7E0.SCo,:Ff`+"8-U(a0S5.es;;#*_iQ9b^,c
XJn'1.kDkh-mUPi.2sTN+Y>>D#42V\9q"cj840JX2(pX<+sSK]1*7qa-ET'\0)c(@#+/,O9b^,cXKFTB
0JOar2^C.#.2sTn1Gg`K#+A8N9bBo`X>r="0JPX62^C.#.6KaQ!])Ycl3<bQO\H<V6U!Lk2EroX,<$l'
7R72?4ZG5S6L+iI9o_pU84,R$3]92W4!Q[P#Xq3K4?YYo1d^O5TM:>=#Y7<X3BB&_0fob78kVTB5s.h#
7l3R"#(fRJ9b^,c:,t?n5Hm4@8kVTB;ERW47l4'3#6+m\9r1Pu84--43]93"4%W%;YsqVR9K6-W;"Fni
#)5jH9b^,c:,t@7<DbhL8kW2S;ERWS=BSJo#5\U\9qP,o84--\>?"U"4%W[M<^otm?=-f;;#(=k#)Z-F
9b^,c?t!8=<Dd3s>YA,'@q8nQ=BSJu#58=\9pn]k84-cn>?#02@S'ftAnPUa?=-f;BEe\6#*)ED9bU&b
?t!kNAPlo.Bkh6m@q8nQCKUXNoELCOP>)TZ6aL3;<+Sp9E+s'!B4GIi"(,hHB_;Rm9or'Y84.<(CfFtC
@W6$rAnM<fA8YaiEc^pYPYI-3$:mO&@;L%.G%,E)$#4'bEF`s8GBe3'#*qu@9a=3VDh!%YF`n1&E+s'6
B5qI0I<TpWp]d*[LJ7nB6[jN1%siAA@W6j4HY7n]I"QWfF86$/9nZ4A8;%V)IsH?_G(jmcC5RasLO=_u
G]W]cS5"T0'hq5PIXcWhLj"JkJ;K/AJVSW*GBf)D#+eP@:&Rd#8;)GAH$Y9iKoM+RMMm%@I"RN*N;NmQ
9nH+99b^-OIXcWhLj"K7NfT'UJVTD@OE^s-#(Q~>

%%EndBinary
grestore
np
grestore
grestore
144.756 338.442 mo
141.696 333.222 li
142.776 333.222 li
139.716 338.442 li
139.248 339.24 138.232 338.587 138.576 337.782 cv
142.236 331.542 li
145.896 337.782 li
145.956 337.962 li
145.956 338.262 li
145.896 338.382 li
145.836 338.562 li
145.716 338.622 li
145.536 338.742 li
145.416 338.802 li
145.236 338.802 li
145.116 338.742 li
144.936 338.682 li
144.816 338.562 li
144.756 338.442 li
cp
142.896 354.822 mo
141.576 354.822 li
141.576 332.862 li
142.896 332.862 li
cp
f
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NCAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NCAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory
48 <001C60D8A8C9B59F85E8A8526E50FEB33438675EDBBD0866093A4555E3EA
3A35849B91EFFB88205281CC77395AC14DF328B50F1F179210F0307F50BFB242
AA7F76F18203303EF0BF46B76E61FB539D568EF9F434EC657F4C5CDE1BCAA90A
83BAFEB02869664DC06CC8CA4FA1E876C39F3F5371AD261F117CDAF8F6A4E96E
CA4F5088752E105CDEB8FBEB2F7F82D31A2FEB6DF3C053295A006D723DEE7CEF
30A9F16E8C6EE80DDA09053247> |
!
end
end end
%ADOEndSubsetFont
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
239.136 343.662 mo
(\0000)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
241.236 334.362 mo
(\000I)sh
gsave
243.096 322.902 mo
49.236 322.902 li
49.236 300.762 li
243.096 300.762 li
cp
eclp
243.252 323.036 mo
243.252 300.572 li
49.068 300.572 li
49.068 323.036 li
cp
/3 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 768.104 ]ct
[0 22.464 -194.184 0 243.252 445.068 ]ct
snap_to_device
<<
/T 1
/W 1 
/H 3235 
/M[1 0 0 -3235 0 3235 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Jc^N*Jc`4Zq?-KqoEG!orWiE.r<`H0rX/W4q[EH5r=8T5pCR<9rY#)ArY5;Gp_NW@qAAuFoG[KDrZ(kW
r>tkXpE0AWrZV._rZhCfpEfS]r?qRmpaPqeq^_FmoI]hj!&+4'r%\.)oJ61tqD@t)pGW"0r]'d8r]:!>
pcS:6r]^<Gpd"R>qa10Ir^-ZRogSUEqa^EPpIY?Vr_*,^rD!8dpeUW\r_`Ymqc!JnrDi_qr`B)$qH<f#
pfdZ$r`o;*ra,S2pL*c)raPk:qIKS:ratq<pLsP?rbD=GrG;IMqelCOrc%[Qs)IgSrH%s[qfVm]rce*]
pj)jbrHn<eoR6L`qg\?jpjrErrIap!!/1*#reCE-qhY6.rJLB.pl,02rf6l:rfI,ApQFa(plYW>qiLT5
pPf*9repZ1rJ:H.qhG*(rg!>5re(3%pjr0iqg\?hpjN$eqKr4-rd"C-rceEerce6_rcS3^qK)XVrg<S&
rc%jTqJQ:LrbVIIrG)=Gqe5tsrb)(>rgNgsqd]J2pgEi&r`oM/s'5G*r`];jqH<f"r`AttrDihrqc!Jl
r_`Mgrg`s`qbI,brCm)]qapNQpdb3NpI5*LqEt*Gpd+X>rgj$Pqk!dLrB'm;r]0s;q`"I3rh&sCpGDb'
pbDiBpbDY"pFc4mq^_`@q^_Z?r[Rf?r@.^oq^;@irhTB:rZqIfq]c"_r?1tZrh]T8qPO64rhoW4q\fGP
p_iiDrM]]3ql0Q1rY>8DrY,8Dq[rf=rMo`*rXSo:q@*?2rX/N/rWrK.q?Hg#p]LStr<)KjriH)%qlTi$
riZ)%q[!'+rNH2/q[NN7rX\k*rXf&@q\&`>q\K11rYPF0rYYX=ru(bQq\fI>p`&uKqB#MUq]Ye\rZqIh
qkX3<r?qIjr[IiAq^MT?q^_Oprj)O0qR$5Sr\+7)r\41'pbMS"q_\1-rh'-Iq`"C4q`Fa=rgs!Mr]^<G
qEXpDpd+tgpd=pIrC6cUqa^EPpIY6Tqb@#arjM]oqbd2gr`&ksqc<\trE/r"qc``!pg3i*r*fV6qd]A3
ph0J;qJ-"FrbVIKqJZ7Nrg<\*qK)XXrcS*]qfqj\pj;jbr-\QnqgS9hpji6m!4ViXre199qh=m%qhb<0
rfm8hrf$i9qi:N7plb95ppl!eK"8k2J,~>

%%EndBinary
grestore
np
grestore
102.396 321.102 mo
97.176 321.102 92.916 316.722 92.916 311.322 cv
92.916 305.922 97.176 301.542 102.396 301.542 cv
107.676 301.542 111.936 305.922 111.936 311.322 cv
111.936 316.722 107.676 321.102 102.396 321.102 cv
0 0 0 0 cmyk
ef
124.236 321.582 mo
119.016 321.522 114.816 317.142 114.816 311.742 cv
114.816 306.342 119.016 301.962 124.296 301.962 cv
129.516 301.962 133.776 306.342 133.776 311.742 cv
133.776 317.142 129.516 321.522 124.236 321.582 cv
ef
209.676 321.582 mo
204.456 321.522 200.196 317.142 200.196 311.742 cv
200.196 306.342 204.456 301.962 209.676 301.962 cv
214.956 301.962 219.156 306.342 219.156 311.742 cv
219.156 317.142 214.956 321.522 209.676 321.582 cv
ef
229.896 321.582 mo
224.676 321.522 220.416 317.142 220.416 311.742 cv
220.416 306.342 224.676 301.962 229.896 301.962 cv
235.176 301.962 239.376 306.342 239.376 311.742 cv
239.376 317.142 235.176 321.522 229.896 321.582 cv
ef
1 /8 /CSD get_res sepcs
0 sep
WTDCKN+TimesNewRomanPSMT [0 -16.132 -16.132 0 0 0 ]msf
145.836 318.402 mo
(\000\021\000\021\000\021)
[-4.0202 -4.0202 0 ]ysh
168.516 321.582 mo
163.296 321.522 159.036 317.142 159.036 311.742 cv
159.036 306.342 163.296 301.962 168.516 301.962 cv
173.736 301.962 177.996 306.342 177.996 311.742 cv
177.996 317.142 173.736 321.522 168.516 321.582 cv
0 0 0 0 cmyk
ef
188.676 321.582 mo
183.516 321.522 179.256 317.142 179.256 311.742 cv
179.256 306.342 183.516 301.962 188.736 301.962 cv
193.956 301.962 198.216 306.342 198.216 311.742 cv
198.216 317.142 193.956 321.522 188.676 321.582 cv
ef
61.716 321.582 mo
56.496 321.522 52.236 317.142 52.236 311.742 cv
52.236 306.342 56.496 301.962 61.716 301.962 cv
66.996 301.962 71.256 306.342 71.256 311.742 cv
71.256 317.142 66.996 321.522 61.716 321.582 cv
ef
81.936 322.002 mo
76.716 321.942 72.456 317.562 72.456 312.162 cv
72.456 306.762 76.716 302.382 81.936 302.382 cv
87.216 302.382 91.416 306.762 91.416 312.162 cv
91.416 317.562 87.216 321.942 81.936 322.002 cv
ef
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WTDCKO+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WTDCKO+SimSun-GBK-EUC-H 6 GetGlyphDirectory
312 <001C60D8A8C9B5EE3100C13F82B315FFC90AE205A89AA0EA563EA15CF43
86B121ED34F342871718CEA44A9EB44A6BE8504A3335416877066B920E39D56F
15DC476510C5F2FD94E4EE77A9EEAB466C64A2DBA50117D54704720AD72F30FE
C2766EF6F71ACB3C6F157D3B796ACA08CA7706583D68B5C708F446AD85D68F41
5FC9C62E3E765D8E0D9CC6FC590A57DBBA41676AC6DB0F1EF3AF1C7D840138ED
6A2C2094C68CBDE34F756A25C93240736CF84A9AD9A2BB6AE9EECE3104F0DF87
D40DE07FA0BBF085BAC6337E25993BBA9A964BEE92A6DECAFE84FA035E0FB2A6
DC87EF0DE07056D43FA86CD8ED4961125DA5A50DE663B6BA87E437096DEDC0D0
8D91F812C0F4405D8525E9C6F9D459A3D6E3F4A6430DDDC87AF426699C28F158
456C5E0ADC0CC6965EE691052C97D524A468838E6C9FC5235E39036FC3E7F44F
A060706400A45CB75AF7B0080FD309E614ADD83FEB328FAB4> |
15805 <001C60D8A8C9B5EE3117D9497B82B5DD457AEDA1688D38CCF36D7BE6D
B3FFC277BCCBE7676C115920CA0444884A570C8BF1B444ED3DAE50C9B7194332
C0FA26310A8D16AFE82310724DCC1F642B61449BBACFC9A375AC9BF6AC4B8123
960EC80B38E4D45141683F0C73FD30FB388A8F72E0C5CE245E6FEA317DE1B45B
69F8FEB35E0E9DC1D2D2440219E38B1FE862850E7A741B34E5EBDB3707177FE5
6CA4132313A9BE48129DA07CEF51DB2CEB810D06A231D336BBED1865926B1C10
1BC094BEFC15D1402EFE5C685145F20975EEB71BD2DA510D374CFD5C66785A64
7096E819BB6F4006438B99E597D7A1AB00216BF6819522AF1F8539678B88956A
BE90DAEE5A74A709D2A113F6CA64C0576887E7B948678AF67E861679184834A3
3F1D7D06258D601A6E9858F2C5B9D599D30DC82B8B5C82CF40031BADAF62F7C6
D348CDC1FB9D8BDFF7936F428597F3DA8A87B5CFB832D3B138DD6ACE3C3E5501
8E29E7BEC707EDA245F205CC31D7CEE307A3E4B7F5F23DD2F4C7A9B9C541B713
32CADB8BDDF366D920216C589C730CD064DF60236B4D85208AC7A6B8D118345D
26DA5098528F1780712FE3A4EB2C3A768032481DCF2EF38AF7449BF4ABAC7CA2
7C5BC381EF466EAC0116AEFC45418878ACA62B6CFA5> |
2616 <001C60D8A8C9B5EE31024001D815B60DC67152D0F57B9C6F5B20609B04
2B4C4E4C201520C89F9912B07852978F93DCC5E9DA9EC680C8B2904DD4DA3415
72D388D4D82869F16C51641275756414ED4E10805FA8384BD5C2EB48ED2D9FD9
3E73A2EFC9F9AB02CA2A7A789F5C305CC780885B3FE2B680B466F25ED69ECDFE
B88A0812ECB02A2015D0BE84547ED8DFE3F4330325571B96DB4DB1E4FA1D18A1
D53C466C7B6F18499F42FA4968817260A3FB51466B6A275D6F> |
314 <001C60D8A8C9B5EE3102A5904B974104A7B13CD9B6F45D0A1C93636C809
326CB0DB44BDEBE806B94A1EB21766B7DDB2B858CE5406D399E40FB5BC805AA5
BC72FB36308DAA369C7299C9888C143BBE8114FF4C8503D23FA03046C4B14831
55B3B6ECEA074DB5B2E5E3CDACD1DC6C089F6D328C2F8FD83B646A4B5A17099C
2E65177FE7B22AD40EF9980A8AD60F2C698238DF93E87FDB3160704569AEC75D
E19427AB7325AB36BA3698D499D05AF28CEF39D9C9E879A64815DD4C3EF3E594
3678268A3743F64E7A16EED77E8E5A96995E8585009FF7CFD007DD816942A570
4084FA29614D4CA0D80B5FFA1F584> |
2102 <001C60D8A8C9B5EE310D75AF63B60288AFC61718C33D937C59FD52C538
7DC7497B6D961E924C072228906B490758BCBF3A18F3D1F460C2952208D126FD
7607984F52A10736DF35BE6CCDCF0E6B0A7867C876BACEBFEA20A2FE78DBC64B
288043128B5D9FA3F0126350100122362D646AD98C1E4C95DC85AAB11B3B09D8
508CC69F532BD2AF487FFB2B92CA3E16CCE427D0A912BD976997CEDAABF086D2
937625AF1CB25A9C4AA0804DCCBFCAA101853E4793C3A8CCF272C42D068663FD
F48F464BB179773B0A79515CD4CB2B2A40A193> |
12971 <001C60D8A8C9B5EE310DDF280EDBE96C98BCD8FB074102B8AB635CE8A
5A664F480E70F67BA43922B0EFFB2099BF504575145DDBEDDB00670F3248AEFD
1AF9CBD195D76091AB645C52362F1F2BFF5EA162EACD9608A71DA0217931005C
9FAA1BFE793A88923C1586F231F1C5A9D17BBDA3F4CD9AB96AFBC72C63EE53BB
147B54B144F2A4BE6F4F1E404E7C76A12E9A1C804A7A4C2B49D3AABD0B77DB50
B50E329ABBBAECFAF4CA982C4DAA6903BE1B11482E5AC9AE84E0F30C82BB1678
DD1307A98AC6DE87E251E644871F89A23445B3DE520F87B36FF9DA0151487831
4713355FC0D4FB57F5A8AA2BD1018BD605D3622D51F6897BDD2F21E538576427
3B1135EEF49393572881037B4ED3B06075A5C82ED92B92280C36E16BF3463637
86B706FCBF2D5D6C53FD18C58F343D5EAA96B2D1D7BCD92846E75F370B10208B
5E3A8143B8B04725474C3929637C34E9C18E21B20BADEAB5A79C0D93FE5CAD2B
E25988634308F> |
!
end
end end
%ADOEndSubsetFont
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
28.4156 545.623 mo
(\0018\000\003D\030 Q\0261#\030\027?\010\313\(\251\025\261=\275\0128 Q\015\207)
[-10.5598 -5.22052 -10.5598 -10.4998 -10.4999 -10.5598 -10.4998 -10.4999 -10.5598 -10.4999 -10.4998 -10.5598 
-10.4999 0 ]ysh
270.516 73.3018 mo
(\001:\01062\253 Q\015\207\000\003)
[-10.5598 -10.4999 -10.5598 -10.4999 -10.4998 0 ]ysh
%ADOBeginSubsetFont: KCAAAA+TimesNewRomanPS-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KCAAAA+TimesNewRomanPS-BoldMT 1 GetGlyphDirectory
3 <001C60D8A8C9B8707C25> |
!
end
end end
%ADOEndSubsetFont
WTDCKM+TimesNewRomanPS-BoldMT [0 -11.3538 -11.3538 0 0 0 ]msf
270.516 15.402 mo
(\000\003)sh
23.376 276.043 mo
18.696 275.983 14.856 272.203 14.796 267.463 cv
14.796 216.223 li
14.856 211.483 18.696 207.643 23.376 207.643 cv
57.516 207.643 li
62.256 207.643 66.096 211.483 66.096 216.223 cv
66.096 267.463 li
66.096 272.203 62.256 275.983 57.516 276.043 cv
23.376 276.043 li
.021393 .33222 .5154 0 cmyk
ef
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WTDCKO+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WTDCKO+SimSun-GBK-EUC-H 1 GetGlyphDirectory
3224 <001C60D8A8C9B5EE310226F8FF518033B48DA7E4230787D177DBCAE877
0C610C08760A44AB2F3EBBCDAAFCBC248AD058AFBBDA3E5E07A7344FF149C360
496643B1EAF9650913A5354A7522E9CD7F21DA2D6AA1EFFD937431C8D9E829BA
69964D37BCE5DF553FE41E559FC261B96DA448EDD2F19E296AA7EC301883C500
25F2D976EABA732051A930B12E52356E0215BD8C2994B38AA4978782F53437DA
266CF2CAE6E532C8C142D3988C29230BFF5DAB9C57DCE7513F988E3B20BDAC80
B576CF2D176BB6F4FC7C32AC431E8AB908E91B0ADA67B9D879C25D501AFCA151
B3DBAF3F3A8BC4B032F08B53422F65A8D8F89A07D8A4F6AEF90B1E203181633C
01F294F1B300D54B22C750E90241F495C8BAFF23BA509473F047F8C17AEDFE32
C5413F9BF835703410CBD49B13C5887F818B20B8D4CCE240B48FF30C48CC8EE8
5829E3109B843709BFD640E0BAB8AE0A157E7714CEFC678C078865C25EBC1E9F
C1C328CCEF75AEAF5CA3E456008AB7F7AA216A8107007B1C631C151EBE1C3170
B108B9723A63174B9584C9A259A75FF2504707866B38B0058C99F93B> |
!
end
end end
%ADOEndSubsetFont
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
37.7156 252.402 mo
(\033\267\035\\)
[-10.4999 0 ]ysh
50.3154 257.684 mo
(\01062\253\014\230)
[-10.5598 -10.4999 0 ]ysh
231.036 273.163 mo
226.356 273.103 222.516 269.263 222.516 264.583 cv
222.516 213.283 li
222.516 208.543 226.356 204.763 231.036 204.763 cv
265.236 204.763 li
269.976 204.763 273.816 208.543 273.756 213.283 cv
273.756 264.583 li
273.816 269.263 269.976 273.103 265.236 273.163 cv
231.036 273.163 li
.41566 .25302 0 0 cmyk
ef
1 /8 /CSD get_res sepcs
1 sep
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
245.376 249.522 mo
(\015.\006\377)
[-10.5598 0 ]ysh
258.036 254.744 mo
(\01062\253\014\230)
[-10.4999 -10.4999 0 ]ysh
45.036 280.423 mo
41.916 275.143 li
43.056 275.143 li
39.996 280.423 li
39.566 281.136 38.479 280.514 38.856 279.763 cv
42.516 273.523 li
46.176 279.763 li
46.526 280.458 45.607 281.058 45.096 280.543 cv
45.036 280.423 li
cp
41.676 558.103 mo
41.856 274.843 li
43.176 274.843 li
42.996 558.103 li
41.676 558.103 li
.021393 .33222 .5154 0 cmyk
f
250.716 277.423 mo
247.656 272.143 li
248.796 272.143 li
245.676 277.363 li
245.616 277.543 li
245.496 277.603 li
245.316 277.663 li
245.196 277.723 li
245.016 277.723 li
244.896 277.663 li
244.716 277.603 li
244.49 277.438 244.453 277.142 244.476 276.883 cv
244.596 276.703 li
248.196 270.523 li
251.856 276.763 li
252.202 277.452 251.3 278.071 250.776 277.543 cv
250.716 277.423 li
cp
246.636 558.104 mo
247.536 271.783 li
248.856 271.783 li
247.956 558.104 li
246.636 558.104 li
.41566 .25302 0 0 cmyk
f
254.976 176.082 mo
251.916 170.802 li
253.056 170.802 li
249.936 176.022 li
249.573 176.805 248.333 176.088 248.856 175.362 cv
252.516 169.182 li
256.116 175.422 li
256.429 176.16 255.619 176.73 255.036 176.202 cv
254.976 176.082 li
cp
251.556 204.702 mo
251.856 170.442 li
253.176 170.442 li
252.876 204.762 li
251.556 204.702 li
0 0 0 1 cmyk
f
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NCAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NCAAAA+TimesNewRomanPSMT 4 GetGlyphDirectory
60 <001C60D8A8C9B6079F6DFB7BF0F52906B46CE3CAA0E8323C912C9C50CE04
CBEE3BFA6D3DADAB51F1D2B8A33B1B6A50365D1DF565AD1D4D0481E5884AA675
3A385214AEBD7F48442617E767905360131875D06221ACC33FEB7E156BD0E01C
3D31B41D10C6403AD5736AC0D2C01267D72B9EB39A3AC141912D5F9AB1D3FC10
4171790634A884F1C7CC0406B7A6D00B5C3177700460D6FEB100FD62497BF422
CFB493271031B0098EFDDA7C3DFB256C9CCEBEF393DA5E207B273184B7E0> |
87 <001C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED294
48713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC
43DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E79
8B36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |
47 <001C60D8A8C9B7D8BE1910D0EBEC744B6638E6ED4C6FC0AF39F5B8B10BFA
09270956A997B577BBD8E3EC179B174ED931484CCFFCF819D4978AE37145A7A3
C221DF78A5AAD08DFCBE2638BCFCF6B4930FFFAD1163890B85697ECB905727AF
12A0E5C1679B01834AD8D0C4111313E17E548887938F4F64DA1DB39BD7CD6874
8B847D2C24AD687E0CDB56> |
89 <001C60D8A8C9B7A73DDA3AD4E30B5CCD7D3C12F7959C83D9C808662F1D29
403E3640D88B6D61CC1EF17C120CDCE65E70C4FE9E153F8E52BB6A45EF1A33FF
33B350E779BE70BFD66B1893DAD63FDF011F2039FF0D075853D9D0E3D26BA0ED
AEDA247A4C2489AC431F6D923096DA608667B0FA6E60F963DA8A46029578956D
98258ABD433E9E> |
!
end
end end
%ADOEndSubsetFont
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
57.1557 61.722 mo
(\000<)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
59.2557 54.162 mo
(\000W)sh
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
253.416 158.982 mo
(\000/)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
255.516 152.502 mo
(\000Y)sh
123.156 273.223 mo
118.476 273.163 114.636 269.323 114.576 264.643 cv
114.576 213.343 li
114.636 208.603 118.476 204.823 123.156 204.823 cv
157.296 204.823 li
162.036 204.823 165.876 208.603 165.876 213.343 cv
165.876 264.643 li
165.876 269.323 162.036 273.163 157.296 273.223 cv
123.156 273.223 li
.009033 .12824 .73449 0 cmyk
ef
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WTDCKO+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WTDCKO+SimSun-GBK-EUC-H 1 GetGlyphDirectory
3914 <001C60D8A8C9B5EE31037D3A326864CB09BAC9BF15D973FB99FE2F7D9D
80ABF08297D3AA00D36F7EAD28DE2B54FCD317E940B3E258301B302CB519AA46
D4E134FB10EFCB0B390449AF9461E7410162D32A192FFBB5B916167CDC6DF078
BC57CD1B0515B3A30B633D9D44D16F87A31ABFDDC2FCF8CE62F15B2295B43E52
EE53F8118C7A74EC2D9C6FF4AC42B892A3AD56D910B3314AE2C2FDEF54CAA30A
781F536936863D6E296567459222FB2C912DE70ADAEDD478BA09E7C8F4F47B3E
5F8F8E6303561877CD40B3AD3BEEB0185B8CACB9B2FE808CE63AA081F429EEBB
179CD270D30D0972F3A6E82000AF7E3EDD019137E7E9D449A211251C164435AD
EFBEF223E74173EEC7ABD77D3C978390B4063E5AE218D5A8AB73DAF936303926
9731DB352686AC1D7764FCFEE2A2> |
!
end
end end
%ADOEndSubsetFont
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
137.496 254.802 mo
(\017J Q\0261)
[-10.4999 -10.4999 0 ]ysh
150.096 254.802 mo
(\01062\253\014\230)
[-10.4999 -10.4999 0 ]ysh
198.636 600.583 mo
198.636 594.043 li
196.176 594.043 li
201.096 589.063 li
206.076 594.043 li
203.616 594.043 li
203.616 600.583 li
198.636 600.583 li
.91147 .75573 .023713 .000397 cmyk
ef
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WTDCKO+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WTDCKO+SimSun-GBK-EUC-H 8 GetGlyphDirectory
313 <001C60D8A8C9B5EE3103CDBDB50E14641420522352AA7F6454982588BB3
48427341BD41DCE9DFB1668CA91BBA07624115E811A37151F34CF4D96CEE0ADA
BB591980FEDC157C5F81FC2E386C334D56CD0A793C8D08F6529ADED0A890D89D
2C7F3E6575B6F70C4B41D736802452C0077707D69C2B742F221A470CF64523CD
31DCD0C8BC65E45E7CF00E6D0A7FF41DF0379931A0784C2412B285484ABD8160
66233E20B03F408FF532E817DD2FB3FB880B3A0F9AEA3D159283429DD65B97D0
430AD8FD4B6DE90EC3CC0CCD1F1667F81D43094C33B8884147F6449600C7AA3C
A96375DCBA94DE22975091CF26713531211DF4858C02A60C14508B253474247F
26550F3472142067AF5D4D05E5FF2F3868F5F5E7CC63A4F6FB4CA31B7A11E3DF
6BAFC9F0FB561EEAB87D3578BF094C043938648DE81E48A136CF92D09FC985D2
C2FA744691521761914F8F4C866145C1762C8271D417CF203D713A4562731B44
059462CC048D75E78E35119F5406B1018B0921B4F77237C490BD8597D1FAA163
1723624F9D16A2D9215BCB14F72694B65E7FF5578629C4B4334795DB02DF9E03
7E2185897ABF259995AFA711A1B8C85551A90DAE995DC02836D510FE8F760647
3FE16BE7EEEAE8F81E60A9142ACF9> |
5473 <001C60D8A8C9B5EE310D58769F11E1F9F44C0923F2C568590E71C3AE4F
840913AB14FA31D9D54B8BE6EABBBDC19E76D1CE2D706A5AFA2A678B11CDA954
322C78784B5F44711BE4E144B6EC9887D68D399F124FF193052481487EA4B5DF
2226FA456AFDE7E8C55598F5071DA3BE88AF37F1865205318F8D6FA3F3F79D3F
7BF88B9F43BA56715A44A482E7F1EC4AAEAC111A227BB8641074F3C40348A971
FC9EEDEF224AF06DA3389C4C47502F6C0A5C7AC4E108199200022BF7E36F011C
E786B9DE5D38E71B89639952EB1767A943859DF056FAE5F8CCB61D807DCA0760
A4155754FA8FC3C33D3489E382EAB2D5675549695B691A1756D24894237C31F1
4C854D9818EFC3AA839F6ACFF74A75BFECAE593494FCE75E0CBBEF93DB36C77D
BBBD5C9AC37279F2DE4C465E2A15B9F4D31C9A23B24E92635AC607C077E68A6D
F04F6F88B3D7B26D663772C19A895B351214F3D07F8488A9F52FE5E9E3CDB675
684BAA38FA372ADB51D3FB8C091AAA8490B7BE5AC31A80BD1A75D321C9F9BF25
4761761A012453EF3C052B9493DED64A4FAC8AD71900A44E5DDF0AA030F1F4DA
0AF4F423817F5BF6227F695D2832292621AE16B52591280A7585E2F7E9B18664
19BCCCA24F47E08AF1B204567A1E1D97D32AEFA1EF59DAA956B7D15A13CF59B2
D076CF> |
11521 <001C60D8A8C9B5EE3103810B1C4CBC1C33C866CA07582FD7F641E2C82
96B29639CB974BB0E16C954DA047900B167284552B2C79DC0CFA552023C7ACAE
413C356866A4E670C43D9690CE3B462A7B40E23332D63AC396806A16B38827E9
CE3955976E27D5AE0E15A454AE829B8393BEB13EC2552AA0FCE4A76562AC8903
9BDA20AE7F97B5CCD5BFC4EE31C5BD4CF9F60C77782E9C33C2E613AC724F5080
E4560F0FC973B5931A193D75851C39054B77870F4D5D1C3380F65F89E213F17F
583F977AEDE502ACA45AE76C50858F408FF5AF8C6ADE81A14DC0CA71EB5822C2
CE3186FF40E3A1A6CF63FD226C50304E2E8B59291B18620BC1A914D6029C7936
EF206FE224F522780ACB12E10BD825AB560F325E2BF588256B3946D> |
11667 <001C60D8A8C9B5EE3103A8BE6F42128B534489E0451374992A9F97D37
4F1B235D8B5FBA37D7D52EB6625D8980769F97E457D9842B74BBF906F3A3C991
19A7E31C40ED553A178C5D4D40B871AD76352D2047E32E1B972671021AB09B7D
6585AD015F645556D0C9938011EB88237D368F16A0403A75731B2360A42D72C8
DE135B5B285016D6D47F55A659DEB3174B66DF057878B4CAECA016DE2DCD7DE2
0061A73FB6E26606634C5931801F045704BFA054B2492D5BC73DEF93618FD640
E6E7551179D33C396D337C81BF99581145E33BF04793EED7DE338953A7DEDD25
7B57F035C29B5F38DFABB37AABA7F967D6F43D16614C0AED1B90735B284A436F
F66F05F9FA98717AD5566856FB7DB7BC20C61AD1184D9B02BB621B32AE501882
5218BB6A9C4D7C00B97B36FFF4D5680CC940FF50143490B0C4F23561EF8AE8EF
DCF6066F453CFEEC7F31442005342F05EA694CDF0A38304894461B08AD1704AA
DE790F7EBBA177BB47243E8> |
4649 <001C60D8A8C9B5EE3117D90B65A5F5982CB071F3902903F002B64072B4
894123B370B1BFFB6D31F5D85716E5106AE524A7EC75A2CD9CCFCFB8B2C5E2AB
7719B91D3854BB51D252873C7236B38B5DF0C30590C9C02AB0EE6B2409D0F3F9
F739FF0FA6CFBD9AE3F294547EC36DF55D83F5FD603B199F19A0952F1353141C
AAB89DAA8849B61E904F405D3BD59B1591678886F403F7801EDC8469C1CBF0E3
7C014DACCA8D8A4859F8334F74CF2BA6898E3F81849A398AACA1DA3DAE8215CC
76EBBD88B20B336D066E9E0CFF237D88580EB1D262BC0251E8EC5C76BCFF8727
1F27988A3FC32B43F6D9722C22D1D9578792D7D437CF556C37E03F1B44AA9CC8
3912DC92767BF4B2684CF71FC564504181D61ED1DEA8A80F6F2D> |
8708 <001C60D8A8C9B5EE310D3784F978A6DBF1E5548E6C793EB5EEBED114CD
A92EE72DEEC16402312B16AD73B6CFF1AD7A8AEED1E1C4860BED60788DB8D138
E0AD36C7A318EF62E469D1F8FFBB8B4399B2C20FAA4EA63A55F133EBC162DC68
231709C85D1A594449ACD4C4AF9A60AB8076789CB49093BDBE7527C2C337BCC2
4F2E47B5C40B2333CB4D676B58B709CC8657904ABBDEF10F19A5C23C5470E21E
F1DAA69DBE16B16EBAD50EE920AD8D45AB311CE86CE83A00136E136166A336> |
4502 <001C60D8A8C9B5EE310D507B215284A89E0F3CE730DE32E4A31582F802
F555FEEA6ED98809A887C6DFDCB9B625D5289D397ACF7E381CB8BDC16D773727
2571411CEB9D72E49C6CCEEE93EABE05732D19A445B427ADAD321006DEC6EE78
A2325F3EA50684BA91AE23D751B6F80F81C7DC65E110F73FFE9FC8D8E617B967
9EA2EA208B8952F0633A61ECF76C2F5AC197C3310AAFDC93953E60838E3BA793
A23FCDE273E3FF629DB9167093A93D7D6BDE7B82C244515C7A97A8CCA9D4F834
0194D8D9A91A8206ABAC4598E1B6F698D53FF3DB43AB12F4E0D016BDFCBEBC48
CE2A63ED86ECA0FD5E450FD3D7C1E25C754765F2DC63EF0D93C900157304E1D5
648E646EF942BA2FD89243706A9A94EAE5DB1D06279FFB68C0546A842351AC74
4A7F74A3C40E7F26D94E07D3FA7474BB32482FB707CEEB04AA1ED89A91EDBDCB
0B050939605D9D92A09D> |
1168 <001C60D8A8C9B5EE310292B9E51E5377F83B2E63DE9FCB47A6A461BB66
1F0B5D69E2C378AF7379349F13D0271F0F94B08CFC59614361AB3F6762893CA2
758F94ED249637E75BA7C39407B26256A043797F86D81C785196BD06EB22B75C
98C073AD5BA2ABE5C6BDBF9A2A20269CE1FDD9E3DDAB1E10FE3A540FAA9DE26C
EB344C2E762CEC00189A060418142B0BC57EF1A66F6E3266E00F3377> |
!
end
end end
%ADOEndSubsetFont
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
25.5356 187.062 mo
(\0019\000\003\025a-\001-\223\022\)"\004\021\226\004\220 Q\015\207\000\003)
[-10.5598 -5.22046 -10.5598 -10.4999 -10.4999 -10.5598 -10.4999 -10.4998 -10.5598 -10.4998 -10.4999 0 
]ysh
115.656 106.483 mo
112.236 106.483 109.476 103.663 109.416 100.243 cv
109.416 31.7831 li
109.476 28.303 112.236 25.483 115.656 25.483 cv
140.616 25.483 li
144.096 25.483 146.916 28.303 146.856 31.7831 cv
146.856 100.243 li
146.916 103.663 144.096 106.483 140.616 106.483 cv
115.656 106.483 li
.35123 0 .583 0 cmyk
ef
1 /8 /CSD get_res sepcs
1 sep
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
131.736 87.1019 mo
(\022\)"\004\021\226\004\220)
[-10.5598 -10.4999 -10.4999 0 ]ysh
1.315 lw
1 lc
[3.9454 5.2605 ] 0 dsh
279.516 286.723 mo
11.016 286.723 li
11.016 199.843 li
169.176 199.843 li
169.176 10.901 li
279.516 10.901 li
279.516 286.723 li
cp
0 0 0 1 cmyk
@
0 lc
[5.2605 3.9454 ] 0 dsh
279.516 752.683 mo
11.016 752.683 li
11.016 553.483 li
279.516 553.483 li
279.516 752.683 li
cp
279.516 549.043 mo
11.016 549.043 li
11.016 289.962 li
279.516 289.962 li
279.516 549.043 li
cp
165.876 192.223 mo
11.016 192.223 li
11.016 10.901 li
165.876 10.901 li
165.876 192.223 li
cp
@
83.136 82.843 mo
80.076 77.563 li
81.216 77.563 li
78.156 82.843 li
77.582 83.5781 76.55 82.8461 77.016 82.183 cv
80.616 75.9431 li
84.276 82.183 li
84.336 82.303 li
84.336 82.603 li
84.276 82.783 li
84.216 82.9031 li
84.096 83.0231 li
83.976 83.0831 li
83.796 83.1431 li
83.496 83.1431 li
83.376 83.0231 li
83.256 82.9631 li
83.136 82.843 li
cp
41.676 295.723 mo
41.676 294.643 li
80.616 294.643 li
79.956 295.303 li
79.956 77.2631 li
81.276 77.2631 li
81.276 295.903 li
42.336 295.903 li
42.996 295.303 li
42.996 295.903 li
42.996 295.723 li
41.676 295.723 li
.021393 .33222 .5154 0 cmyk
f
1 /8 /CSD get_res sepcs
1 sep
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
76.3557 104.022 mo
(\0007)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
78.4557 97.6019 mo
(\000I)sh
[] 0 dsh
80.076 74.502 mo
75.516 74.502 71.856 70.722 71.856 65.9821 cv
71.856 61.3021 75.516 57.462 80.076 57.462 cv
84.636 57.462 88.356 61.3021 88.356 65.9821 cv
88.356 70.722 84.636 74.502 80.076 74.502 cv
0 0 0 1 cmyk
@
61.416 68.802 mo
66.696 65.742 li
66.696 66.822 li
61.416 63.762 li
61.296 63.702 li
61.176 63.582 li
61.116 63.402 li
61.116 62.9821 li
61.236 62.802 li
61.475 62.543 61.625 62.549 61.956 62.562 cv
62.076 62.622 li
68.316 66.282 li
62.076 69.942 li
61.956 70.002 li
61.596 70.002 li
61.356 69.882 li
61.236 69.762 li
61.116 69.582 li
61.116 69.162 li
61.176 68.9821 li
61.296 68.8621 li
61.416 68.802 li
cp
39.816 207.582 mo
39.816 65.622 li
66.996 65.622 li
66.996 66.942 li
40.476 66.942 li
41.136 66.282 li
41.136 207.582 li
39.816 207.582 li
f
102.576 68.562 mo
107.796 65.442 li
107.796 66.582 li
102.516 63.582 li
101.811 63.118 102.35 62.0991 103.176 62.442 cv
109.476 65.9821 li
103.296 69.702 li
102.936 69.822 li
102.816 69.822 li
102.636 69.762 li
102.516 69.642 li
102.396 69.582 li
102.336 69.402 li
102.276 69.282 li
102.276 68.9821 li
102.336 68.8021 li
102.576 68.562 li
cp
87.516 65.6221 mo
108.156 65.382 li
108.156 66.702 li
87.516 66.942 li
87.516 65.6221 li
f
127.356 149.442 mo
122.796 149.442 119.076 145.662 119.076 140.982 cv
119.076 136.242 122.796 132.462 127.356 132.462 cv
131.856 132.462 135.576 136.242 135.576 140.982 cv
135.576 145.662 131.856 149.442 127.356 149.442 cv
@
gsave
137.736 280.062 mo
139.536 276.882 li
139.596 299.142 li
140.916 299.142 li
140.856 276.882 li
142.716 280.062 li
142.836 280.182 li
142.956 280.303 li
143.076 280.363 li
143.376 280.363 li
143.556 280.303 li
143.676 280.243 li
143.935 280.003 143.929 279.853 143.916 279.522 cv
143.856 279.402 li
140.196 273.163 li
136.596 279.402 li
136.536 279.582 li
136.476 279.702 li
136.476 279.882 li
136.536 280.002 li
136.656 280.182 li
136.776 280.243 li
136.896 280.363 li
137.016 280.363 li
137.196 280.423 li
137.376 280.363 li
137.496 280.303 li
137.616 280.182 li
eclp
144.012 299.276 mo
144.012 272.972 li
136.308 272.972 li
136.308 299.276 li
cp
/4 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 768.104 ]ct
[0 26.304 -7.704 0 144.012 468.828 ]ct
snap_to_device
<<
/T 1
/W 64 
/H 54 
/M[64 0 0 -54 0 54 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
!WW6&_ug)E"U54O!sJc4":5DC`WHAQ%1Wm[$crJV!s9,J',2/m$ciDT&Jbcg(Dm\bbQIhH#S@Xd&K2T.
!<UCGr=K2A%36Jj!m^uI"8`Z5%3$8f!mCcE&I'!_+!;^N!n%2K"8NN3+!:Oa!mUoC&Hj!s,UEiK"8`2p
&HjF.-m],F"83<0)C$[W!n[VO"8*6/)Cd6g#LW_H&Hj[8/h@7^"8N&j&Hja@.kCbO"7d$,/MT":$f2!\
"7Zs+1c70M$e>FL&Hj[C3&q'!"8;od&Hj[H4$3Ss"7?a(4ZYbe!osIW"76['5<qM$!nmbC&HkHh77IOF
"8)c_&Hrq77n#lKg]QjS"Vs<n8P0'L"7u]\&Htg$9hnIhh?3!S"\VNc:.bo]"7lWY&Hs%L9i=mthui-S
"Vt';<`9Cq"7cQU&Hks4<`fF_"6C*u(0OX@>7:$)nH7ha"Vt6@>[%9j"60ss(0":>?39g&n,qY^"W:ZT
@:BW,"5sgq94)(:@KQ?-mfVJ["W:iYAS)#-"5a[o(2%;pC2<_LmK;;X"Vt`aChdbN"5OOo(1_)qC't+G
m/u,U"W;2rE,c-L"5=Cj(34>4E<$C6"54=j)09nBFpm^?fb"6&G6<)8Fpma@f+A.0H@(#@n,q;T#8%ht
G^4]BIe!Tl&Hs%rIt3(TncRPWr=K5OGBeXi#7'l'e.Dm#K7nr5#7'o(g(F/n"W;rJKnt3N"4@bc(5%Ht
L^+1Z"5=F^&I',1Mi<XE#P\DJ&HkaaMiNkm"5FL\&Hrr&OHG)!q#c-~>

%%EndBinary
grestore
np
grestore
110.436 143.502 mo
115.836 140.622 li
115.776 141.762 li
110.616 138.522 li
109.889 137.999 110.54 137.027 111.336 137.382 cv
117.456 141.222 li
111.096 144.702 li
110.386 145.046 109.788 144.117 110.316 143.622 cv
110.436 143.502 li
cp
93.876 299.142 mo
93.876 140.562 li
116.136 140.562 li
116.136 141.882 li
94.536 141.882 li
95.196 141.222 li
95.196 299.142 li
93.876 299.142 li
f
144.156 143.322 mo
138.636 140.802 li
138.756 141.942 li
143.676 138.342 li
143.796 138.282 li
143.916 138.102 li
143.916 137.982 li
143.976 137.802 li
143.916 137.682 li
143.856 137.502 li
143.796 137.382 li
143.676 137.262 li
143.496 137.202 li
143.076 137.202 li
142.896 137.322 li
137.076 141.522 li
143.616 144.522 li
143.796 144.582 li
144.096 144.582 li
144.216 144.522 li
144.456 144.282 li
144.516 144.162 li
144.576 143.982 li
144.576 143.802 li
144.516 143.682 li
144.396 143.562 li
144.336 143.442 li
144.156 143.322 li
cp
153.996 204.762 mo
153.996 140.742 li
138.336 140.742 li
138.336 142.062 li
153.336 142.062 li
152.676 141.402 li
152.676 204.762 li
153.996 204.762 li
f
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NCAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NCAAAA+TimesNewRomanPSMT 3 GetGlyphDirectory
80 <001C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE1116793
2D24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA181
6E9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747
A2556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68
FD574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F249
107C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D1
8CE6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE95
5617323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D
987ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FA
FEC679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE
82B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B51
7996> |
41 <001C60D8A8C9B7EF322BE6235043C5A7A6ECCDDDC390BE41D3E01CEDAA91
CB335118BB7C10CD87A1A789356A0826D033ECDD0352DC64AE55B383C11F3EB1
8A6F42CD78A260CB051779A3B4D92350DD65D27B671C1609DC36FBFF44C40F44
FB014C0462CFF40EA9650CDFB895B99B69FA8BD3EB8152DF452581818551FCC7
745E9E79F62FD5E1668E4EFD8B2F33AB5D5ED30AB06AFD78EF98B1A68AA26FC8
B4D7DDC1356637FA048F199EDF19A428> |
68 <001C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC55
0DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C
6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB
333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385F
DB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E
70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A298
95DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B7
37B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE327
2EF1EF1464C3F0D45D7CBB8749AF571E09> |
!
end
end end
%ADOEndSubsetFont
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
148.656 159.402 mo
(\000<)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
150.756 151.842 mo
(\000P)sh
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
104.376 158.802 mo
(\0000)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
106.536 149.442 mo
(\000I)sh
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
100.476 61.4821 mo
(\000\))sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
102.576 55.662 mo
(\000D)sh
130.536 113.382 mo
127.536 108.102 li
128.676 108.102 li
125.556 113.322 li
125.436 113.442 li
125.316 113.502 li
125.136 113.622 li
124.836 113.622 li
124.716 113.562 li
124.536 113.502 li
124.476 113.382 li
124.356 113.262 li
124.296 113.082 li
124.296 112.902 li
124.356 112.782 li
124.416 112.602 li
128.136 106.482 li
131.676 112.782 li
131.994 113.445 131.181 114.124 130.656 113.502 cv
130.536 113.382 li
cp
127.056 131.442 mo
127.476 107.742 li
128.796 107.802 li
128.376 131.502 li
127.056 131.442 li
0 0 0 1 cmyk
f
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NCAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NCAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory
69 <001C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7
E8F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD
9AF110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D399
924398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D6
603C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A
83F23AED1F56FC130F21> |
!
end
end end
%ADOEndSubsetFont
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
139.416 122.682 mo
(\000\))sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
141.516 116.862 mo
(\000E)sh
192.996 64.363 mo
198.216 67.483 li
198.276 66.403 li
192.936 69.403 li
192.313 69.608 192.673 70.948 193.596 70.543 cv
199.896 66.943 li
193.716 63.223 li
193.536 63.163 li
193.236 63.163 li
193.056 63.223 li
192.936 63.283 li
192.816 63.403 li
192.756 63.523 li
192.696 63.703 li
192.696 64.003 li
192.816 64.183 li
192.876 64.303 li
192.996 64.363 li
cp
148.896 67.003 mo
198.576 67.603 li
198.576 66.283 li
148.896 65.683 li
148.896 67.003 li
0 0 0 1 cmyk
f
191.796 185.922 mo
197.076 189.042 li
197.076 187.902 li
191.796 190.962 li
191.676 191.022 li
191.616 191.142 li
191.556 191.322 li
191.496 191.442 li
191.496 191.622 li
191.556 191.802 li
191.616 191.922 li
191.781 192.148 192.077 192.185 192.336 192.162 cv
192.516 192.102 li
198.696 188.442 li
192.516 184.842 li
192.336 184.722 li
192.036 184.722 li
191.856 184.782 li
191.736 184.842 li
191.616 184.962 li
191.556 185.142 li
191.496 185.262 li
191.496 185.442 li
191.556 185.562 li
191.616 185.742 li
191.676 185.862 li
191.796 185.922 li
cp
165.816 239.622 mo
182.916 239.622 li
182.916 188.442 li
182.256 189.102 li
197.436 189.102 li
197.436 187.782 li
181.596 187.782 li
181.596 238.962 li
182.256 238.302 li
165.816 238.302 li
165.816 239.622 li
f
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NCAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NCAAAA+TimesNewRomanPSMT 3 GetGlyphDirectory
58 <001C60D8A8C9B5D6EF4CB383496C62617B8BD4FD4927BDE48152A6FF6216
428592F5AFA3D18F24C53020F77DA565222C98E1F496EC6F2EE4EB22E43F233D
8D98DB46EC3FFD79A8A395ED6571E9EE52C2D64F4FF1F26706DF3355CFC8C908
EAA86ADD43E05EADD0D2F7D3DC578FF752F1D87291BBD55E577C117CD30BA304
9BD39543241DD7DCD07617FA8A494E710E269F478E2E95BEC8AA7E710ACD0612
E8921B3DAA59E93D8AA4276CD08DDB3A9B4D762893C74EF3108E125B72E190D0
45E652A0B8E8729169D251777FA84DD9EC852ADB1FB8FFEDFE199F837B9E862E
992403453891> |
54 <001C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC
49387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F
8D7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5B
FD7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEE
B6B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E6453375
18CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE90
4907DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3A
B444BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80
CE13D22435E5FCC1B5A000DE> |
38 <001C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA
345031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA
9DEB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC942097
158DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC7
399ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B2
83409DD22AD16B7DD28B54D5FC454C> |
!
end
end end
%ADOEndSubsetFont
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
211.716 194.442 mo
(\000/)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
213.816 187.962 mo
(\000P)sh
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
212.856 79.7219 mo
(\000/)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
214.956 73.3019 mo
(\000:\0006\000&\000/)
[-6.46869 -3.77838 -4.5744 0 ]ysh
300.936 541.903 mo
297.336 541.843 294.456 538.843 294.456 535.123 cv
294.456 531.403 297.336 528.403 300.936 528.403 cv
304.536 528.403 307.476 531.403 307.476 535.123 cv
307.476 538.843 304.536 541.843 300.936 541.903 cv
0 0 0 0 cmyk
ef
294.456 535.123 mo
307.476 535.123 li
0 0 0 1 cmyk
@
300.936 541.843 mo
300.936 528.403 li
@
300.936 541.843 mo
297.336 541.843 294.456 538.843 294.456 535.123 cv
294.456 531.403 297.336 528.403 300.936 528.403 cv
304.536 528.403 307.476 531.403 307.476 535.123 cv
307.476 538.843 304.536 541.843 300.936 541.843 cv
@
[5.2605 3.9454 ] 0 dsh
318.096 752.803 mo
283.836 752.803 li
283.836 10.961 li
318.096 10.961 li
318.096 752.803 li
cp
@
1 /8 /CSD get_res sepcs
1 sep
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
305.436 521.143 mo
(\(\251\025\261=\275\0128)
[-10.4999 -10.5598 -10.4998 0 ]ysh
[] 0 dsh
302.676 307.003 mo
298.896 307.003 295.836 303.823 295.836 299.983 cv
295.836 296.083 298.896 292.903 302.676 292.903 cv
306.456 292.903 309.516 296.083 309.516 299.983 cv
309.516 303.823 306.456 307.003 302.676 307.003 cv
0 0 0 1 cmyk
@
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WTDCKO+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WTDCKO+SimSun-GBK-EUC-H 5 GetGlyphDirectory
7481 <001C60D8A8C9B5EE3103A8976BABEC5B9C8FB8D09F7CF58DD37A569B5B
7A052DBCD016EC9A3B53E0B44C47F85DF90DFE3AFF5752A1394F6C42DAD47C95
C61151C08B729A9F4D1F2829D9327A42BD3BB29BD61CC5790B5624CBF6F37972
4032E1E86B2B80DE591C20A233712B2776B8E4CF26704274B6BD89C0C0785B7C
08FE45DA9B0D3F87A51D7431C9182B19F04C842BC08A024693569CAD293E825A
0AEABEDC9F5AC72485873E6DE5C69C6A889607465A9F82670E82C913A478> |
7032 <001C60D8A8C9B5EE310D1EC848450593AE4C36D61A0898A0BDADECAB27
95D4FF56CE4FB63BC19B7232D35652D1D8132909A38A03E219418D342AC2458A
0854ABEBE9FE940637B5FAD70DAF4BF50E77FD2B4659A053806301EA3D163BA3
6C917B27F354AFE00C9F3C572E089573829810989296F42AC5CD829B1C1BBE82
F451473D52A8C0974E3DD3B5360208180FDB6604685B6F0FCEFB33AEDB442F51
3A818B7D6E11E4E0A1CC70A36D8A2C675093B7267470A7985128B8AD31ABF677
049BCA4911D5FB57A1E324FDA79A6CB109147BFF6FDBCE03C816B84FF45CF03B
50571281C79449ECD26CE21FA78AF3679ECE07DD0754ED8F0C47B10649F85569
F0EE316568C9D92F57E4F47B3B5C72E157A58B57405A7AB1C99A8C6DEA0D5B7E
DD0561A8E07CE34563EAFF62C57CCD3FF4ACCF62060FE294D24D6DEEA00B9C5E
8FE97603D96ECCA48DDA0BFEC22DA9EB791938BDD6B7ECB392F62908986197DA
9753EE26873FEDEBFD5F0A95C2F076B1A53317FED5EC09D0EF9175CC870470A5
740F9F5D0AED7CAA> |
5719 <001C60D8A8C9B5EE310258AB045C319BE5DEF060E790A660ECB8860E44
DAD18F4A606862373C5A161A6B5DA20247DEE4788B6CE434E69E6E11BBF62FCE
E1130AF2BDBAD5E9D72B2AC21ED4E32CDE29D72A1AEF131E81668DE685E51FAF
5C5B1EB2887948796324BC8C00DD155AC096B63C54C29AEC4A447240C638C1BC
0A9853AAE6A7AAF69AB18CC6E242BA2A90B56A31109625238BEC203D519B3818
3CC84ACE9E64F843A2A144309C498ABFA4078F4402B0CA4853FB8F3536DDC6D5
E198E19146D32E8AC6ABDB26F8DA228A50AF7EE1999A94A1C283623459D74550
A228A64F501D242DA133DC6A09A3CE4949D02D207868105AAFAA76751137160B
489B1E67660A0982ED908405B130A3DB8DD4B7705EA5BD> |
7920 <001C60D8A8C9B5EE310DE3F21CF7FE263E755DE2A8399A146091892D80
C2ABFBDCE006EE6849F802DD7CA8E37AC5C0945EA75BD008F438F9396C4977AD
17B075BD7BAD9D153A74084B5991CBD98796E1F142E2BD739F0B3C61DA2ACF3F
128E73708194852A148E84D0C50020086014D1D540538565A8C4C4595D5DC97A
6ADB629EB649DA60565161E1B12DDF21C818FBE488B9B5FF1866435E18A63EAA
F45E6F83AAA68EA05C5DC76E821C99FBC363A99781BB0AD69DD9693AAA58118A
8922E05C0BBA9D9C7264D2C21F43FDD6E6A75FB8FFFFD8A94E3BFB46C50F35AB
14C906FCD4B8A33490EE87E3FB46CA93A3893E090FD4525608A184F741D25858
A564E92FB968AC059047B52398F9DFEE9AE3A2E1F59CE3943202A93F74B888E8
DE86DF528D26D05BE26796DA9FC5193FB299704A7EC5BBAEB69B802B91861804
DD388602BB31CE26F9CB5794A02ACCE12AFFEDA9BD66E96963C355DB2D0D449B
40E7E7A2B86657E2FCF0AA7B6ED3D509CEFCC168> |
9083 <001C60D8A8C9B5EE310DF0717842374B5F376047ED7BB6DFD87B8297A1
811ED0EE66C4FD9674D28A18C43E918CDB7559E798E85BD0C4A9C8F6F9E0FFB9
DD4FFB952B81FD5FD0FB6F9DE54697EA13603357E1ADD3BC2A8666BAAB6BD98D
47B5D704CEF79DCFFEDFB01F639D24799AB86AA49C952EF69042129E85F4089F
27A34D139AF21EA7BBE0462872EE8180337561FAF3C57D9A149BDD53B595424A
BE22EC8E33DD9335D1B9389CB9E33D7DC86F6036DB8E2FF8ED3AAB753FF48ED0
32BD9C3C180584F27186623686F4EF50E967F66779F9AD9AF3AD09ACF8E115DA
56EA09AB2945D391A528692D916C5B9464A7D08A50F3212C75B10EB99454B399
5500D9684DF3FF8B1FD19E0D283B026FDD131E993E365766DF216DAA5B1C0B7F
AEBC51FE0DC3BC4F076244BE8E1C6478EB1AB2F776256F143BB345F6A2C422F0
621F8FA35A0309DE8D73F926CDAE951F2412BD941A5B06411C0DBD1F2DB6DE34
FD4EC6062321C925CFE91343BDDE680DA7015DB4D9AF024B53AB8B262CA967D0
5DC82003C4B6CCE3980223ACCD6D8578F30D96667E5571EF95C62C779EBD687A
BF023F7063D152E1DA606C0FC62A00B4454216BBD6AF5317C1A0C0A28FA549CE
CDBE3D605C> |
!
end
end end
%ADOEndSubsetFont
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
306.276 283.482 mo
(\(\251\025\261\0359\033x\026W\036\360#{)
[-10.5598 -10.4999 -10.5598 -10.4999 -10.4998 -10.5598 0 ]ysh
192.996 124.723 mo
198.216 127.783 li
198.216 126.643 li
192.996 129.703 li
192.756 129.943 li
192.696 130.063 li
192.636 130.243 li
192.636 130.423 li
192.696 130.543 li
192.816 130.663 li
192.876 130.783 li
193.056 130.903 li
193.176 130.963 li
193.356 130.963 li
193.476 130.903 li
193.656 130.843 li
199.896 127.243 li
193.656 123.583 li
192.987 123.28 192.241 124.044 192.876 124.603 cv
192.996 124.723 li
cp
30.096 208.303 mo
31.116 208.303 li
31.116 127.243 li
30.456 127.903 li
198.576 127.903 li
198.576 126.583 li
29.796 126.583 li
29.796 207.643 li
30.456 206.983 li
29.796 206.983 li
30.096 206.983 li
30.096 208.303 li
0 0 0 1 cmyk
f
1 /8 /CSD get_res sepcs
1 sep
WTDCKN+TimesNewRomanPSMT [0 -10.5209 -10.5209 0 0 0 ]msf
212.856 131.442 mo
(\000/)sh
WTDCKN+TimesNewRomanPSMT [0 -6.8386 -6.8386 0 0 0 ]msf
214.956 125.022 mo
(\000W)sh
72.876 668.743 mo
72.876 660.283 li
70.416 660.283 li
75.396 655.303 li
80.316 660.283 li
77.856 660.283 li
77.856 668.743 li
72.876 668.743 li
.17334 .72665 1 .053346 cmyk
ef
302.976 301.182 mo
302.316 301.182 301.776 300.582 301.776 299.922 cv
301.776 299.202 302.316 298.662 303.036 298.662 cv
303.696 298.662 304.296 299.202 304.296 299.922 cv
304.296 300.582 303.696 301.182 302.976 301.182 cv
0 0 0 1 cmyk
ef
.877 lw
303.036 301.182 mo
302.316 301.182 301.776 300.582 301.776 299.922 cv
301.776 299.202 302.316 298.662 303.036 298.662 cv
303.696 298.662 304.296 299.202 304.296 299.922 cv
304.296 300.582 303.696 301.182 303.036 301.182 cv
@
127.356 142.002 mo
126.696 142.002 126.096 141.402 126.096 140.742 cv
126.096 140.022 126.696 139.482 127.356 139.482 cv
128.076 139.482 128.616 140.022 128.616 140.742 cv
128.616 141.402 128.076 142.002 127.356 142.002 cv
ef
127.356 142.002 mo
126.696 142.002 126.096 141.402 126.096 140.742 cv
126.096 140.022 126.696 139.482 127.356 139.482 cv
128.076 139.482 128.616 140.022 128.616 140.742 cv
128.616 141.402 128.076 142.002 127.356 142.002 cv
@
79.836 67.002 mo
79.176 67.002 78.636 66.402 78.636 65.7421 cv
78.636 65.022 79.176 64.4821 79.896 64.4821 cv
80.556 64.4821 81.156 65.022 81.156 65.7421 cv
81.156 66.402 80.556 67.002 79.836 67.002 cv
ef
79.896 67.002 mo
79.176 67.002 78.636 66.402 78.636 65.7421 cv
78.636 65.022 79.176 64.4821 79.896 64.4821 cv
80.556 64.4821 81.156 65.022 81.156 65.7421 cv
81.156 66.402 80.556 67.002 79.896 67.002 cv
@
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WTDCKO+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WTDCKO+SimSun-GBK-EUC-H 5 GetGlyphDirectory
7136 <001C60D8A8C9B5EE3100C5FAE52DD80AD0A36A265B20229A4C451E2440
A19A87461D007560B76AADBD298D3EBDFD4B6F0D567976215C0B468537F7BCC9
4C6A538B0E76FC646F036EC71F49367F3696977438154F176355E22918D9D2DC
05AEB2149FEBAB8694EF86277F7014B202D0407189029AB18A2CEBE97582BD03
B236B4B8BA4BA437CBB1B5FDD677E5A1934C627C81B37A166B367AB44A7AED50
8E452F8947445EC619512FE9E8E557BE8CA1AB2F633DAD33EED99CA2F3177E92
9517D7D07DE6C05308160A1F98ABE77FBF90ADD8707747A5EEEC49C743F418F3
7FA6C63CD740A5B3CDAFFF2DC50CB4A424B3F96FF8ABC3112671F132AEFD9ABA
9A19BD5374C93038196234B07657D7BE9DBAF4DB865E561BEDF4CB874B58C71F
B31C897DDCB7E3BE8359CE90F29108CC600C7C5ED53A746A6386400F84388850
790C7FE32CC04DFE7551633CD675252903DDD283C1BF42924DD89AA556568E14
87D42D6AEE8F7ADAB2FFD751083D7E37A2D0CB7D6CACBAA8A7300565961903CF
2D64D7E74F12F8980DE587364C085E7EA73082E9E97EC4B38B0014B2B8BB8AF2
E2540A5486042983EABAE3351B4952D0FA> |
19499 <001C60D8A8C9B5EE310D1A001AB1117836A3BA50E08A6829B4E3A56D7
0A74AD21A3AACB97957678B4FD6EF1C443033B76EEAE0BFA8BA887665ED6B46C
C17633C85406DD01F9629F08B92E91709008BE9FD8BA9995AF84A34B1F39452C
7CA3ED89822A431E1F1D32C4832D4326487981EF0AE9C63D90B0567E40567F28
AFDBCC714F93BE4B055D7A91C57D44C62A8FD1614175DBA9705D8D052A787A7E
AC38E67E79624DD43AC3966F591BBCF52708A5A883A93DD3C7E6474BA3A29BBE
85963B4FCD3B2BC1AD1A5EE6A13C4743009B5EEB77A2F7DC1B55192F0CF0CFDD
1FF90CADB014FD4102887BBE8C5FFE5FA46C8BCD312473CF38E229378B29D05F
0D90F40F0B5BE5EC014EE721E83F2A989481E45F4> |
7072 <001C60D8A8C9B5EE31020F8211AF203B409BE69AC0B68B446FD4EE9ED1
4721CF2A9A21B88FDA7D8E37AAC73F35FE4084653B0B95E319EB8703812C2A0C
108D9092AFC18B1940DD2ED6AF36C6F1B98EEE247BC4A963065CFE72FB103B46
B523DBD7E07735C163D7413F2644CC28C6F92F85D0B39EA0D65AF3B4E4B78F55
D6FC49CE4D92F27CEEAC3024668CF3462A4AA4E8573702C758E552BCBE8F0414
EB253C2B7733024541CAE5388922865026D9C7E8A9ACD0C992348DD3F8D4CBC6
0622E7F2161951BFF34079ED8A8E67A25A5F1E11988BE535306FD2CA77DD87D4
D01BE4CA3ECDB0FCD161FE2ECFD9293096DBD24EE4C0F004279A015A08EF5EA4
45F0121066CDD05C304BDE9236870555C977C75D4739DBB42868E680B64AA37B
AE2401958310E87EA4454855BF081799704840DF55FF247D5DC9A48274AB8C60
835B6E7E86EDB425F69F049E974A425D9839A7D556A7244FCF74B36520B3DEC0
C69225DD2EDA65064DE6D781BE0E52E6019E6CD07C93F97A3C40589A375F23EF
61599F097FDD1C00369B8831B391879B210A664175977AE6DF10243B958940CA
DC480B0DCF74760E5300BFB15AA118D97F29E6AFBA54EF39A4F382CE16DE5FC0
7DBA65943CF9E0383993316CFAEC6C9728F1341EE3C4CA8305EF8D7085C3EF7B
9983E5692DB195A932D80484D2890D19> |
6558 <001C60D8A8C9B5EE3102820CDF2059AE7E38A7DD18C49A35420DB1B091
122739BEE0A32333A53DA02BFB714548CF1E0E1DF60B241A30D0E145F324C703
AE6BA40AE7367E8F21EA0F895A1A694E0B1E2B95885487CB92CFDEC1E2ED11BD
F2A7DBB72F5444265C5E8CDEA08DFED3052C81B6BBB72AF4591784C70BE7200D
1AB7ED97BE9C64CF192F912D7354C4FC588801B4F164B79208B016F221435034
0368B5CEF714699166C38AC42E0CCA0FA1C090F3438CA38CFF62B62408B0FC66
1CED7047AA4C28E7CE51EF328B4A242D039B9E86CFF81B0EDB18BD659F822BAB
9AB06551093EE0FE1EFA44BE7E8A9488CA8FC87D41DC769F16898A16C300C034
E8999E3F32045143E4882EF8548B1BC02A3DF2D6FD591734B19E9905316166B0
88D1AE54C0DEDAFC3AE73A2E8B291D796FF1536C4768D97BC0D916F0190CF71C
0C> |
19702 <001C60D8A8C9B5EE3102B97204FDC71721788C21418704561C0F51DC9
044ED62DAC85D6A4619BFD27C7E023D2CC245A6B1BBC68B591115DD84D89F10C
A69BE7D577D29A8ECD5EEFAFE739C116D0D780DC68ACEA5B520A66E8619B445A
8D185AE168C5709C3D02BB9CED734550DA99BBC4826C6AE1552858208C34F274
57DD23E7D538C5FE2B01391991EAE06EE2087E18B4740DC864BB8386AC10EBF7
48F7BB5CFB19302A58001D0D2239B13C27D102B8C4E223870FEB7F74B15835E6
8309865B717F924F2071997244EEA04B682CD35B1DB8A0938843C7E5A3994522
A1B394DC40C4524B39E3A559E3CA1E4D498102A0B7FC294DBD5491684CD868E5
6EA3997BB137DCA3EC93E7CD66ABE3AE5F29D048A5CAFCFE95CF8EF478A070AE
EFCE24024A812AF6772C1D972AC9A2D93B152FFAE330A1C450790806B0D1B879
B90536051D6CD17790A1D9C98B691D7> |
!
end
end end
%ADOEndSubsetFont
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
78.6957 738.583 mo
(\033\267\035\\)
[-10.4999 0 ]ysh
139.896 670.244 mo
(\033\340L+)
[-10.4998 0 ]ysh
152.496 675.524 mo
(\033\240\031\236L\366)
[-10.5598 -10.4999 0 ]ysh
gsave
123.156 714.883 mo
159.576 714.883 li
159.576 678.463 li
123.156 678.463 li
cp
clp
159.612 714.956 mo
159.612 678.332 li
123.108 678.332 li
123.108 714.956 li
cp
/5 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 768.104 ]ct
[0 36.624 -36.504 0 159.612 53.148 ]ct
snap_to_device
<<
/T 1
/W 111 
/H 111 
/M[111 0 0 -111 0 111 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcX[."Tec/"U545!Vug*!XK)>$OdIS%hK<c'DiIP'c%T&)&aG6*?H:F"1J:7#U(B:&/4jRl4aCI,pjuf
#JpKE.4Qi!/`RQ<'Eg$,0/,-&!<Y)51c<Sn";Ea&2Zh>,"#r;%43/*<4=33Tq#T=Q!^@#2_%Zq`$pa+Z
n,WSV67okb!Yn'jh>mU@!C]Jf'ELQki;isM&+L@Q'ET"@9'$'T92$)Y'[m`s9hsjP!=2KH']Kf-4&G/B
!Dub.'^ue:;sOGb##qZ<!Yc>Km/[5R<i?]4=7lUj!<>fk'EKgOn,WPT0)63a'ED8)!<=t?'YP1\=n2Ro
#Sku+bnL.]nc8_p`t[>D!F/:h!<?E7'^QM6?Ln0t3i<\i'EAL3!<?)n'EDM7!W<$!)57fF@.OC!)>4cH
'EDP4!<=#"'YP1\@.OC!):fMH'EDP4!<="W'\sH'@.OC!)7C7H'EDP4!<="7'`A^G@.OC!)57fF@.jX#
!<="3'EDP4!<=#1'Wr,M@.OC!)>t6M-"6*R`=r=f0DlLa@.OC!)>t6N@L$Du'\3s"4<J,3'EDP;!Vufs
)>t6P@K?L@B!i<U'db[:AGd,A@.OC!)>t6L@f?B0#A6N9'EMl]rW*"0r"K-=o)Sh/r=f6@quHjlC2<MW
a:n\lD/T7P!+c!A!+>C!!#b_L!+Pd*!WkN'kS2_b!Z#`7q>gS,r"K-=o)Sh/r=f6@pAk=ME>mRGm1]YC
F*)R"!<?[.'EDP4!<=#9'EDV7!<[LQ)f3h7";H')GmF!C!+c!A!+>C!!#b_L!+PI!"9o3ZBRA>F"VkWT
6='`b!<E43r"K-=o)Sh/r=f6@li@9;I=?Zi(#fo2J/MO'JV*7i!+c!A!+>U'qZ-[7r=f6@k5br`Hqo;E
08'jiG?ccr'FPX5L.u98LeKgc7uHI1!+c!A!+>C!!#b_L!*9%!hZ4"@8rAReA<&qWg]7D9r"K-=o)Sh/
r=f8p!q$**!<A5Z'EDP4!<=#8'ED_$!RUoJOo,mn@.OC!)>k0LIfdpsiW0(C48]cm@.OC!)>b*J@(ua6
!<EFhq\0$<o)Sh/q\0'IOL"rh99^.f'EDP4!<=#6'ETmI!k&+1PoKN5!+>R&quHd8p_3aB;7HW-I3eS%
!+>C!!#bMF!IK7,!<JLQp(RL7o)Sh/ob7I.Qics^b5hYI*JX5$!+>C!!#b_L!F-B8'ET-n#Nu3E!<RXY
2>Ipd')WFD@.OC!)>t6N@Qf)5'E`QI-j&-(n,WWCR[Y&e'EMlbr"K-=o)Sh/r=f?C!K9D>'E]ps=\I*B
!<lg2KJ*!5".Yn`AGd,A@.OC!)>t6L@f?B/SjrAe"C,+s2kS_'"?;Kh%MeXN"B^T`!G)*B!+>C!!#b_L
!+Pm-!XDeBo+V?CTV5b""QKLd9;4QiPW\OO!^!0Qr;cn/r"K-=pAt3n!#b_L!+Pg+!Wo2omh?0fAnWM8
C1R^KU'OALquI3iN_te!?Dh1[=q2,Zn.Yp>E/aYp!+c!A!+>C!!#b_L!+Pg+rW*'kTd8_6">3qA()>pF
!iW(&q#LJ+r"K-=o)Sh/r=f6@p&P7[Wc1l4'[dZt40(B#p&P/(r"K-=o)Sh/r=f6@nc8i1X:BdK']g#2
7WY[eo)Si%r"K-=o)Sh/r=f6@mf<SVOrgbP0&mZB'Ef5UYbdWR!<?[.'EDP4!<=#9'EDV-!=&iXXg*,(
CDQ4M#8MHgF0dloN;*GF!<?[.'EDP4!<=#9'EEgG!>^]Y['d#C6<1J#[jF\VXLYoD]=`]B9B-$RU(mP?
!+>C!!#b_L!,J\;!)EG+!+>L$rW*!:r=f9K"g.k+EVpLN@.OC!)>k0KEVfdE!<Ghfr"K-=o)Sh/r"K1%
NU-\b!<Bh1'EDP4!<=#7'EP.Th#Z(-!N/$V'EDP;!Vufs)>Y$J^5fQ$!Bi(3'EDP4!<=#5'EJeK[fHOo
E#&0_!+>C!!#bPG!YnX"o`<&5!H+S)'EDP4!<=#2'EW'H!p9U:!<U$O0(otZ@.OC!)>"UECMHMq!U9[e
_+C0h'EDP4!<=#9'EJ\np_3cA\W4i6quHjI>!)No!A;7e'EDP4!<=#9'E_g&R2,K2")NHIN6MA*5H8\?
pCmTE!Q8OH'EDP4!<=#9'EhkG!=9\;'Eb;8#trbK"2>20HhJ-V4%u7IAGd,A@/0j#!<=#9'EDVA!<S0#
`UjiJ'=,Vm0oOlh"I?'uLf3jZ!^"GcrW*"0r"K-=o)Sh/r=f6@r;d!$!kcVE'F,CSTs,R[+=Z[Y#Qb8<
$4@7OAejkN!h;iuquHe.r"K-=o)Sh/r=f6@q#LObOVRX*ob8)cW6)4PQ`^ab/"Ohm8LC2hBNE<,lkBL`
Yql.V!+c!A!+>C!!#b_L!+P['"&UF50'a5.'E^h6.SKO;!+c!A!+>C!!#b_L!+PR$".#N^bha'('E`-a
8-8Gb!+c!A!+>C!!#b_L!+PI!"A@"b>(tQB">pZfK8oC%!+c!A!+>C!!#b_L!+P9q"cc_cRqif"'F#:r
^:.1,5OAIOAGd,A@.OC!)>t6L@cd\"#*L-:^!D26<&SsE48]d$'72=MW6!>p<J+&_9BQ<UAGd,A7JHo]
!<COG'EAWr!<c&<"J5bL!<A;\'EEdW!<=tT'EKJ;r;j2)!1Ng"!7LH>!5SLH!$U_1_>sY?r=f8I"nM`p
8Gj/&LPt!idfBJ;(&\gHZLS"s!_rS,!*.;Fj8f9R`V^DMWUTuhCA\bH'l(Jao`5'qDu::MG=qB+!<U[H
'ET!n5ILRndtdo:rY,?Imf<FqJGU#]^5]W'!AG;d'EN[bo`=mi!N/$V'ET'"!k\O7#UB0[!N;=N!<?@#
'E]%KC.l>C!hrU/q@irg"mQ*h?S;-g!YMu/pArP?!_6EUq%NjFI-:S3Bm9=d"3`F*#O2?K!<Qe>:\PP(
LnEf1!<gaB'EcS"eX#"loDo$E.q/,c!@0J\!<H=@ob7N])juQ7f`;4KUgMctrY5,A!YqC3huNn;K8&k1
"aA>9+WpmK!<rT2$#3tU'Cun>(!##)!TF+]5FQNY'HABs1fJ%8g<Br$U'Q@/!BuNS5a'&s+^;&&)p<d#
'EW;bVWe-M!<SF'(ul;1($$&24$"a@f)bdM!o0l@b7k&KOf^C_!<]&(YD2uif+\?&CY5ON`;p+#[DEkf
neCC(";%>)bt?pqh#Rc_5c%l*UK/4JlkB]KTW^#RX\K)E!Ta=sMe"5eH'![.$WY!Zb+2pEeX.H70m0i(
Z2oI~>

%%EndBinary
grestore
np
grestore
gsave
181.656 714.883 mo
223.596 714.883 li
223.596 672.943 li
181.656 672.943 li
cp
clp
223.692 714.956 mo
223.692 672.812 li
181.548 672.812 li
181.548 714.956 li
cp
/6 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 768.104 ]ct
[0 42.144 -42.144 0 223.692 53.148 ]ct
snap_to_device
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcUH(JcUH(JcUH(JcUH(JcUH(JcUH(dfB[T!sAc3#7(XG!Rh&M$4H_>":YhO&.uSVdfBF]oaCp9'GVD"
!Rh&L&+Bu0(Dn#.`W=Nh!"/'$"</<c*<OCbdK'=hkR7P8+<_rT!R^uK,NB17,UFcbe,dqt!!N0-"=P]K
.kKup">)5Z0ETo.ciF,$q[<H[r;d!V1c72W$j/FJ3BGssciF//%JpP64Sf']&Nr<B%I=K+%7!2]6K/$l
!<>La$ii]g!<Yb["\7ke"%Z!?1Ze_`!<<?$$iioi!<Ytg9ht!_""[5846lpl!<>sn$ij/m!<Z4u<)r5m
":[(d='4qmblIfIq[<L/>Nu4k>[:ZClO3l'@:Ea=!R(QE2#@[]AEEmq!bEfk>3cS!AnPdkq#SY>!,DB>
!%Hn."'\VpC[2B3)f0A/!r`5D!<GM8q[<ICh>m^@E,fpa$j(KlFT?U.!<<K($is]:gAqG$G^4U^m0j.,
%"'@L;U5@DIesNR?If,ZIt3*%nI5:'""f.Y9@<h@L&28Y?.&`UL51SAp'gX'"#gBQ7IU?A!<>1W$ijPY
!<a!lMi8,3$j7#(5)g0I!TsI`3Vs3b<QY=ENfOC+lO3kR23B]j!TjC_P5>Xf<5nq@PE]f1lO3i[Q<4"c
joGJaQhq0k;o8V<640*6lO3i@=TRUb!1E]m!DZP-!<YACR[`^R!([(ljT,@Oq[<I!])`$90JY74ndGR.
:0H][!1iuq!)0j&"",EA,k_ZG$il7L!<HD.q[<IrZN1.P+`nh'%/^M6IHU\3TDK#s8$;ps!haCH)[uTP
!28TW!)!+s!26Fo!29I%q[<J"kQ([!q[<HSWrW5%V#(Q#?i0p+&W.=n1]X'B$igFK1]]UklN%%f!N#Z%
!1Wof!N(7C$j$l1GO>M2!<@9>$im4)!<FRHV$m>WmfE@f!-J)H!1<`d!(3Oj!3,Ggr;cp#F8H@G"9&<$
&#0O5Nq*5K!<@'8$irmcrW*#!UC7.!o)\^h!%IdR!(m+i!32e&!2];gq>gSoq[<H]r;cnuq[<I\Z)[j`
q[<J$o`=mi!GPa7$ii*^!<B.s$imB6!<>C^$im-t!Vl`rXnrM,/GoMKWr!2)XK_d+5l1riV=t#c!<B;"
$igM0!<B.s$imB6!<>C^$im.!!VZTpW;?u'6i6rbWr!2)XK_d+5l1riV>1/d!<B>#$ipf!quHetq[<J+
YlOhiq[<J$q>p9j!3l>/!&=?O!35o)!3G\k""+kf6H&s*5l1riV>C;d!<BD%$igG-!<B.s$imC$!<OrI
Q2M*m<K"'%!<>C^$im.%!VHHoGI%)S!*B$u!35o)!3Gkp!je%!q$[=.,q$h9!'pDi!2]VpoDns!q[<L5
=Si+!Wr!2)XS2_r0U;;>!=O(o!<>C^$im.'!V6<l[JL@4@JU!)Wr!2)XS;es@rq5M!Md*I!<>C^$j*7+
!V-6k\,-R6@ep**Wr!2)XSDkt&\.?>!(kB8!'pDi!Mohf!<JpAq[<J8q>gSrq[<J+q#LJXmgK2EblIf0
q[<J$nGrUqq[<I:q#LJqq[<J+q>gV@2u3pb%4#Npq@!?DblIf0q[<J$nGrX$q[<HAq>gTtWr!2)XSMqt
MY[_b8Tk+8]8ZUq!=_*8!<>C^$im-o!<AD^$iju<!<N9&Wr!2)XSMqt[JL@5<C6Wb!OJ-i$imrc!<>C^
$im-p!<Bb/$iq;]quQct!35o)!3H"t!!`</!5871!##/;!&)Uu!'pDi!2]5e!/LF[!,VQ6r;cnuq[<J+
q>gT1q[<IQqZ-\+q[<Hjc2do1q[<J$nc8a*q[<IAr;lfs!35o)!3H"t!.k"U!&XQR!5SI?!)1Z=!'pDi
!2]8f!>.6e$ilt"!W)ltWr!2)XSMqt.JjMSJm80S!N!+!$in,h!<>C^$im-q!<C"6$j1PP!<N#t!35o)
!3H"t!20/s"Yh\3!YB/E$it]:c2do1q[<J$o)Sj/q[<OJ!<Mus!35o)!3H"t!<U48$iqF`q$[6tm/[@l
9SLG3-g(L15l1riV=O]f`qp/FFTM7<!35o)!3Gts!-R`=!4;.p!<SG_$iq=[kQ(ZKq[<J$oDo!!%JpP6
V=sujWr!2)XSDkt!k7\.!''?H!"\r8!6=:(!'pDi!2];g!%RjS!.=J@!35o)!3Gqr!BO'K$ip`6mK!=/
q@!COalrg+5l1riV=XcgU&,5u-2%?>Wr!2)XS2_r4Lk%m!J@-7!<J']q$[:>;X+8_5l1riV=Xcg8,Nbr
%"7gM!35o)!3Gkp!aC+*q$[=F10ErF!QlMY$in*.!<>C^$im-s!<A_h$j$hh;YC+kWr!2)XRlN",0RG/
$k.//LHFl(!=>^u$ipfslN$uNq[<J$o`5':r<r`9$m,'B!35o)!3GYj!F&Ie!<Ee1oF(bc)XIJ)5l1ri
V=aih:&YS#$iktR!<B.s$imBk!<<2m!<<<"$ijK-$igLu!<>C^$im-t!<^SA$k3(C!&4'H!35o)!3GAb
"A@$DPr/18!!i?/!a5\#q@!@rm/[2Pq[<J$p&P6@$k3(C!B1)Q!<B.s$imBn!<L:jr<rZPp]1DV%JgJ8
FTJ>Eq[<Ka$17fo5l1riV=joj<"/[5!!Vuq!35o)!3GGd!P+Qo$ih%=!<IF?q@!?frW*!Zq@!@GmK!;Q
q[<J$p&P0?q[<HooDnrlq[<J+lN%"m7/@;mHW0hC!O%jd$it>Lr;cn,q@!?kmf<DRq[<J$pAk8!q[<K7
7J$T\Wr!2)XR#rgboHKe!FVf(!<KVSq@!BZ;Z$Or7@3l[!?XAl!<>C^$im-u!<?F&$iiQa!<B.s$imBr
!<E7Dp'_(h3WW>(q@!Ci3r/jWdJ=7O^[M7(5l1riV>(&l!RgiR!']uT!35o)!3GPg!1<Be!\mS'q@!C4
VYC/lRedEm+n5R55l1riV>1,n!<QX*$iiH^!<B.s$imBs!<?U"$ik)>$it^'pAk<'OS]Fe'@ZLQ!'pDi
!2]Mm!W`=5q[<K`&b?#'Wr!2)XR?/jT6pDC!Rt<E$ijc0!<@QE$j"l[o)ShVq[<J$qZ6Zs!1`op!&a<J
!35o)!3GYj!G+1c$j'`:3V3^[-1_-;JbfcTOn/SR5l1riV>LAm!<?[-$ilF\!<B.s$imC!!<LY.q@!LC
63.)ip'^uQ!qQEn>K-IJ!@Z+_!<>C^$im.&!W<$">?^n4!&O0H!35o)!3G_l!OdCP$j!+br;coHp^@0g
>O_^p&.SLF!S;Pg!<>C^$im.'!W2ruTDK#s`:3j.Wr!2)XRcGn&_6^d!Lp:j!<GM,q@!D(G4,G3')E":
.J3]A5l1rkV#^Vo!<>ah$ihgJ!<B.s$imC#!<<<"$irnlq>gVWB)E&<2OWt6!R2ne$isNcp&P.Yq[<M%
!VufsC\nM?_=7O+Wr!2)XRlMn<r*4*%;>M;!QmA#$iqr^li@-))uC$EKb=%[!'pDi!2]Mm!'L,e!ILR2
!<B.s$imC%!<@9<$ilF`!<h&+$Zqg%!<?0s$il4[!<>C^$im.#!<@*9$inoL!<E5$q[<J+p&P3?)u9sC
-.r;"&O6.$!IGj^!<>C^$im.#!<@-:$im^+!<N9&Wr!2)XS2_r947T)!PSWf!<K&Lq[<M#;Y^=n5l1ri
V>C8oGB3Qh!4;=urW*#!q[<J+p]1D=;#1S$[o1cX!&FBZ!5SC2!'pDi!875M!-nAL!O>i"!W<$!Wr!2)
XSDktBgDM'!G8[g!<E7Jq[<K7NVWYU5l1rlM:RHorW*#5q[<J0oE"jj!35o)!3H"t!Ee(P$itFldfBIb
8G`erPoBN#!'p8e!eLSMq@!@5o`=pj!35o)!3H"t!%[mS!A.C#!<@oO$igM/!<>CQ$iq;.p&Y!j!35o)
!3H%u!%IaQ!=_EC!<E6Cq@!@rquHd_mL0*0p&Xsi!35o)!3H)!!@eQT$ihs+!<FBPq[<Ka48f0[5jo*^
8?_agp]1Apq[<J+r;cqV>5AX-(sE!\?2=s0FSu4?5k#0_HO0?HpAk8oq[<J+rW*$Ug\M<Z^N[j%!#58<
!(6_d!'p&_!HK(P!VQNoWr!2-X8r>_K),lV`h^`X!BOTb$j:W4!<GI_$j4l^c5Z]j!f9OGpAspf!35o)
"0;MNN;<q``7W-3!!rE0"4dJR5l1rq495Is[+n$A&bZ7t!<B.s$j+^M\+pF4VrJ!Ph=I<?'D`+=^/#jJ
$iiEY!V6<lWhTt&4R`CB!<B-p$iiE[!V$0j[A+-1Nq*5?!<?f/$ij,p!Ug$i=N70G!8d;Jm/[53eYilW
/MH\rl2^oqXfD^._A`"HJcUH(JcUH(JcUH(JcUH(JcUH(JcUH(i;nH~>

%%EndBinary
grestore
np
grestore
gsave
54.156 714.943 mo
96.156 714.943 li
96.156 672.943 li
54.156 672.943 li
cp
clp
96.252 714.956 mo
96.252 672.812 li
54.108 672.812 li
54.108 714.956 li
cp
/7 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 768.104 ]ct
[0 42.144 -42.144 0 96.252 53.148 ]ct
snap_to_device
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcUH(l2_%i!sAc3#LNe`#mq%J$k3[W&/!Rrli@/#',87t!YuRhh#ZmD!Z;mq]G1Jf*?O/?m/[50+Li-e
+X5qIm/[54,dnEh,pjMl!UTmg-Rea)!\"m7dOP;Kr=oAA#;,Wa!>I0M!UTmg0+Iam!\c>@cN+#$r=oMB
!?O$R2(eV=!@]ql!UTmg2`U[L!]`:_blIf"r=o;<quHj\4?`NU!@0kq!UKge5Pl/r5XEQo!&FKf!!rE%
!]r^Sq\9-!7.(*B!<>Rc'`gcFaoMJtr=o;<p]1Cc8Ga,&8P8IQli@,.9DfM*9GtqQ!&FKf!!r<"!?Ou4
'`]`R!UBad:Abh-:D(YK!&FKf!!r9!!?P)7'`_,&!U9[c(]5!J;TAe<1Aqpf#k\3!*`MtO!E<(l!U0Ub
<rEa6$<P7K!&FKf!!r2t!>/H3'`_D1!U0Ub2uFBj"i^QC1Aqpf#kJ&s>5T*9.2hm]kQ(ZOr"T26`W6&p
r=o;<o)Skr>l5<:?24Na!<?I('`_U\!<=nR'`\O1!<?O*'`^r(!TjC_@Jgi?@`AEK1Aqpf#k@us@h&>N
!!<'!jT,?Jr"T2b`W6&pr=o;<nGrW#r"T3Cr;ks[!(-Su!&)=m!&FKf!!r)q!+Pj@!&4BQirK-Hr"T2b
`W6&pr=o;<nGrY3B)NGG$VCHZ!<>Ia'`]o,!<=nR'`\O/!<<r6'`_n*!<>Ia'`]o,!<=nR'`\O/!<?g2
'`_t,!<>Ia'`]o,!<=nR'`\O/!<H28rY5GK3T0u=6MqPu0?+"m1Aqpf#k%cqCD@T`'`_=p!<>Ia'`]o,
!<=nR'`\O.!<I!Or=o<=iW0$Gr"T2b`W6&pr=o;<mf<E*r"T2JiW0$Gr"T2b`W6'!r=o<Mmf<E,r"T31
iW0$Gr"T2b`W6'"r=oAV1EQ)f!W`=@r=o;JiW0$Gr"T2b`W6'ZlkT:1"=S:JF#37cq#LI^r"T2b`W6']
h\?2=Fa!<Vp]1@]r"T2b`W6&[h%]u;G?a_@pAk7\r"T2b`;os`g_Bj8Dta;+!<>Ia'`]o+!<O<gHefD;
<da]Do`5%Zr"T2b_Z9j01hCpuI0>"7It3+G'`i(kqZ6<i!(-Su!&(/L!Wms%q\9)LquQBi!(-Su!&()J
!>pIe'`eS+rW2Qj!(-Su!&(&I!Acn:'`s$h!V$0j6MqPu0;/CIKa[ho!F-]8!<>Ia'`]n[!<>"T'`\=)
!<>Ia'`]n[!<=AC'`f&(n,WMUr"T2bTE,-4%2BTZ'buMn!<>Ia'`]nZ!<ErNrY5Ehn,WMUr"T2bT)epB
r=o<hn,WMUr"T2bT)epLr=o<in,WMUr"T2bTE,&o2>n6iMXUWH6MqPu0;/CJ!<G(V'`a-\!<>Ia'`]nf
!<e=>NJSkX!WE*"2>n6iMXUWH6MqPu0<>0T<EB)6"#>6)!W<$!2>n6iMXUWH6MqPu0<>0SNr0UmNrf.Z
!&a]i!/g7H!(-Su!&(DS!0I*n!0R-Z!&a]i!/g7H!(-Su!&(DS!0I*n!0R-Z!&a]i!/g7H!(-Su!&(DS
!0I-o!>Uao!<>"U'`a-\!<>Ia'`]ng!<A5\'`o*bOo#.Z2>n6iMXUWH6MqPu0<>0UO;/N0'`aBn!<>"U
'`a-\!<>Ia'`]ng!<J8sr=o<pqZ-[Sr=o<in,WMUr"T2bX8r<_r"T3oqZ-[Sr=o<in,WMUr"T2bX8r<_
r"T3oqZ-[Sr=o<in,WMUr"T2bXT8G'OSfgnOo#.Z2>n6iMXUWH6MqPu0<P<W!<J;['`aBn!<>"U'`a-\
!<>Ia'`]nj!WE*"OSfgnOo#.Z2>n6iMXUWH6MqPu0<bKU!<A5Z'`aBn!<>"U'`a-d!Vl`r6MqPu0D,>I
<BQGeP6-nQ*q]O6OSfgnOo#.Z2>n6iMYR;J!<>Ia'`]o\!<F5]`YAN=*qfU7OSfgnOo#.Z2>n6iMY[AJ
!<>Ia'`]o\!<AD''`aQn!<A5Z'`aBn!<>"U'`a-g!VQNo6MqPu0D5DH?,RHX?M4C"OSfgnOo#.Z2>n6i
MYmMJ!<>Ia'`]o\!<Ge[`YAM"=7uXpOSfgnOo#.Z2>n6iMZ!SJ!<>Ia'`]o[!<FE*a;"^iB_;B+OSfgn
Oo#.Z2>n6iMZ*YJ!<>Ia'`]oY!<AJ/@fTa)!<A5Z'`aBn!<>"U'`s6n!V-6k6MqPu0<>0SOSfgnOo#.Z
2>n6jM?35J!(-Su!&(DS!0I*n!0R-Z!&a]i!/g7H!(-Su!&(DS!0I*n!0R-Z!&a]i!/g7H!(-Su!&(DS
!0I*n!0R-Z!&a`j!>UL]!<>Ia'`]oZ!<F7"b*W3t*qTI5OSfgnOo#.\2&-i-'buVq!<>Ia'`]o[!<HL^
a;"_IRe6[]OSfgnOo#.[2&6**!/g7H!(-Su!&+$H!K0an'`jd_p&P/Tr"T3oqZ-[Sr=o<in,WMUr"T2b
p&P.M`"`9Bp&P/Tr"T3oqZ-[Sr=o<in,WMUr"T2bp&P/a`"`8*p&P/Tr"T3oquHg!2>n6iMXUWH6MqPu
0D5DI*X'It!/L4J!0I*n!0R3\!W`<Zr=o<in,WMUr"T2bo`5+83dSpq!hQ#*o`5&Sr"T3orW3!!!&a]i
!/g7H!(-Su!&(DS!0I*n!g*Kar;cmUr=o<in,WMUr"T2bX8r<_r"T6p!W2ru2>n6iMXUWH6MqPu0<>0S
OSfgnOo#.Z2>n6iMXUWH6MqPu0<>0SOSfgnOo#.Z2>n6iMXUWH6MqPu0D,>I2j9-ATE6:"=7lRoOSomp
'p8@o!&a]i!/g7H!(-Su!&+$H!F%S('`h>Qp&P/TrY5JL'p8@o!&a]i!/g7H!(-Su!&+$H!+*SY!,_E1
!g"-3rY5EqqZ-[Sr=o<in,WM-r"T4&p&P.@`"`9Gp&P2g(&\jI4So-Z2>n6iMXUWHU\ki,O7iSTUk?Z%
!HME<!<?d1'`b*-!<>"U'`a-\!<B"p'`^Sn!<S[eElqtq<2_bK!<@HD'`^/h!<>"U'`a-\!<APc'`]5U
!<E4Hr"T3MqZ-[Sr=o<in,WP2E;^LP/7Yja!Wf8.r=o<5q>gRRr=o<imf<Egr"T44YQ4e+!>kYK!%.OC
!&a]i!/g4G!2fZ/!N^[S!<W?'2d#tm!&+0L!&a]i!/gOPp]1C:EVpOP2'0%(!ED\g'`edcq>gRRr=o<i
q#U0i!2]Q-!3NR.!?Ou4'``+H!<>"U'`a-f!V?BmY58q7JlT5[!?&*<'`bK5!<>"U'`a-g!V6<mZ)mg;
!DJN`!<GVCq\9-H!r)cr2>n6iMYmMF!<I$`q\92@;kc@f!<QK2ZhbC;$_R.o!&a]i!/g^Umf<DCp_<l_
Zp;%;P684.+V"2]!/C1J!&a]i!/gaVm/[6rH`e(a.(AjM!&a]i!f@!ZlN%$?.BjNf1:ZrW!&a]i!K$pB
!<RYK/@6,n.(NFN!<>"U'`a-R!<Ti%XLJuHNG4dM!<>"U'`a-P!<p)PGYGaZ_A*5VAk[Gd)=IS+2?"<k
'oLlL"!47J^&/TF;9WMMV!.m]2&-i-'buV]!<Bk3'`b):!<G%mrY5Ejg]7C`r"T3@ZN1%`r=o<ig]7D0
r"T3tZN1%`r=o<ig]7Dir"T2UZiL1.Zi(U=[+kZ^T)9<'(psAG!<Gmm'`]c>!<<Z.'`aW0!WE*"Jc-;`
Vq_:Q_#+oIRC<4r!<Bt6'``I5!<<6"'`a9(!W<$!_#+oITA0GI4T#oo^:=:C!<KcYr=o>b);G5m\GR'B
MB9A1r;cqc0`2Xc_V5(l<Q"_L!=p6b!W<$"&hEkp!=An^!<A;['`eFL^B+96!Q8UI'`bYp!<Gf-q\96\
Pf7e`_uTuA*l_=dq@s$M=4dNR=n`X5$_,$naN"A&.4Fs+!KFqI!<F7_]G:)S!@2.(!<Ij%^D6DV!ER=j
!<L"?_%lYY!\G3ScN+)#OpAr@pD!a^^rjh$"s1%m:oK2obV8oJ"\V(368fmF!T='0~>

%%EndBinary
grestore
np
grestore
117.636 698.323 mo
107.436 698.323 li
107.436 700.783 li
102.576 695.923 li
107.436 691.063 li
107.436 693.463 li
117.636 693.463 li
117.636 698.323 li
.91147 .75573 .023713 .000397 cmyk
ef
1 /8 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WTDCKO+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2024 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WTDCKO+SimSun-GBK-EUC-H 1 GetGlyphDirectory
10359 <001C60D8A8C9B5EE3100BADB82008FBBB57A6A83ED300529205693CA2
E1B7C6E3BD1A1FDA2B8A4E90F5249B96E19065A0CBA02B1073D110A1AF9CD700
BC44BABC432C53D604E5D65E03B64482363A24204CC05F42CD25322C77CB3E64
0F5A00B62A138469F9120E9D268A9729BE86674A337ACA9F06C78EBB7EE42007
E5A915930F997E860> |
!
end
end end
%ADOEndSubsetFont
/WTDCKO+SimSun-GBK-EUC-H-Identity-H findfont [0 -10.5209 -10.5209 0 0 0 ]msf
208.896 740.863 mo
(\015.\(w)
[-10.4999 0 ]ysh
164.496 693.463 mo
174.696 693.463 li
174.696 691.063 li
179.556 695.923 li
174.696 700.783 li
174.696 698.323 li
164.496 698.323 li
164.496 693.463 li
.91147 .75573 .023713 .000397 cmyk
ef
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 ]]
] del_res
/WTDCKO+SimSun-GBK-EUC-H-Identity-H uf
/WTDCKO+SimSun-GBK-EUC-H /CIDFont ur
/WTDCKN+TimesNewRomanPSMT-Identity-H uf
/WTDCKN+TimesNewRomanPSMT /CIDFont ur
/WTDCKM+TimesNewRomanPS-BoldMT-Identity-H uf
/WTDCKM+TimesNewRomanPS-BoldMT /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
